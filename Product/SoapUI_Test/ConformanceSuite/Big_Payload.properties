Payload=<ClinicalDocument xmlns="urn:hl7-org:v3" xmlns:voc="urn:hl7-org:v3/voc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:hl7-org:v3 http://xreg2.nist.gov:8080/hitspValidation/schema/cdar2c32/infrastructure/cda/C32_CDA.xsd">
	<!-- 
    ********************************************************
    CDA Header
    ********************************************************
    -->
    <!-- HITSP C32 V2.5:  Add realmCode -->
    <realmCode code="US"/>
	<!-- Following template is HL7 CDA Release 2 -->
	<!-- POCD_HD000040 is for Lab.Report.Clinical.Document -->
	<typeId extension="POCD_HD000040" root="2.16.840.1.113883.1.3"/>
	<!-- HITSP C32 V2.5:  Template for IHE PCC Medical Documents specification -->
	<templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.1"/>
	<!-- Following template is the CCD v1.0 Templates Root -->
	<templateId root="2.16.840.1.113883.10.20.1"/>
	<!-- HITSP C32 V2.5:  Template for HL7 General Header constraints-->
	<templateId root="2.16.840.1.113883.10.20.3"/>
	<!-- Following template is the HITSP/C32 Registration and Medication Template -->
	<templateId root="2.16.840.1.113883.3.88.11.32.1"/>
	<!-- HITSP C32 V2.5:  Template for HITSP C32 V2.5 -->
	<templateId root="2.16.840.1.113883.3.88.11.83.1"/>
	<!-- CDA Document Identifer, id=VA OID, extension=system-generated -->
	<id extension="5767e8b3-9f43-4e07-a526-4e4641c86f5d" root="2.16.840.1.113883.3.333"/>
	<!-- CDA Document Code -->
	<code code="34133-9" codeSystem="2.16.840.1.113883.6.1" displayName="Summarization of Episode Note"/>
	<!-- CDA Document Title -->
	<title>CONNECT Testgateway3 Summarization of Episode Note</title>
	<!-- 1.01 DOCUMENT TIMESTAMP, REQUIRED -->
	<effectiveTime value="20100610125317-0500"/>
	<!-- CDA Confidentiality Code -->
	<confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25"/>
	<!-- CDA DOCUMENT LANGUAGE -->
	<languageCode code="en-US"/>
	<!-- 
	********************************************************
	PERSON INFORMATION CONTENT MODULE, REQUIRED
	********************************************************
	-->
    <recordTarget>
        <patientRole>
			<!-- 1.02 PERSON ID, REQUIRED, id=VA OID, extension=GUID -->
            <id extension="VA700001" root="2.16.840.1.113883.3.333"/>
			<!--  1.03 PERSON ADDRESS-HOME PERMANENT, REQUIRED -->
            <addr use="HP">
                <streetAddressLine>1234 Howard St.</streetAddressLine>
                <city>LA JOLLA</city>
                <state>CA</state>
                <postalCode>92038</postalCode>
            </addr>
			<!-- 1.04 PERSON PHONE/EMAIL/URL, REQUIRED -->
            <telecom use="HP" value="tel:+(760)222-5555"/>
            <patient>
				<!--  1.05 PERSON NAME LEGAL, REQUIRED -->
                <name use="L">
                    
                    <given>CHDRONE</given>
                    <family>CHDRZZZTESTPATIENT</family>
                    
                </name>
				<!--  1.05 PERSON NAME Alias Name, Optional -->
                <name use="P">
                    
                    <given nullFlavor="UNK"/>
                    <family nullFlavor="UNK"/>
                    
                </name>
				<!-- HITSP C32 V2.5: 1.06 GENDER, REQUIRED AND REQUIRED Terminology -->
				<!-- HITSP C32 V2.5: When Vista value is M, F, send as HL7AdminGenderCode  -->
				<!-- HITSP C32 V2.5: When Vista value is "Unknown", send as genderCode nullFlavor=UNK"  -->
                <administrativeGenderCode code="M" codeSystem="2.16.840.1.113883.5.1" codeSystemName="AdministrativeGenderCode" displayName="Male">
					<originalText>MALE^M</originalText>
				</administrativeGenderCode>
				<!-- 1.07 PERSON DATE OF BIRTH, REQUIRED -->
                <birthTime value="19600303"/>
				<!--  1.08 MARITAL STATUS, Optional-R2 -->
				<!-- VLER SEG 1B:  Send as HL7 MaritalStatus  -->
				<maritalStatusCode code="M" codeSystem="2.16.840.1.113883.5.2" codeSystemName="MaritalStatusCode" displayName="Married">
					<originalText>MARRIED^M</originalText>
				</maritalStatusCode>
				<!--  1.09 RELIGIOUS AFFILIATION, Optional, Removed b/c data not yet available via VA VIstA RPCs-->
				<!--  1.10 RACE, Optional -->
				<!--  1.10 RACE as originalText per NHIN Core Content Specification b/c VA code translation not yet available -->
                <raceCode codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" nullFlavor="UNK">
                    
                </raceCode>
				<!-- 1.11 ETHNICITY, Optional -->
				<!-- 1.11 ETHNICITY as originalText per NHIN Core Content Specification b/c VA code translation not yet available -->
                <ethnicGroupCode codeSystem="2.16.840.1.113883.6.238" codeSystemName="CDC Race and Ethnicity" nullFlavor="UNK">
                    
                </ethnicGroupCode>
				<!-- 
				********************************************************
				LANGUAGE SPOKEN CONTENT MODULE
				********************************************************
				-->
                <languageCommunication>
                    <templateId root="2.16.840.1.113883.3.88.11.32.2"/>
					<!--  2.01 LANGUAGE, REQUIRED, languageCode as nullFlavor b/c data not yet available via VA VistA RPCs -->
                    <languageCode nullFlavor="UNK"/>
                </languageCommunication>
            </patient>
        </patientRole>
    </recordTarget>
	<!-- 
	********************************************************
	INFORMATION SOURCE CONTENT MODULE, REQUIRED
	********************************************************
	-->
	<!-- AUTHOR SECTION (REQUIRED) OF INFORMATION SOURCE CONTENT MODULE -->
	<author>
		<!-- 10.01 AUTHOR TIME (=Document Creation Date), REQUIRED -->
		<time value="20100610125317-0500"/>
		<assignedAuthor>
			<!-- 10.02 AUTHOR ID (VA OID) (authorOID), REQUIIRED -->
			<id root="2.16.840.1.113883.3.333"/>
			<!-- HITSP C32 V2.5:  Assigned Author Address Required, but VA VistA data not yet available -->
			<addr/>
			<!-- HITSP C32 V2.5:  Assigned Author  Telecom Required, but VA VistA data not yet available -->
			<telecom/>
			<!-- 10.02 AUTHOR NAME REQUIRED -->
			<!-- HITSP C32 V2.5:  C83  assignedPerson/Author Name REQUIRED but provided as representedOrganization-->
			<assignedPerson>
				<name/>
			</assignedPerson>
			<!-- 10.02 AUTHOR NAME REQUIRED as representedOrganization-->
			<representedOrganization>
				<!-- 10.02 AUTHORING DEVICE ORGANIZATION OID (VA OID) (deviceOrgOID), REQUIIRED -->
				<id root="2.16.840.1.113883.3.333"/>
				<!-- 10.02 AUTHORING DEVICE ORGANIZATION NAME (deviceOrgName), REQUIIRED -->
				<name>CONNECT Testgateway3</name>
				<!-- HITSP C32 V2.5:  Assigned Author  Telecom Required, but VA VistA data not yet available -->
				<telecom/>
				<!-- HITSP C32 V2.5:  Assigned Author Address Required, but VA VistA data not yet available -->
				<addr/>
			</representedOrganization>
		</assignedAuthor>
	</author>
	<!-- INFORMATION SOURCE SECTION (OPTIONAL)OF INFORMATION SOURCE CONTENT MODULE -->
	<!-- 10.06 INFORMATION SOURCE AS AN ORGANIZATION, REQUIRED -->
	<informant>
		<assignedEntity>
			<id nullFlavor="NI"/>
			<!-- HITSP C32 V2.5:   Address Required for informant/assignedEntity, but VA VistA data not yet available -->
			<addr/>
			<!-- HITSP C32 V2.5:    Telecom Required for informant/assignedEntity, but VA VistA data not yet available -->
			<telecom/>
			<!-- HITSP C32 V2.5:  assignedPerson Required for informant/assignedEntity, but VA VistA data not yet available -->
			<assignedPerson>
				<!-- HITSP C32 V2.5:  Name Required for informant/assignedEntity/assignedPerson -->
				<name>CONNECT Testgateway3</name>
			</assignedPerson>
			<representedOrganization>
				<!-- 10.06 INFORMATION SOURCE ORGANIZATION OID (VA OID) (sourceOrgOID), REQUIRED -->
				<id root="2.16.840.1.113883.3.333"/>
				<!-- 10.06 INFORMATION SOURCE ORGANIZATION NAME (sourceOrgName), REQUIRED -->
				<name>CONNECT Testgateway3</name>
				<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
				<telecom/>
				<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
				<addr/>
			</representedOrganization>
		</assignedEntity>
	</informant>
	<!-- 
	********************************************************
	CCD CDA R2 CUSTODIAN AS AN ORGANIZATION, REQUIRED
	********************************************************
	-->
	<custodian>
		<assignedCustodian>
			<representedCustodianOrganization>
				<!-- CCD CDA R2 CUSTODIAN OID (VA) (custodianOID) -->
				<id root="2.16.840.1.113883.3.333"/>
				<!-- CCD CDA R2 CUSTODIAN NAME (custodianName) -->
				<name>CONNECT Testgateway3</name>
				<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
				<telecom/>
				<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
				<addr/>
			</representedCustodianOrganization>
		</assignedCustodian>
	</custodian>
    <!-- 
	********************************************************
	CCD CDA R2 LEGAL AUTHENTICATOR AS AN ORGANIZATION, REQUIRED
	********************************************************
	-->
	<legalAuthenticator>
		<!-- CCD CDA R2 TIME OF AUTHENTICATION -->
		<time value="20100610125317-0500"/>
		<signatureCode code="S"/>
		<assignedEntity>
			<id nullFlavor="NI"/>
			<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
			<addr/>
			<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
			<telecom/>
			<!-- HITSP C32 V2.5:   assigned Person Required for legalAuthenticator/assignedEntity  -->
			<assignedPerson>
				<name>CONNECT Testgateway3</name>
			</assignedPerson>
			<representedOrganization>
				<!-- CCD CDA R2 LEGAL AUTHENTICATOR OID (VA)  -->
				<id root="2.16.840.1.113883.3.333"/>
				<!-- CCD CDA R2 LEGAL AUTHENTICATOR NAME (authenticatorName) -->
				<name>CONNECT Testgateway3</name>
				<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
				<telecom/>
				<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
				<addr/>
			</representedOrganization>
		</assignedEntity>
	</legalAuthenticator>
	<!-- 
    ********************************************************
    SUPPORT CONTENT MODULE, REQUIRED
    ********************************************************
    -->
    <participant typeCode="IND"> <!-- participant block repeated for NOK and ECON -->
        <templateId root="2.16.840.1.113883.3.88.11.32.3"/>
        <!-- HITSP C32 V2.5:    IHE Support Template -->
		<templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
		<!--  3.01 DATE, REQUIRED -->
		<!--  3.01 DATE date as nullFlavor b/c data not yet available via VA VistA RPCs -->
        <time nullFlavor="UNK"/>
		<!--  3.02 CONTACT TYPE, REQUIRED, classCode value determined by VistA value in contactType -->
        <associatedEntity classCode="ECON">
			<!--  3.03 CONTACT RELATIONSHIP as originalText per NHIN Core Content Specification b/c VA code translation not yet available -->
            <code code="UNK" codeSystem="2.16.840.1.113883.5.111" codeSystemName="RoleCode">
                <originalText>WIFE</originalText>
            </code>
			<!--  3.04 CONTACT Addresss, Home Permanent, Optional-R2 -->
            <addr use="HP">
                <streetAddressLine>1234 HOWARD ST.</streetAddressLine>
                <city>LA JOLLA</city>
                <state>CALIFORNIA</state>
                <postalCode>92038</postalCode>
            </addr>
            <!-- HITSP C32 V2.5:    Telecom Required for assignedEntity  -->
			<telecom/>
			<!--  3.05 CONTACT PHONE/EMAIL/URL, Optional-R2,  Removed b/c data not yet available via VA VistA RPCs -->
            <associatedPerson>
				<!-- 3.06 CONTACT NAME, REQUIRED -->
                <name>
                    
                    <given>MARY</given>
                    <given>nameMiddle</given>
                    <family>CHDRZZZTESTPATIENT</family>
                    
                </name>
            </associatedPerson>
        </associatedEntity>
    </participant><participant typeCode="IND"> <!-- participant block repeated for NOK and ECON -->
        <templateId root="2.16.840.1.113883.3.88.11.32.3"/>
        <!-- HITSP C32 V2.5:    IHE Support Template -->
		<templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.4"/>
		<!--  3.01 DATE, REQUIRED -->
		<!--  3.01 DATE date as nullFlavor b/c data not yet available via VA VistA RPCs -->
        <time nullFlavor="UNK"/>
		<!--  3.02 CONTACT TYPE, REQUIRED, classCode value determined by VistA value in contactType -->
        <associatedEntity classCode="NOK">
			<!--  3.03 CONTACT RELATIONSHIP as originalText per NHIN Core Content Specification b/c VA code translation not yet available -->
            <code code="UNK" codeSystem="2.16.840.1.113883.5.111" codeSystemName="RoleCode">
                <originalText>FATHER</originalText>
            </code>
			<!--  3.04 CONTACT Addresss, Home Permanent, Optional-R2 -->
            <addr use="HP">
                <streetAddressLine>333 HAPPY LANE</streetAddressLine><streetAddressLine>APT 3</streetAddressLine>
                <city>LA JOLLA, CA</city>
                <state>CALIFORNIA</state>
                <postalCode>92038</postalCode>
            </addr>
            <!-- HITSP C32 V2.5:    Telecom Required for assignedEntity  -->
			<telecom/>
			<!--  3.05 CONTACT PHONE/EMAIL/URL, Optional-R2,  Removed b/c data not yet available via VA VistA RPCs -->
            <associatedPerson>
				<!-- 3.06 CONTACT NAME, REQUIRED -->
                <name>
                    
                    <given>DAD</given>
                    <given>nameMiddle</given>
                    <family>CHDRZZZTESTPATIENT</family>
                    
                </name>
            </associatedPerson>
        </associatedEntity>
    </participant>
	<!-- 
	********************************************************
	CCD CDA R2 DOCUMENTATION OF MODULE - QUERY META DATA, Optional 
	********************************************************
	-->
    <documentationOf>
        <serviceEvent classCode="PCPR">
            <effectiveTime>
				<!-- QUERY META DATA, SERVICE START TIME, Optional -->
                <low value="19000101000000-0600"/>
				<!-- QUERY META DATA, SERVICE STOP TIME, Optional -->
                <high value="20100610125317-0500"/>
            </effectiveTime>
            <!-- 
			********************************************************
			HEALTHCARE PROVIDER MODULE, OPTIONAL
			********************************************************
			-->
            <performer typeCode="PRF">
                    <!-- Provider Template Id  -->
                    <templateId root="2.16.840.1.113883.3.88.11.32.4"/>
                    <!-- 4.02-PROVIDER ROLE CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
                    <!-- 4.03-PROVIDER ROLE FREE TEXT, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
                    <!-- 4.01-DATE RANGE, Required, nullFlavor b/c data not yet available via VA VistA RPCs -->
                    <time>
                         <high nullFlavor="UNK"/>
                    </time>
				    <assignedEntity>
				        <!-- Provider ID from Problems Module (7.05Treating Provider ID) -->
				        <id extension="provider1" root="2.16.840.1.113883.3.333"/>
				        <!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
						<addr/>
						<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
						<telecom/>
						<assignedPerson>
							<name>INLOES,SONJA</name>
						</assignedPerson>
				    </assignedEntity>
			</performer><performer typeCode="PRF">
                    <!-- Provider Template Id  -->
                    <templateId root="2.16.840.1.113883.3.88.11.32.4"/>
                    <!-- 4.02-PROVIDER ROLE CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
                    <!-- 4.03-PROVIDER ROLE FREE TEXT, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
                    <!-- 4.01-DATE RANGE, Required, nullFlavor b/c data not yet available via VA VistA RPCs -->
                    <time>
                         <high nullFlavor="UNK"/>
                    </time>
				    <assignedEntity>
				        <!-- Provider ID from Problems Module (7.05Treating Provider ID) -->
				        <id extension="provider2" root="2.16.840.1.113883.3.333"/>
				        <!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
						<addr/>
						<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
						<telecom/>
						<assignedPerson>
							<name>INLOES,SONJA</name>
						</assignedPerson>
				    </assignedEntity>
			</performer><performer typeCode="PRF">
                    <!-- Provider Template Id  -->
                    <templateId root="2.16.840.1.113883.3.88.11.32.4"/>
                    <!-- 4.02-PROVIDER ROLE CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
                    <!-- 4.03-PROVIDER ROLE FREE TEXT, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
                    <!-- 4.01-DATE RANGE, Required, nullFlavor b/c data not yet available via VA VistA RPCs -->
                    <time>
                         <high nullFlavor="UNK"/>
                    </time>
				    <assignedEntity>
				        <!-- Provider ID from Problems Module (7.05Treating Provider ID) -->
				        <id extension="provider3" root="2.16.840.1.113883.3.333"/>
				        <!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
						<addr/>
						<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
						<telecom/>
						<assignedPerson>
							<name>HASHEMZADEH,DARIOUSH</name>
						</assignedPerson>
				    </assignedEntity>
			</performer>
        </serviceEvent>
    </documentationOf>
	<!-- CDA Body -->
    <component>
        <structuredBody>
        	<!-- 
			********************************************************
			ALLERGY/DRUG SECTION SECTION
			********************************************************
			-->
			<component>
							<section>
								<!-- CCD Alert Section Template-->
								<templateId root="2.16.840.1.113883.10.20.1.2"/>
								<!-- HITSP C32 V2.5:  Allergy and Adverse Reaction Section Template -->
								<templateId root="2.16.840.1.113883.3.88.11.83.102"/>
								<!-- HITSP C32 V2.5:  IHE Allergies and Other Adverse Reactions  Section Template -->
								<templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.13"/>
									<!-- HITSP C32 V2.5:  CCD Section Conformance code value , static -->
								<code code="48765-2" codeSystem="2.16.840.1.113883.6.1" displayName="Allergies, adverse reactions, alerts"/>
								<title>Allergies</title>
								<!--  ALLERGIES NARRATIVE BLOCK -->
								 <text>
									<!-- VLER SEG 1B: Allergies/Drug Business Rules for Medical Content  -->
									<table border="1" width="100%">
										<thead>
											<tr>
												<th>CONNECT Testgateway3</th>
												<th>Business Rules for Construction of Medical Information</th>
											</tr>
										</thead>
										<tbody>
											<tr>
												<td>Allergies</td>
												<td>This VA Document contains all allergies for the patient, from all VA treatment facilities, but it does not contain allergies that were deleted or entered in error.</td>
											</tr>
											<tr>
												<td colspan="2"> </td>
											</tr>
											<tr>
												<td colspan="2">Allergies/Drug Sensitivities data is provided only in structured XML format, not in the narrative block.</td>
											</tr>
										</tbody>
									</table>
									<!-- 6.05 REACTION-FREE TEXT, repeatable-->
									<content ID="reaction1-1">WHEEZING</content><content ID="reaction1-2">NAUSEA AND VOMITING</content><content ID="reaction2-1">ANXIETY</content><content ID="reaction2-2">APTYALISM</content><content ID="reaction3-1">DROWSINESS</content><content ID="reaction3-2">CONFUSION</content><content ID="reaction3-3">HYPOTENSION</content><content ID="reaction4-1">RASH</content><content ID="reaction5-1">NAUSEA,VOMITING</content><content ID="reaction5-2">CONFUSION</content><content ID="reaction6-1">RASH</content><content ID="reaction7-1">RASH</content><content ID="reaction8-1">ASTHMA</content><content ID="reaction9-1">NAUSEA,VOMITING</content>
									<!-- 6.07 SEVERITY-FREE TEXT, repeatable -->
									<content ID="severity6">SEVERE</content><content ID="severity7">SEVERE</content><content ID="severity8">MODERATE</content><content ID="severity9">MILD</content>
								</text>
								<entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="983" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>CHYSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="282100009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to substance">
													<originalText>O</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20091229141951"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>OUTDOOR MOLD</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction1-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship><entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction1-2"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="983" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>CHYSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20091229142208"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>ASPIRIN</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction2-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship><entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction2-2"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20091231102204"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>RITALIN</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction3-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship><entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction3-2"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship><entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction3-3"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20100115084646"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>LATEX</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction4-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20100506124607"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>PENICILLIN</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction5-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship><entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction5-2"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20100506144720"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>BIAXIN 500MG XL TAB</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												<entryRelationship inversionInd="true" typeCode="SUBJ">
													<!--Template ID for Problem Entry - Allergy Reaction Uses Same Structure -->
													<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6.1"/>
													<observation classCode="OBS" moodCode="EVN">
														<!-- SeverityTemplate ID -->
														<templateId root="2.16.840.1.113883.10.20.1.55"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<!-- CCD Obs ID as nullFlavor  -->
														<id nullFlavor="UNK"/>
														<code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode" displayName="Severity"/>
														<!-- 6.07 SEVERITY-FREE TEXT, optional, Pointer to Narrative Block-->
														<text>
															<reference value="severity6"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.08 SEVERITY CODED, optional, When uncoded only xsi:type="CD" allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction6-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20100506144914"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>LASIX</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												<entryRelationship inversionInd="true" typeCode="SUBJ">
													<!--Template ID for Problem Entry - Allergy Reaction Uses Same Structure -->
													<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6.1"/>
													<observation classCode="OBS" moodCode="EVN">
														<!-- SeverityTemplate ID -->
														<templateId root="2.16.840.1.113883.10.20.1.55"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<!-- CCD Obs ID as nullFlavor  -->
														<id nullFlavor="UNK"/>
														<code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode" displayName="Severity"/>
														<!-- 6.07 SEVERITY-FREE TEXT, optional, Pointer to Narrative Block-->
														<text>
															<reference value="severity7"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.08 SEVERITY CODED, optional, When uncoded only xsi:type="CD" allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction7-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20100506144758"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>BLACK CURRANT</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												<entryRelationship inversionInd="true" typeCode="SUBJ">
													<!--Template ID for Problem Entry - Allergy Reaction Uses Same Structure -->
													<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6.1"/>
													<observation classCode="OBS" moodCode="EVN">
														<!-- SeverityTemplate ID -->
														<templateId root="2.16.840.1.113883.10.20.1.55"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<!-- CCD Obs ID as nullFlavor  -->
														<id nullFlavor="UNK"/>
														<code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode" displayName="Severity"/>
														<!-- 6.07 SEVERITY-FREE TEXT, optional, Pointer to Narrative Block-->
														<text>
															<reference value="severity8"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.08 SEVERITY CODED, optional, When uncoded only xsi:type="CD" allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction8-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry><entry typeCode="DRIV">
									<act classCode="ACT" moodCode="EVN">
										<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.27"/>
										<!-- HITSP C32 V2.5:  Templates for Allergy/Drug Module/Entry -->
										<templateId root="2.16.840.1.113883.3.88.11.83.6"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.3"/>
										<!-- CCD Allergy Act ID as nullflavor -->
										<id nullFlavor="UNK"/>
										<code nullFlavor="NA"/>
										<!-- HITSP C32 V2.5:  IHE Concern Template Requires statusCode and effectiveTime  -->
										<statusCode code="active"/>
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- INFORMATION SOURCE FOR ALLERGIES/DRUG, Optional -->
										<author>
											<!--  ADD TIME TO INFORMATION SOURCE FOR ALLERGIES/DRUG -->
											<time nullFlavor="UNK"/>
											<assignedAuthor>
												<id nullFlavor="NI"/>
												<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
												<addr/>
												<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
												<telecom/>
												<representedOrganization>
													<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
													<id extension="984" root="2.16.840.1.113883.3.333"/>
													<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
													<name>DAYTSHR TEST LAB</name>
													<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
													<telecom/>
													<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
													<addr/>
												</representedOrganization>
											</assignedAuthor>
										</author>
										<entryRelationship inversionInd="false" typeCode="SUBJ">
											<observation classCode="OBS" moodCode="EVN">
												<!-- HITSP C32 V2.5:    Allergy Templates -->
												<templateId root="2.16.840.1.113883.10.20.1.28"/>
												<!-- Alert observation template -->
												<templateId root="2.16.840.1.113883.10.20.1.18"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
												<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
												<!-- HITSP C32 V2.5: IHE Observation Templates Require Id -->
												<id nullFlavor="UNK"/>
												<!-- 6.02 ADVERSE EVENT TYPE, REQUIRED; SNOMED CT  -->
												<!-- HITSP C32 V2.5:  6.02 ADVERSE EVENT TYPE SNOMED CT Terminology Required -->
												<code code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse reaction to drug ">
													<originalText>D</originalText>
												</code>
												<!-- IHE  Status Code fro Observation -->
												<statusCode code="completed"/>
												<!-- 6.01 ADVERSE EVENT DATE, Optional-R2 -->
												<effectiveTime>
													<low value="20100506144840"/>
												</effectiveTime>
												<!-- HITSP C32 V2.5:  IHE Allergy Concern Template Requires value, When uncoded only xsi:type=CD allowed -->
												<value xsi:type="CD"/>
												<!-- HITSP C32 V2.5: Participant block for 6.04-Product Coded -->
												<participant typeCode="CSM">
													<participantRole classCode="MANU">
														<playingEntity classCode="MMAT">
															<!--  6.04 PRODUCT CODED, Optional-R2, Removed b/c data not yet available via VA VistA RPCs -->
																<code code="UNK" nullFlavor="UNK">
																 <originalText>
																	 <reference value="ptr"/>
																 </originalText>
															 </code>
															<!-- 6.03 PRODUCT FREE TEXT, REQUIRED-->
															<name>COPHENE</name>
														</playingEntity>
													</participantRole>
												</participant>
												<!--  SEVERITY ENTRY RELATIONSHIP BLOCK optional, 0 or 1 per Allergy -->
												<entryRelationship inversionInd="true" typeCode="SUBJ">
													<!--Template ID for Problem Entry - Allergy Reaction Uses Same Structure -->
													<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6.1"/>
													<observation classCode="OBS" moodCode="EVN">
														<!-- SeverityTemplate ID -->
														<templateId root="2.16.840.1.113883.10.20.1.55"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<!-- CCD Obs ID as nullFlavor  -->
														<id nullFlavor="UNK"/>
														<code code="SEV" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode" displayName="Severity"/>
														<!-- 6.07 SEVERITY-FREE TEXT, optional, Pointer to Narrative Block-->
														<text>
															<reference value="severity9"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.08 SEVERITY CODED, optional, When uncoded only xsi:type="CD" allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
												<!--  REACTION ENTRYRELATIONSHIP BLOCK optional, repeatable  -->
												<entryRelationship inversionInd="true" typeCode="MFST">
													<observation classCode="OBS" moodCode="EVN">
														<!-- Reaction Template ID -->
														<templateId root="2.16.840.1.113883.10.20.1.54"/>
														<!-- HITSP C32 V2.5:    Allergy Templates -->
														<templateId root="2.16.840.1.113883.10.20.1.28"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
														<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.6"/>
														<id nullFlavor="UNK"/>
														<code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
														<!-- 6.05 REACTION-FREE TEXT, optional,-->
														<text>
															<reference value="reaction9-1"/>
														</text>
														<statusCode code="completed"/>
														<effectiveTime>
															<low nullFlavor="UNK"/>
														</effectiveTime>
														<!-- 6.06 REACTION CODED optional, when uncoded only xsi:type=CD allowed -->
														<value xsi:type="CD"/>
													</observation>
												</entryRelationship>
											</observation>
										</entryRelationship>
									</act>
								</entry>
							</section>
						</component>
			<!-- 
			********************************************************
			PROBLEM/CONDITION SECTION
			********************************************************
			-->
			<component> <!-- Component 2 -->
				<section>
					<!-- CCD Problem Section Template -->
					<templateId root="2.16.840.1.113883.10.20.1.11"/>
					<!-- HITSP C32 V2.5:  Problem Section Template -->
					<templateId root="2.16.840.1.113883.3.88.11.83.103"/>
					<!-- HITSP C32 V2.5:  IHE Active Problems Section Template -->
					<templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.6"/>
					<!-- HITSP C32 V2.5:  C83 - IHE Problem Concern Templates -->
					<!-- templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/
					<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/ -->
					<code code="11450-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Problems"/>
					<title>Problems/Conditions</title>
					<!--  PROBLEMS NARRATIVE BLOCK, Required -->
                    <text>
                        <!-- VLER SEG 1B: Problem/Condition Business Rules for Medical Content  -->
                        <table border="1" width="100%">
							<thead>
								<tr>
									<th>CONNECT Testgateway3</th>
									<th>Business Rules for Construction of Medical Information</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>Probems/Conditions</td>
									<td>This VA Document contains all problems for the patient (active and inactive), from all VA treatment facilities, but it does not contain problems that were deleted.</td>
								</tr>
								<tr>
									<td colspan="2"> </td>
								</tr>
								<tr>
									<td colspan="2">Problem/Condition data is provided only in structured XML format, not in the narrative block.</td>
								</tr>
							</tbody>
						</table>		
						<!--  7.03 PROBLEM NAME as a Reference tag -->
						<paragraph ID="prob1">Hypertension</paragraph><paragraph ID="prob2">Dermatomyositis</paragraph><paragraph ID="prob3">Vomiting</paragraph>
					</text>
					<entry typeCode="DRIV">
						<act classCode="ACT" moodCode="EVN">
							<!-- CCD Problem Act Template -->
							<templateId root="2.16.840.1.113883.10.20.1.27"/>
							<!-- HITSP V2.5:  C83 Templates for Problem Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.7"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
                            <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
                            <!-- CCD Problem Act ID as nullFlavor  -->
							<id nullFlavor="UNK"/>
							<code nullFlavor="NA"/>
							<!-- HITSP V2.5 IHE Problem Concern Templates Requires statusCode -->
							<statusCode code="active"/>
							<!--  7.01 PROBLEM DATE (cda:low), Optional R2 -->
							<effectiveTime>
								<low value="20091209"/>
							</effectiveTime>
						    <!-- 7.05 TREATING PROVIDER id link to HealthCare Provider Entry--> 
                            <performer typeCode="PRF">
                                     <assignedEntity>
											<id extension="provider1" root="2.16.840.1.113883.3.333"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
											<telecom/>
                                      </assignedEntity>
                            </performer>
							<!-- INFORMATION SOURCE FOR PROBLEM, Optional -->
							<author>
								<!-- HITSP C32 V2.5:    Time as nullFlavor because VA VistA data not yet available -->
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<representedOrganization>
										<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
										<id extension="983" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>CHYSHR TEST LAB</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship inversionInd="false" typeCode="SUBJ">
								<!-- CCD Problem observation - Required -->
								<observation classCode="OBS" moodCode="EVN">
									<!-- Problem observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.28"/>
									<!-- HITSP V2.5:  C83 Templates for Problem Module/Entry -->
								    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
								  	<!-- CCD Problem Obs ID as nullFlavor  -->
									<id nullFlavor="UNK"/>
									<!-- 7.02 PROBLEM TYPE, R2, SNOMED CT  -->
									<!-- HITSP C32 V2.5:  7.02 PROBLEM TYPE, Optional SNOMED CT, provided as nullFalvor b/c data not yet available via VA VistA RPCs -->
									<code codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" nullFlavor="UNK">
										<originalText>Problem Type Not Available</originalText>
									</code>
									<!-- 7.03 PROBLEM NAME, REQUIRED -->
									<text>
										<reference value="prob1"/>
									</text>
									<statusCode code="completed"/>
									<!-- HITSP V2.5:  IHE Problem Templates Require low value entry -->
									<effectiveTime>
										<low nullFlavor="UNK"/> 
									</effectiveTime>
									<!--  7.04 PROBLEM CODE, Optional, When uncoded only xsi:type="CD" allowed, Available as ICD-9, not SNOMED CT,  -->
									<!-- HITSP V2.5:  IHE Problem Templates Require value entry -->
									<value xsi:type="CD">
										<translation code="401.9" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM"/>
									</value>
									<!--  7.12 PROBLEM STATUS entryRelationship block, Optional, -->
									<entryRelationship typeCode="REFR">
										<observation classCode="OBS" moodCode="EVN">
										<!-- HITSP C32 V2.5:  CCD Problem status observation template -->
											<templateId root="2.16.840.1.113883.10.20.1.50"/> 
											<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
											<statusCode code="completed"/>
											<!--  HITSP C32 V2.5: 7.12 PROBLEM STATUS  Optional, Translated ftom VistA value -->
											<value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE"/>
										</observation>
									</entryRelationship>
								</observation>
							</entryRelationship>
						</act>
					</entry><entry typeCode="DRIV">
						<act classCode="ACT" moodCode="EVN">
							<!-- CCD Problem Act Template -->
							<templateId root="2.16.840.1.113883.10.20.1.27"/>
							<!-- HITSP V2.5:  C83 Templates for Problem Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.7"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
                            <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
                            <!-- CCD Problem Act ID as nullFlavor  -->
							<id nullFlavor="UNK"/>
							<code nullFlavor="NA"/>
							<!-- HITSP V2.5 IHE Problem Concern Templates Requires statusCode -->
							<statusCode code="active"/>
							<!--  7.01 PROBLEM DATE (cda:low), Optional R2 -->
							<effectiveTime>
								<low value="2005"/>
							</effectiveTime>
						    <!-- 7.05 TREATING PROVIDER id link to HealthCare Provider Entry--> 
                            <performer typeCode="PRF">
                                     <assignedEntity>
											<id extension="provider2" root="2.16.840.1.113883.3.333"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
											<telecom/>
                                      </assignedEntity>
                            </performer>
							<!-- INFORMATION SOURCE FOR PROBLEM, Optional -->
							<author>
								<!-- HITSP C32 V2.5:    Time as nullFlavor because VA VistA data not yet available -->
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<representedOrganization>
										<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
										<id extension="983" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>CHYSHR TEST LAB</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship inversionInd="false" typeCode="SUBJ">
								<!-- CCD Problem observation - Required -->
								<observation classCode="OBS" moodCode="EVN">
									<!-- Problem observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.28"/>
									<!-- HITSP V2.5:  C83 Templates for Problem Module/Entry -->
								    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
								  	<!-- CCD Problem Obs ID as nullFlavor  -->
									<id nullFlavor="UNK"/>
									<!-- 7.02 PROBLEM TYPE, R2, SNOMED CT  -->
									<!-- HITSP C32 V2.5:  7.02 PROBLEM TYPE, Optional SNOMED CT, provided as nullFalvor b/c data not yet available via VA VistA RPCs -->
									<code codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" nullFlavor="UNK">
										<originalText>Problem Type Not Available</originalText>
									</code>
									<!-- 7.03 PROBLEM NAME, REQUIRED -->
									<text>
										<reference value="prob2"/>
									</text>
									<statusCode code="completed"/>
									<!-- HITSP V2.5:  IHE Problem Templates Require low value entry -->
									<effectiveTime>
										<low nullFlavor="UNK"/> 
									</effectiveTime>
									<!--  7.04 PROBLEM CODE, Optional, When uncoded only xsi:type="CD" allowed, Available as ICD-9, not SNOMED CT,  -->
									<!-- HITSP V2.5:  IHE Problem Templates Require value entry -->
									<value xsi:type="CD">
										<translation code="710.3" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM"/>
									</value>
									<!--  7.12 PROBLEM STATUS entryRelationship block, Optional, -->
									<entryRelationship typeCode="REFR">
										<observation classCode="OBS" moodCode="EVN">
										<!-- HITSP C32 V2.5:  CCD Problem status observation template -->
											<templateId root="2.16.840.1.113883.10.20.1.50"/> 
											<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
											<statusCode code="completed"/>
											<!--  HITSP C32 V2.5: 7.12 PROBLEM STATUS  Optional, Translated ftom VistA value -->
											<value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE"/>
										</observation>
									</entryRelationship>
								</observation>
							</entryRelationship>
						</act>
					</entry><entry typeCode="DRIV">
						<act classCode="ACT" moodCode="EVN">
							<!-- CCD Problem Act Template -->
							<templateId root="2.16.840.1.113883.10.20.1.27"/>
							<!-- HITSP V2.5:  C83 Templates for Problem Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.7"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.1"/>
                            <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5.2"/>
                            <!-- CCD Problem Act ID as nullFlavor  -->
							<id nullFlavor="UNK"/>
							<code nullFlavor="NA"/>
							<!-- HITSP V2.5 IHE Problem Concern Templates Requires statusCode -->
							<statusCode code="active"/>
							<!--  7.01 PROBLEM DATE (cda:low), Optional R2 -->
							<effectiveTime>
								<low value="19930728"/>
							</effectiveTime>
						    <!-- 7.05 TREATING PROVIDER id link to HealthCare Provider Entry--> 
                            <performer typeCode="PRF">
                                     <assignedEntity>
											<id extension="provider3" root="2.16.840.1.113883.3.333"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedEntity, but VA VistA data not yet available -->
											<telecom/>
                                      </assignedEntity>
                            </performer>
							<!-- INFORMATION SOURCE FOR PROBLEM, Optional -->
							<author>
								<!-- HITSP C32 V2.5:    Time as nullFlavor because VA VistA data not yet available -->
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<representedOrganization>
										<!-- INFORMATION SOURCE FOR FACILITY ID=VA OID, EXT= VAMC TREATING FACILITY NBR -->
										<id extension="552" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>DAYTON</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship inversionInd="false" typeCode="SUBJ">
								<!-- CCD Problem observation - Required -->
								<observation classCode="OBS" moodCode="EVN">
									<!-- Problem observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.28"/>
									<!-- HITSP V2.5:  C83 Templates for Problem Module/Entry -->
								    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
								  	<!-- CCD Problem Obs ID as nullFlavor  -->
									<id nullFlavor="UNK"/>
									<!-- 7.02 PROBLEM TYPE, R2, SNOMED CT  -->
									<!-- HITSP C32 V2.5:  7.02 PROBLEM TYPE, Optional SNOMED CT, provided as nullFalvor b/c data not yet available via VA VistA RPCs -->
									<code codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" nullFlavor="UNK">
										<originalText>Problem Type Not Available</originalText>
									</code>
									<!-- 7.03 PROBLEM NAME, REQUIRED -->
									<text>
										<reference value="prob3"/>
									</text>
									<statusCode code="completed"/>
									<!-- HITSP V2.5:  IHE Problem Templates Require low value entry -->
									<effectiveTime>
										<low nullFlavor="UNK"/> 
									</effectiveTime>
									<!--  7.04 PROBLEM CODE, Optional, When uncoded only xsi:type="CD" allowed, Available as ICD-9, not SNOMED CT,  -->
									<!-- HITSP V2.5:  IHE Problem Templates Require value entry -->
									<value xsi:type="CD">
										<translation code="787.03" codeSystem="2.16.840.1.113883.6.103" codeSystemName="ICD-9-CM"/>
									</value>
									<!--  7.12 PROBLEM STATUS entryRelationship block, Optional, -->
									<entryRelationship typeCode="REFR">
										<observation classCode="OBS" moodCode="EVN">
										<!-- HITSP C32 V2.5:  CCD Problem status observation template -->
											<templateId root="2.16.840.1.113883.10.20.1.50"/> 
											<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" displayName="Status"/>
											<statusCode code="completed"/>
											<!--  HITSP C32 V2.5: 7.12 PROBLEM STATUS  Optional, Translated ftom VistA value -->
											<value code="55561003" codeSystem="2.16.840.1.113883.6.96" displayName="Active" xsi:type="CE"/>
										</observation>
									</entryRelationship>
								</observation>
							</entryRelationship>
						</act>
					</entry>
                </section>
			</component>
 			<!-- 
			********************************************************
			MEDICATIONS (RX & Non-RX)  SECTION
			********************************************************
			-->
			<component> <!-- Component 3 -->
				<section>
					<!-- CCD Medication Template Id-->
					<templateId root="2.16.840.1.113883.10.20.1.8"/>
					<!-- HITSP C32 V2.5:  Medications Section Template -->
					<templateId root="2.16.840.1.113883.3.88.11.83.112"/>
				    <!-- HITSP C32 V2.5:  IHE Medications Section Template -->
				    <templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.19"/>
					<code code="10160-0" codeSystem="2.16.840.1.113883.6.1"/>
					<title>Medications - Prescription and Non-Prescription</title>
					<!--  MEDICATIONS NARRATIVE BLOCK, REQUIRED -->
					<text>
					<!-- VLER SEG 1B: Medication Business Rules for Medical Content  -->
                        <table border="1" width="100%">
							<thead>
								<tr>
									<th>CONNECT Testgateway3</th>
									<th>Business Rules for Construction of Medical Information</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>Medications</td>
									<td>This VA Document contains all medications (outpatient and self-reported) for the patient, from all VA treatment facilities, where the dispense date was within the last 15 months.   It contains medications that have an active Prescription status and medications that have any non-active Prescription status.</td>
								</tr>
								<tr>
									<td colspan="2"> </td>
								</tr>
								<tr>
									<td colspan="2">Medication data is provided only in structured XML format, not in the narrative block.</td>
								</tr>
							</tbody>
						</table>		
					<!--  8.01-Free Text Sig Reference Tags in Narrative Block -->
						<list listType="unordered">
							<item>
								<content ID="name1">AMLODIPINE BESYLATE 5MG TAB</content>		
							</item><item>
								<content ID="sig1">TAKE ONE-HALF TABLET BY MOUTH EVERY DAY</content>		
							</item><item>
								<content ID="name2">CLOPIDOGREL BISULFATE 75MG TAB</content>		
							</item><item>
								<content ID="sig2">TAKE ONE TABLET BY MOUTH EVERY DAY</content>		
							</item><item>
								<content ID="name3">WARFARIN NA 1MG TAB</content>		
							</item><item>
								<content ID="sig3">TAKE ONE-HALF TABLET BY MOUTH EVERY DAY FOR PREVENTION OF BLOOD CLOTS</content>		
							</item><item>
								<content ID="name4">CLARITHROMYCIN 250MG TAB</content>		
							</item><item>
								<content ID="sig4">TAKE ONE TABLET BY MOUTH DAILY</content>		
							</item>
						</list>
					</text>
					<entry typeCode="DRIV">
						<substanceAdministration classCode="SBADM" moodCode="EVN">
							<!-- CCD Medication Act Template Id -->
							<templateId root="2.16.840.1.113883.10.20.1.24"/>
							<!-- HITSP V2.5:  Templates for Medications Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.8"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
							<templateId assigningAuthorityName="IHE PCC" root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
							<!-- CCD Medication Act ID as nullflavor -->
							<id nullFlavor="UNK"/>
							<!--   8.01 FREE TEXT SIG REFERENCE, Optional -->
							<id assigningAuthorityName="CONNECT Testgateway3" extension="nullFlavor" root="2.16.840.1.113883.3.333"/>
							<text>
								<reference value="sig1"/>					
							</text>
							<statusCode code="completed"/>
							<!-- 8.02 INDICATE MEDICATION STOPPPED, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.03 ADMINISTRATION TIMING, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.04 FREQUENCY, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.05 INTERVAL, Optional,Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.06 DURATION, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.07 ROUTE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.08 DOSE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<consumable>
								<manufacturedProduct>
									<templateId root="2.16.840.1.113883.10.20.1.53"/>
									<!-- HITSP C32 V2.5:  C83 Medication Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
									<!--  Added medications template -->
									<templateId root="2.16.840.1.113883.3.88.11.32.9"/>
									<!-- HITSP C32 V2.5:  C83 Manufactured Material Attributes -->
									<manufacturedMaterial classCode="MMAT" determinerCode="KIND">
										<!--  8.13 CODED PRODUCT NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.14 CODED BRAND NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.15 FREE TEXT PRODUCT NAME, REQUIRED -->
										<code code="UNK" nullFlavor="UNK">
											<originalText>
												<reference value="name1"/>
											</originalText>
										</code>
										<!-- 8.16 FREE TEXT BRAND NAME, Optional R2, Removed b/c data not yet available via VA VistA RPCs -->
									</manufacturedMaterial>
								</manufacturedProduct>
							</consumable>
							<!-- INFORMATION SOURCE FOR MEDICATIONS, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
										<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="442" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>CHEYENNE VAMC</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship typeCode="SUBJ">
								<observation classCode="OBS" moodCode="EVN"> <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
									<!-- VLER SEG 1B:  8.19-TYPE OF MEDICATION, Optional-R2, SNOMED CT -->
									<code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
									<statusCode code="completed"/> 
								</observation>
							</entryRelationship>
							<entryRelationship typeCode="REFR">
								<observation classCode="OBS" moodCode="EVN">
									<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
									<statusCode code="completed"/>
									<!-- VLER SEG 1B: 8.20 STATUS OF MEDICATION, Optional-R2, SNOMED CT -->
									<!--  8.20 STATUS OF MEDICATION as originalText b/c SNOMED CT translation not yet available -->
									<value nullFlavor="UNK" xsi:type="CE">
										<originalText>active</originalText>
									</value>
								</observation>
							</entryRelationship>
							<!-- 8.22 PATIENT INSTRUCTIONS, Optional ,  Removed b/c data not yet available via VA VistA RPCs -->
							<!-- ORDER INFORMATION -->
							<entryRelationship typeCode="REFR">
								<supply classCode="SPLY" moodCode="INT">
									<templateId root="2.16.840.1.113883.10.20.1.34"/>
									<templateId root="2.16.840.1.113883.3.88.11.83.8.3"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3"/>
									<!-- VLER SEG 1B:  8.26 ORDER NUMBER, Optional-R2  -->
									<id extension="2675328" root="2.16.840.1.113883.3.333"/>
									<!-- 8.29 ORDER EXPIRATION DATE/TIME, Optional-R2 -->
									<effectiveTime value="20101230" xsi:type="SXCM_TS"/>
									<!-- VLER SEG 1B:  8.27 FILLS, Optional -->
									<repeatNumber value="3"/>
									<!-- VLER SEG 1B:  8.28 QUANTITY ORDERED, Optional-R2,  Unit attribute omitted b/c VA VistA data not yet available  -->
									<quantity value="45"/>
									<!--  8.31 ORDERING PROVIDER as author/assignedAuthor-->
									<author>
										<!--  VLER SEG 1B:  8.30 ORDER DATE/TIME, Optional-R2 -->
										<time value="20091229142811"/>
										<assignedAuthor>
											<id nullFlavor="UNK"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<assignedPerson>
												<!--  8.31 ORDERING PROVIDER, Optional -->
												<name>INLOES,SONJA</name>
											</assignedPerson>
										</assignedAuthor>
									</author>
								</supply>
							</entryRelationship>
							<!-- FULFILLMENT HISTORY INFORMATION -->
							<entryRelationship typeCode="REFR">
									<supply classCode="SPLY" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.34"/>										
										<!-- 8.34 PRESCRIPTION NUMBER, Optional-R2 -->
										<id extension="762914" root="2.16.840.1.113883.3.333"/>
										<!-- 8.37 DISPENSE DATE, Optional-R2 -->
										<effectiveTime value="20091229"/>										
									</supply>
							</entryRelationship>
						</substanceAdministration>
					</entry><entry typeCode="DRIV">
						<substanceAdministration classCode="SBADM" moodCode="EVN">
							<!-- CCD Medication Act Template Id -->
							<templateId root="2.16.840.1.113883.10.20.1.24"/>
							<!-- HITSP V2.5:  Templates for Medications Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.8"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
							<templateId assigningAuthorityName="IHE PCC" root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
							<!-- CCD Medication Act ID as nullflavor -->
							<id nullFlavor="UNK"/>
							<!--   8.01 FREE TEXT SIG REFERENCE, Optional -->
							<id assigningAuthorityName="CONNECT Testgateway3" extension="nullFlavor" root="2.16.840.1.113883.3.333"/>
							<text>
								<reference value="sig2"/>					
							</text>
							<statusCode code="completed"/>
							<!-- 8.02 INDICATE MEDICATION STOPPPED, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.03 ADMINISTRATION TIMING, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.04 FREQUENCY, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.05 INTERVAL, Optional,Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.06 DURATION, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.07 ROUTE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.08 DOSE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<consumable>
								<manufacturedProduct>
									<templateId root="2.16.840.1.113883.10.20.1.53"/>
									<!-- HITSP C32 V2.5:  C83 Medication Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
									<!--  Added medications template -->
									<templateId root="2.16.840.1.113883.3.88.11.32.9"/>
									<!-- HITSP C32 V2.5:  C83 Manufactured Material Attributes -->
									<manufacturedMaterial classCode="MMAT" determinerCode="KIND">
										<!--  8.13 CODED PRODUCT NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.14 CODED BRAND NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.15 FREE TEXT PRODUCT NAME, REQUIRED -->
										<code code="UNK" nullFlavor="UNK">
											<originalText>
												<reference value="name2"/>
											</originalText>
										</code>
										<!-- 8.16 FREE TEXT BRAND NAME, Optional R2, Removed b/c data not yet available via VA VistA RPCs -->
									</manufacturedMaterial>
								</manufacturedProduct>
							</consumable>
							<!-- INFORMATION SOURCE FOR MEDICATIONS, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
										<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="442" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>CHEYENNE VAMC</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship typeCode="SUBJ">
								<observation classCode="OBS" moodCode="EVN"> <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
									<!-- VLER SEG 1B:  8.19-TYPE OF MEDICATION, Optional-R2, SNOMED CT -->
									<code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
									<statusCode code="completed"/> 
								</observation>
							</entryRelationship>
							<entryRelationship typeCode="REFR">
								<observation classCode="OBS" moodCode="EVN">
									<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
									<statusCode code="completed"/>
									<!-- VLER SEG 1B: 8.20 STATUS OF MEDICATION, Optional-R2, SNOMED CT -->
									<!--  8.20 STATUS OF MEDICATION as originalText b/c SNOMED CT translation not yet available -->
									<value nullFlavor="UNK" xsi:type="CE">
										<originalText>active</originalText>
									</value>
								</observation>
							</entryRelationship>
							<!-- 8.22 PATIENT INSTRUCTIONS, Optional ,  Removed b/c data not yet available via VA VistA RPCs -->
							<!-- ORDER INFORMATION -->
							<entryRelationship typeCode="REFR">
								<supply classCode="SPLY" moodCode="INT">
									<templateId root="2.16.840.1.113883.10.20.1.34"/>
									<templateId root="2.16.840.1.113883.3.88.11.83.8.3"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3"/>
									<!-- VLER SEG 1B:  8.26 ORDER NUMBER, Optional-R2  -->
									<id extension="2675327" root="2.16.840.1.113883.3.333"/>
									<!-- 8.29 ORDER EXPIRATION DATE/TIME, Optional-R2 -->
									<effectiveTime value="20101230" xsi:type="SXCM_TS"/>
									<!-- VLER SEG 1B:  8.27 FILLS, Optional -->
									<repeatNumber value="3"/>
									<!-- VLER SEG 1B:  8.28 QUANTITY ORDERED, Optional-R2,  Unit attribute omitted b/c VA VistA data not yet available  -->
									<quantity value="90"/>
									<!--  8.31 ORDERING PROVIDER as author/assignedAuthor-->
									<author>
										<!--  VLER SEG 1B:  8.30 ORDER DATE/TIME, Optional-R2 -->
										<time value="20091229142856"/>
										<assignedAuthor>
											<id nullFlavor="UNK"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<assignedPerson>
												<!--  8.31 ORDERING PROVIDER, Optional -->
												<name>INLOES,SONJA</name>
											</assignedPerson>
										</assignedAuthor>
									</author>
								</supply>
							</entryRelationship>
							<!-- FULFILLMENT HISTORY INFORMATION -->
							<entryRelationship typeCode="REFR">
									<supply classCode="SPLY" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.34"/>										
										<!-- 8.34 PRESCRIPTION NUMBER, Optional-R2 -->
										<id extension="762915" root="2.16.840.1.113883.3.333"/>
										<!-- 8.37 DISPENSE DATE, Optional-R2 -->
										<effectiveTime value="20091229"/>										
									</supply>
							</entryRelationship>
						</substanceAdministration>
					</entry><entry typeCode="DRIV">
						<substanceAdministration classCode="SBADM" moodCode="EVN">
							<!-- CCD Medication Act Template Id -->
							<templateId root="2.16.840.1.113883.10.20.1.24"/>
							<!-- HITSP V2.5:  Templates for Medications Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.8"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
							<templateId assigningAuthorityName="IHE PCC" root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
							<!-- CCD Medication Act ID as nullflavor -->
							<id nullFlavor="UNK"/>
							<!--   8.01 FREE TEXT SIG REFERENCE, Optional -->
							<id assigningAuthorityName="CONNECT Testgateway3" extension="nullFlavor" root="2.16.840.1.113883.3.333"/>
							<text>
								<reference value="sig3"/>					
							</text>
							<statusCode code="completed"/>
							<!-- 8.02 INDICATE MEDICATION STOPPPED, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.03 ADMINISTRATION TIMING, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.04 FREQUENCY, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.05 INTERVAL, Optional,Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.06 DURATION, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.07 ROUTE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.08 DOSE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<consumable>
								<manufacturedProduct>
									<templateId root="2.16.840.1.113883.10.20.1.53"/>
									<!-- HITSP C32 V2.5:  C83 Medication Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
									<!--  Added medications template -->
									<templateId root="2.16.840.1.113883.3.88.11.32.9"/>
									<!-- HITSP C32 V2.5:  C83 Manufactured Material Attributes -->
									<manufacturedMaterial classCode="MMAT" determinerCode="KIND">
										<!--  8.13 CODED PRODUCT NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.14 CODED BRAND NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.15 FREE TEXT PRODUCT NAME, REQUIRED -->
										<code code="UNK" nullFlavor="UNK">
											<originalText>
												<reference value="name3"/>
											</originalText>
										</code>
										<!-- 8.16 FREE TEXT BRAND NAME, Optional R2, Removed b/c data not yet available via VA VistA RPCs -->
									</manufacturedMaterial>
								</manufacturedProduct>
							</consumable>
							<!-- INFORMATION SOURCE FOR MEDICATIONS, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
										<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="442" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>CHEYENNE VAMC</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship typeCode="SUBJ">
								<observation classCode="OBS" moodCode="EVN"> <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
									<!-- VLER SEG 1B:  8.19-TYPE OF MEDICATION, Optional-R2, SNOMED CT -->
									<code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
									<statusCode code="completed"/> 
								</observation>
							</entryRelationship>
							<entryRelationship typeCode="REFR">
								<observation classCode="OBS" moodCode="EVN">
									<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
									<statusCode code="completed"/>
									<!-- VLER SEG 1B: 8.20 STATUS OF MEDICATION, Optional-R2, SNOMED CT -->
									<!--  8.20 STATUS OF MEDICATION as originalText b/c SNOMED CT translation not yet available -->
									<value nullFlavor="UNK" xsi:type="CE">
										<originalText>active</originalText>
									</value>
								</observation>
							</entryRelationship>
							<!-- 8.22 PATIENT INSTRUCTIONS, Optional ,  Removed b/c data not yet available via VA VistA RPCs -->
							<!-- ORDER INFORMATION -->
							<entryRelationship typeCode="REFR">
								<supply classCode="SPLY" moodCode="INT">
									<templateId root="2.16.840.1.113883.10.20.1.34"/>
									<templateId root="2.16.840.1.113883.3.88.11.83.8.3"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3"/>
									<!-- VLER SEG 1B:  8.26 ORDER NUMBER, Optional-R2  -->
									<id extension="2675326" root="2.16.840.1.113883.3.333"/>
									<!-- 8.29 ORDER EXPIRATION DATE/TIME, Optional-R2 -->
									<effectiveTime value="20101230" xsi:type="SXCM_TS"/>
									<!-- VLER SEG 1B:  8.27 FILLS, Optional -->
									<repeatNumber value="3"/>
									<!-- VLER SEG 1B:  8.28 QUANTITY ORDERED, Optional-R2,  Unit attribute omitted b/c VA VistA data not yet available  -->
									<quantity value="45"/>
									<!--  8.31 ORDERING PROVIDER as author/assignedAuthor-->
									<author>
										<!--  VLER SEG 1B:  8.30 ORDER DATE/TIME, Optional-R2 -->
										<time value="20091229142914"/>
										<assignedAuthor>
											<id nullFlavor="UNK"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<assignedPerson>
												<!--  8.31 ORDERING PROVIDER, Optional -->
												<name>INLOES,SONJA</name>
											</assignedPerson>
										</assignedAuthor>
									</author>
								</supply>
							</entryRelationship>
							<!-- FULFILLMENT HISTORY INFORMATION -->
							<entryRelationship typeCode="REFR">
									<supply classCode="SPLY" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.34"/>										
										<!-- 8.34 PRESCRIPTION NUMBER, Optional-R2 -->
										<id extension="762916" root="2.16.840.1.113883.3.333"/>
										<!-- 8.37 DISPENSE DATE, Optional-R2 -->
										<effectiveTime value="20091229"/>										
									</supply>
							</entryRelationship>
						</substanceAdministration>
					</entry><entry typeCode="DRIV">
						<substanceAdministration classCode="SBADM" moodCode="EVN">
							<!-- CCD Medication Act Template Id -->
							<templateId root="2.16.840.1.113883.10.20.1.24"/>
							<!-- HITSP V2.5:  Templates for Medications Module/Entry -->
							<templateId root="2.16.840.1.113883.3.88.11.83.8"/>
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7"/>
							<templateId assigningAuthorityName="IHE PCC" root="1.3.6.1.4.1.19376.1.5.3.1.4.7.1"/>
							<!-- CCD Medication Act ID as nullflavor -->
							<id nullFlavor="UNK"/>
							<!--   8.01 FREE TEXT SIG REFERENCE, Optional -->
							<id assigningAuthorityName="CONNECT Testgateway3" extension="nullFlavor" root="2.16.840.1.113883.3.333"/>
							<text>
								<reference value="sig4"/>					
							</text>
							<statusCode code="completed"/>
							<!-- 8.02 INDICATE MEDICATION STOPPPED, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.03 ADMINISTRATION TIMING, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.04 FREQUENCY, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.05 INTERVAL, Optional,Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.06 DURATION, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.07 ROUTE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<!-- 8.08 DOSE, Optional, Removed b/c data not yet available via VA VistA RPCs -->
							<consumable>
								<manufacturedProduct>
									<templateId root="2.16.840.1.113883.10.20.1.53"/>
									<!-- HITSP C32 V2.5:  C83 Medication Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.8.2"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
									<!--  Added medications template -->
									<templateId root="2.16.840.1.113883.3.88.11.32.9"/>
									<!-- HITSP C32 V2.5:  C83 Manufactured Material Attributes -->
									<manufacturedMaterial classCode="MMAT" determinerCode="KIND">
										<!--  8.13 CODED PRODUCT NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.14 CODED BRAND NAME, Optional-R2, UNII, RXNorm, NDF-RT, NDC, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- 8.15 FREE TEXT PRODUCT NAME, REQUIRED -->
										<code code="UNK" nullFlavor="UNK">
											<originalText>
												<reference value="name4"/>
											</originalText>
										</code>
										<!-- 8.16 FREE TEXT BRAND NAME, Optional R2, Removed b/c data not yet available via VA VistA RPCs -->
									</manufacturedMaterial>
								</manufacturedProduct>
							</consumable>
							<!-- INFORMATION SOURCE FOR MEDICATIONS, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
										<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="552" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>DAYTON</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<entryRelationship typeCode="SUBJ">
								<observation classCode="OBS" moodCode="EVN"> <templateId root="2.16.840.1.113883.3.88.11.83.8.1"/>
									<!-- VLER SEG 1B:  8.19-TYPE OF MEDICATION, Optional-R2, SNOMED CT -->
									<code code="73639000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Prescription Drug"/>
									<statusCode code="completed"/> 
								</observation>
							</entryRelationship>
							<entryRelationship typeCode="REFR">
								<observation classCode="OBS" moodCode="EVN">
									<code code="33999-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
									<statusCode code="completed"/>
									<!-- VLER SEG 1B: 8.20 STATUS OF MEDICATION, Optional-R2, SNOMED CT -->
									<!--  8.20 STATUS OF MEDICATION as originalText b/c SNOMED CT translation not yet available -->
									<value nullFlavor="UNK" xsi:type="CE">
										<originalText>active</originalText>
									</value>
								</observation>
							</entryRelationship>
							<!-- 8.22 PATIENT INSTRUCTIONS, Optional ,  Removed b/c data not yet available via VA VistA RPCs -->
							<!-- ORDER INFORMATION -->
							<entryRelationship typeCode="REFR">
								<supply classCode="SPLY" moodCode="INT">
									<templateId root="2.16.840.1.113883.10.20.1.34"/>
									<templateId root="2.16.840.1.113883.3.88.11.83.8.3"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.3"/>
									<!-- VLER SEG 1B:  8.26 ORDER NUMBER, Optional-R2  -->
									<id extension="12979681" root="2.16.840.1.113883.3.333"/>
									<!-- 8.29 ORDER EXPIRATION DATE/TIME, Optional-R2 -->
									<effectiveTime value="20110101" xsi:type="SXCM_TS"/>
									<!-- VLER SEG 1B:  8.27 FILLS, Optional -->
									<repeatNumber value="3"/>
									<!-- VLER SEG 1B:  8.28 QUANTITY ORDERED, Optional-R2,  Unit attribute omitted b/c VA VistA data not yet available  -->
									<quantity value="90"/>
									<!--  8.31 ORDERING PROVIDER as author/assignedAuthor-->
									<author>
										<!--  VLER SEG 1B:  8.30 ORDER DATE/TIME, Optional-R2 -->
										<time value="200912311025"/>
										<assignedAuthor>
											<id nullFlavor="UNK"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<assignedPerson>
												<!--  8.31 ORDERING PROVIDER, Optional -->
												<name>HASHEMZADEH,DARIOUSH</name>
											</assignedPerson>
										</assignedAuthor>
									</author>
								</supply>
							</entryRelationship>
							<!-- FULFILLMENT HISTORY INFORMATION -->
							<entryRelationship typeCode="REFR">
									<supply classCode="SPLY" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.34"/>										
										<!-- 8.34 PRESCRIPTION NUMBER, Optional-R2 -->
										<id extension="2718221" root="2.16.840.1.113883.3.333"/>
										<!-- 8.37 DISPENSE DATE, Optional-R2 -->
										<effectiveTime value="20091231"/>										
									</supply>
							</entryRelationship>
						</substanceAdministration>
					</entry>
				</section>
			</component>
			<!-- 
			********************************************************
			VLER SEG 1B:  VITAL SIGNS SECTION
			********************************************************
			-->
			<component> <!-- Component 4 -->
				<section>
					<!-- HITSP C32 V2.5:  HL7 CCD Vital signs section template -->
					<templateId root="2.16.840.1.113883.10.20.1.16"/> 
					<!-- HITSP C32 V2.5:  HITSP CDA Vital Signs Section Template -->
					<templateId root="2.16.840.1.113883.3.88.11.83.119"/> 
					<!-- HITSP C32 V2.5:  IHE Coded Vital Signs Section Templates -->
					<templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.25"/> 
					<templateId root="1.3.6.1.4.1.19376.1.5.3.1.1.5.3.2"/> 
					<!-- HITSP C32 V2.5:  HL7 CCD 8716-3 LOINC Code for Physical Findings/Vital Signs -->
					<code code="8716-3" codeSystem="2.16.840.1.113883.6.1" displayName="VITAL SIGNS"/>
					<title>Vital Signs</title>
					<!--  VITAL SIGNS NARRATIVE BLOCK , REQUIRED -->
					<text>
					 <!-- VLER SEG 1B: Vital Signs Business Rules for Medical Content  -->
						<table border="1" width="100%">
							<thead>
								<tr>
									<th>CONNECT Testgateway3</th>
									<th>Business Rules for Construction of Medical Information</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>Vital Signs</td>
									<td>This VA Document contains all vital signs (inpatient and outpatient) for the patient, from all VA treatment facilities, where the panel Date Taken is within 12 months up to a maximum of the 10 most recent panels.  If more than one panel was taken on the same date, only the most recent panel is populated for that date. 
									</td>
								</tr>
								<tr>
									<td colspan="2"> </td>
								</tr>
								<tr>
									<td colspan="2">Vital Sign data is provided only in structured XML format, not in the narrative block.</td>
								</tr>
							</tbody>
						</table>
							<!--  CDA Observation Text as a Reference tag -->
							<paragraph ID="vital1">Vital Sign Observation Text Not Available</paragraph>
					</text>          
					<entry typeCode="DRIV"> <!-- Repeat Entry/Organizer block for each vital sign panel -->
						<organizer classCode="CLUSTER" moodCode="EVN">
							<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, Organizer parent templates -->
							<templateId root="2.16.840.1.113883.10.20.1.32"/> 
							<templateId root="2.16.840.1.113883.10.20.1.35"/> 
							<!-- HITSP C32 V2.5:  Vital Signs Organizer Template, REQUIRED -->
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.1"/> 
							<!-- Vital Sign Organizer ID as nullFlavor b/c data not yet available via VA VistA RPCs -->
							<id nullFlavor="UNK"/>
							<code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs"/>
							<statusCode code="completed"/>
							<!-- HITSP C32 V2.5:  All Vital Signs Recorded on this date will be grouped under the observation block -->
							<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
							<effectiveTime value="20100421112107"/>
							<!-- INFORMATION SOURCE FOR VITAL SIGN ORGANIZER/PANEL, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
											<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="552" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>DAYTON</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<!-- HITSP C32 V2.5:  One component block for each Vital Sign -->
							<component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543081" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8302-2" codeSystem="2.16.840.1.113883.6.1" displayName="Bdy height"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421113539"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="in" value="70" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543076" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8867-4" codeSystem="2.16.840.1.113883.6.1" displayName="Heart rate"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421113539"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="73" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543077" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="9279-1" codeSystem="2.16.840.1.113883.6.1" displayName="Respiratory rate"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421113539"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="80" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543080" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8310-5" codeSystem="2.16.840.1.113883.6.1" displayName="Bdy temp"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421113539"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="F" value="100" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543078-s" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8480-6" codeSystem="2.16.840.1.113883.6.1" displayName="BP sys"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421113539"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="140" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543078-d" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8462-4" codeSystem="2.16.840.1.113883.6.1" displayName="BP dias"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421113539"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="85" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component>
						</organizer>
					</entry><entry typeCode="DRIV"> <!-- Repeat Entry/Organizer block for each vital sign panel -->
						<organizer classCode="CLUSTER" moodCode="EVN">
							<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, Organizer parent templates -->
							<templateId root="2.16.840.1.113883.10.20.1.32"/> 
							<templateId root="2.16.840.1.113883.10.20.1.35"/> 
							<!-- HITSP C32 V2.5:  Vital Signs Organizer Template, REQUIRED -->
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.1"/> 
							<!-- Vital Sign Organizer ID as nullFlavor b/c data not yet available via VA VistA RPCs -->
							<id nullFlavor="UNK"/>
							<code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs"/>
							<statusCode code="completed"/>
							<!-- HITSP C32 V2.5:  All Vital Signs Recorded on this date will be grouped under the observation block -->
							<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
							<effectiveTime value="20100223101453"/>
							<!-- INFORMATION SOURCE FOR VITAL SIGN ORGANIZER/PANEL, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
											<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="442" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>CHEYENNE VAMC</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<!-- HITSP C32 V2.5:  One component block for each Vital Sign -->
							<component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449863" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8302-2" codeSystem="2.16.840.1.113883.6.1" displayName="Bdy height"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="in" value="72" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449857" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8867-4" codeSystem="2.16.840.1.113883.6.1" displayName="Heart rate"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="76" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449861" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="2710-2" codeSystem="2.16.840.1.113883.6.1" displayName="BldC O2 % MFr Oximetry"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="99" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449858" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="9279-1" codeSystem="2.16.840.1.113883.6.1" displayName="Respiratory rate"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="20" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449856" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8310-5" codeSystem="2.16.840.1.113883.6.1" displayName="Bdy temp"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="F" value="98.6" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449860" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="29463-7" codeSystem="2.16.840.1.113883.6.1" displayName="Weight"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="lb" value="210" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449859-s" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8480-6" codeSystem="2.16.840.1.113883.6.1" displayName="BP sys"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="130" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="2449859-d" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8462-4" codeSystem="2.16.840.1.113883.6.1" displayName="BP dias"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100223101844"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="80" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component>
						</organizer>
					</entry><entry typeCode="DRIV"> <!-- Repeat Entry/Organizer block for each vital sign panel -->
						<organizer classCode="CLUSTER" moodCode="EVN">
							<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, Organizer parent templates -->
							<templateId root="2.16.840.1.113883.10.20.1.32"/> 
							<templateId root="2.16.840.1.113883.10.20.1.35"/> 
							<!-- HITSP C32 V2.5:  Vital Signs Organizer Template, REQUIRED -->
							<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.1"/> 
							<!-- Vital Sign Organizer ID as nullFlavor b/c data not yet available via VA VistA RPCs -->
							<id nullFlavor="UNK"/>
							<code code="46680005" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Vital signs"/>
							<statusCode code="completed"/>
							<!-- HITSP C32 V2.5:  All Vital Signs Recorded on this date will be grouped under the observation block -->
							<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
							<effectiveTime value="20100217025237"/>
							<!-- INFORMATION SOURCE FOR VITAL SIGN ORGANIZER/PANEL, Optional -->
							<author>
								<time nullFlavor="UNK"/>
								<assignedAuthor>
									<id nullFlavor="NI"/>
									<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
									<addr/>
									<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
									<telecom/>
									<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
									<assignedPerson>
											<name/>
									</assignedPerson>
									<representedOrganization>
										<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
										<id extension="552" root="2.16.840.1.113883.3.333"/>
										<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
										<name>DAYTON</name>
										<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
										<addr/>
									</representedOrganization>
								</assignedAuthor>
							</author>
							<!-- HITSP C32 V2.5:  One component block for each Vital Sign -->
							<component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543066" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8302-2" codeSystem="2.16.840.1.113883.6.1" displayName="Bdy height"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217025548"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="in" value="72" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543061" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8867-4" codeSystem="2.16.840.1.113883.6.1" displayName="Heart rate"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217025548"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="75" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543062" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="9279-1" codeSystem="2.16.840.1.113883.6.1" displayName="Respiratory rate"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217025548"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="20" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543065" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8310-5" codeSystem="2.16.840.1.113883.6.1" displayName="Bdy temp"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217025548"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value unit="F" value="98.2" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543063-s" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8480-6" codeSystem="2.16.840.1.113883.6.1" displayName="BP sys"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217025548"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="146" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component><component> <!-- Repeat Component/Organizer block for each vital sign in the panel -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<!-- HITSP C32 V2.5:  Vital Sign Module/Entry Templates -->
									<templateId root="2.16.840.1.113883.3.88.11.83.14"/>
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13.2"/>
									<!-- HITSP C32 V2.5:  ASTM/HL7 CCD Specification for Vital Signs, parent templates -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/> 
									<!-- HITSP C32 V2.5:  14.01-VITAL SIGN RESULT ID, REQUIRED  -->
									<!-- 14.01-VITAL SIGN RESULT ID  -->
									<id extension="6543063-d" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-VITAL SIGN RESULT TYPE, REQUIRED, LOINC  -->
									<code code="8462-4" codeSystem="2.16.840.1.113883.6.1" displayName="BP dias"/>
									<!-- CDA based uses of Simple Observations Text element Required -->
									<text>
										<reference value="vital1"/>
									</text>
									<!-- HITSP C32 V2.5:  14.04-VITAL SIGN RESULT STATUS, REQUIRED, Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  14.02-VITAL SIGN RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217025548"/>
									<!-- HITSP C32 V2.5:  14.05-VITAL SIGN RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- 14.05-VITAL SIGN RESULT VALUE with Unit of Measure -->
									<value value="82" xsi:type="PQ"/>
									<!-- 14.05-VITAL SIGN RESULT VALUE when Unit of Measure is blank then omit unit attribute-->
									<!-- value xsi:type="PQ" value="" -->
									<!-- HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Optional, HL7 Result Normalcy Status Value Set -->
									<!--  HITSP C32 V2.5:  14.06-VITAL SIGN RESULT INTERPRETATION, Removed b/c data not yet available via VA VistA RPCs -->
										<!-- HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Optional, -->
										<!--   HITSP C32 V2.5:  14.07-VITAL SIGN RESULT REFERENCE RANGE, Removed b/c data not yet available via VA VistA RPCs -->
								</observation>
							</component>
						</organizer>
					</entry>
				</section>
			</component>
            <!-- 
			********************************************************
			VLER SEG 1B:  LAB RESULTS SECTION (Chemistry/Hematology)
			********************************************************
			-->
			<component> 
				<section><!-- Component 5 -->
					<!-- HITSP C32 V2.5:  HL7 CCD Lab Results section template -->
					<templateId root="2.16.840.1.113883.10.20.1.14"/> 
					<!-- HITSP C32 V2.5:  HITSP CDA Diagniostic Results Section Template -->
					<templateId root="2.16.840.1.113883.3.88.11.83.122"/> 
					<!-- HITSP C32 V2.5:  IHE Coded Results Section Templates -->
					<templateId root="1.3.6.1.4.1.19376.1.5.3.1.3.28"/> 
					<!-- HITSP C32 V2.5:  HL7 CCD 30954-2 LOINC Code (Required) for Diagnostic tests and/or Laboratory Data -->
					<code code="30954-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Relevant diagnostic tests and/or laboratory data"/>
					<title>Lab Results - Chemistry and Hematology</title>
					<!--  LAB RESULTS  NARRATIVE BLOCK , REQUIRED -->
					<text>
							 <!-- VLER SEG 1B: Lab Results Business Rules for Medical Content  -->
							<table border="1" width="100%">
								<thead>
									<tr>
										<th>CONNECT Testgateway3</th>
										<th>Business Rules for Construction of Medical Information</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td>Lab Results</td>
										<td>This Test Document contains all Chemistry and Hematology Lab Results for the patient, from all VA treatment facilities, where the result date was within the last 24 months. </td>
									</tr>
									<tr>
										<td colspan="2"> </td>
									</tr>
									<tr>
										<td colspan="2">Lab Results data is provided only in structured XML format, not in the narrative block.</td>
									</tr>
								</tbody>
							</table>
							<!--  CDA Observation Text as a Reference tag -->
							<!-- IHE Simple Observations Text Element Required, For 15.03-LAB RESULT TYPE  Static "Observation Text Not Available" -->
							<content ID="lab-1">Result Observation Text Not Available</content>	
							<!-- IHE Procedure Text Element Required,  Static "Procedure Text Not Available" -->	
							<content ID="labproc1">Result Procedure Text Not Available</content>		
							<!-- LAB RESULT COMMENT, Optional  -->		
							<content ID="lab.comments1">hello there </content><content ID="lab.comments2">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments3">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments4">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments5">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments6">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments7">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments8">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments9">~For Test: DRUG ABUSE PANEL(URINE ONLY)
~testing 
TESTING 
BENZODIAZIPINE(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].
CANNABINOIDS(DA) reported incorrectly as NEG by [35288-VA552].
Changed to POS on Feb 22, 2010@13:25 by [35344-VA552].</content><content ID="lab.comments10">hello this is a comment </content><content ID="lab.comments12">hello </content><content ID="lab.comments13">SONJA - TESTING </content><content ID="lab.comments14">SONJA - TESTING </content><content ID="lab.comments15">SONJA - TESTING </content><content ID="lab.comments16">nice result!!! </content><content ID="lab.comments17">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments18">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments19">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments20">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments21">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments22">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments23">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments24">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments25">For eGFR: Race unknown, if African American multiply result by 1.210</content><content ID="lab.comments26">For eGFR: Race unknown, if African American multiply result by 1.210</content>						
					</text>
					<entry> <!-- Do Not Repeat per Result  -->
							<!-- Required IHE Procedure Entry element, REQUIRED -->
							<!-- HITSP 32 V2.5:  IHE Proceure Element Required, but data not available through VistA RPCs -->
							<procedure classCode="PROC" moodCode="EVN">	    
													<templateId assigningAuthorityName="HITSP C83" root="2.16.840.1.113883.3.88.11.83.17"/>
													<templateId assigningAuthorityName="CCD" root="2.16.840.1.113883.10.20.1.29"/>
													<templateId assigningAuthorityName="IHE PCC" root="1.3.6.1.4.1.19376.1.5.3.1.4.19"/>
								  <id nullFlavor="UNK"/>
								  <code nullFlavor="UNK">
										<originalText>
											<reference value="labproc1"/>
										</originalText>
								  </code>
								  <text>
										<reference value="labproc1"/>
								  </text>
								  <statusCode code="completed"/>
							</procedure>
					</entry>
					<!-- Required IHE Simple Oberservation Entry element -->
					<entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899577.875269;2" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose [Mass/volume] in Serum or Plasma">
										<originalText>GLUCOSE</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100421124731"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">150 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments1"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>65:110</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552354" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="5645-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Ethanol [Mass/volume] in Urine">
										<originalText>ALCOHOL(TOX)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">NEG mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments2"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>0:10</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552355" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="3550-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Diazepam [Presence] in Urine">
										<originalText>BENZODIAZIPINE(DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">POS </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments3"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552356" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="19299-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Opiates cutoff [Mass/volume] in Urine for Screen method">
										<originalText>OPIATES(DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">NEG </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments4"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552357" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="19065-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Benzoylecgonine cutoff [Mass/volume] in Urine">
										<originalText>COCAINE METABOLITES(DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">NEG </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments5"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552358" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="19291-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Cannabinoids cutoff [Mass/volume] in Urine for Screen method">
										<originalText>CANNABINOIDS(DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">POS </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments6"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552417" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="19347-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Amphetamine cutoff [Mass/volume] in Urine for Screen method">
										<originalText>AMPHETAMINE/METHANPHETAMINE(DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">NEG </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments7"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552418" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="3372-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Barbiturate screen absent [Identifier] in Urine">
										<originalText>BARBITUATES (DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">NEG </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments8"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.889454;552419" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="14310-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Phencyclidine [Presence] in Urine by Screen method &gt;25 ng/mL">
										<originalText>PHENCYCLIDINE (DA)</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222110546"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">NEG </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments9"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899776.90747;80" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2085-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Cholesterol.in HDL [Mass/volume] in Serum or Plasma">
										<originalText>HDL</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100222092530"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">150 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments10"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>35:55</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899779.8665;2" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose [Mass/volume] in Serum or Plasma">
										<originalText>GLUCOSE</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="201002191335"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">115 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="comment1"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>65:110</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899781.878696;2" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose [Mass/volume] in Serum or Plasma">
										<originalText>GLUCOSE</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217121304"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">300 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments12"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>65:110</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899781.878865;552003" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2157-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Creatine kinase [Enzymatic activity/volume] in Serum or Plasma">
										<originalText>CPK</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217121135"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">pending U/L</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments13"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>24:349</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899781.878865;552421" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="13969-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Creatine kinase.MB [Mass/volume] in Serum or Plasma">
										<originalText>'MB'</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217121135"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">pending ng/ml</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments14"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>0:5.8</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899781.878865;552422" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="12188-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Deprecated Creatine kinase.MB/Creatine kinase.total">
										<originalText>MB INDEX</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217121135"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">23 </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments15"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>0:5.4</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899781.879678;80" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2085-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Cholesterol.in HDL [Mass/volume] in Serum or Plasma">
										<originalText>HDL</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100217120322"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">200 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments16"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>35:55</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;2" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2345-7" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Glucose [Mass/volume] in Serum or Plasma">
										<originalText>GLUCOSE</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">90 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments17"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>65:110</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;3" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="3094-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Urea nitrogen [Mass/volume] in Serum or Plasma">
										<originalText>UREA NITROGEN</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">10 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments18"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>6:20</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;4" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2160-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Creatinine [Mass/volume] in Serum or Plasma">
										<originalText>CREATININE </originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">1.1 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments19"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>.5:1.4</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;5" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2951-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Sodium [Moles/volume] in Serum or Plasma">
										<originalText>SODIUM</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">140 mEq/L</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments20"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>136:145</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;6" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2823-3" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Potassium [Moles/volume] in Serum or Plasma">
										<originalText>POTASSIUM</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">5.0 mEq/L</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments21"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>3.6:5.1</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;7" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2075-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Chloride [Moles/volume] in Serum or Plasma">
										<originalText>CHLORIDE</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">100 mEq/L</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments22"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>98:108</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;8" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="2028-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Carbon dioxide, total [Moles/volume] in Serum or Plasma">
										<originalText>CO2</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">30 mEq/L</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments23"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>23:33</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;9" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="17861-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Calcium [Mass/volume] in Serum or Plasma">
										<originalText>CALCIUM</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">11.0 mg/dl</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments24"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>8.5:10.5</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;790" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="10466-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Anion gap 3 in Serum or Plasma">
										<originalText>ANION GAP</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">18.0 mEq/L</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments25"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>5:17</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864366;552608" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code nullFlavor="UNK">
										<originalText>EGFR</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135634"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">&gt;60 </value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText/>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="lab.comments26"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									
								</observation>
					</entry><entry typeCode="DRIV"> <!-- Entry block repeats for each result -->
								<observation classCode="OBS" moodCode="EVN">
									 <!-- Result observation template -->
									<templateId root="2.16.840.1.113883.10.20.1.31"/> 
									<templateId root="2.16.840.1.113883.3.88.11.83.15"/>
									<!-- IHE Simple Observation template -->
									<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.13"/>
									<!--  HITSP C32 V2.5:  15.01-LAB RESULT ID, REQUIRED  -->
									<!-- 15.01-LAB RESULT ID  -->
									<id extension="CH;6899786.864485;552437" root="2.16.840.1.113883.3.333"/>
									<!-- HITSP C32 V2.5:  14.03-LAB RESULT TYPE, REQUIRED, LOINC  -->
									<!-- 15.03-LAB RESULT TYPE,  Adapter must obtain LOINC Code Long Common Name from LOINC DB  -->
									<code code="17855-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Hemoglobin A1c (glycated HgB)/Hemoglobin.total [Moles] in Blood by calculation">
										<originalText>HBA1C</originalText>
									</code>
									<!-- IHE Simple Observations Text element Required -->
									<text>
										<reference value="lab-1"/>
									</text>
									<!-- HITSP C32 V2.5:  15.04-RESULT STATUS, REQUIRED, IHE Requires Static value of completed  -->
									<statusCode code="completed"/>
									<!-- HITSP C32 V2.5:  15.02-RESULT DATE/TIME, REQURIED  -->
									<!-- HITSP C32 V2.5: if blank, then effectiveTime nullFlavor="UNK" -->
									<effectiveTime value="20100212135515"/>
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, CONDITIONAL REQUIRED when moodCode=EVN  -->
									<!-- HITSP C32 V2.5:  15.05- RESULT VALUE, Sent as String (not INT) for VistA results that are POS, NEG, pending -->
									<value representation="TXT" xsi:type="ST">10 %</value>
									<!-- HITSP C32 V2.5:  15.06-RESULT INTERPRETATION, Optional, Translation to HL7 Result Normalcy Status Value Set not yet available -->
									<!-- If 15.06-RESULT INTERPRETATION is blank, omit XML tags -->
									<!-- interpretationCode code="H" codeSystem="2.16.840.1.113883.1.11.78" codeSystemName="HL7 Result Normalcy Status Value Set" displayName="High"/ -->
									<interpretationCode nullFlavor="UNK">
										<originalText>H</originalText>
									</interpretationCode>
									<!-- INFORMATION SOURCE FOR LAB RESULT, Optional -->	
									<author>
										<time nullFlavor="UNK"/>
										<assignedAuthor>
											<id nullFlavor="NI"/>
											<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
											<addr/>
											<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
											<assignedPerson>
												<name/>
											</assignedPerson>
											<representedOrganization>
												<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
												<id extension="984" root="2.16.840.1.113883.3.333"/>
												<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
												<name>DAYTSHR TEST LAB</name>
												<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
												<telecom/>
												<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
												<addr/>
											</representedOrganization>
										</assignedAuthor>
									</author>
									<!-- COMMENT FOR LAB RESULT, Optional -->	
									<entryRelationship inversionInd="true" typeCode="SUBJ">
										  <act classCode="ACT" moodCode="EVN">
											<templateId root="2.16.840.1.113883.10.20.1.40"/>
											<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.2"/>
											<code code="48767-8" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Annotation Comment"/>
											<!-- COMMENT REFERENCE points to Narrative Block -->
											<text><reference value="comment1"/></text>
											<statusCode code="completed"/>
											<author>
											  <time nullFlavor="UNK"/>
											  <assignedAuthor>
												<id nullFlavor="NI"/>
												<addr/>
												<telecom/>
												<assignedPerson>
													<name/>
												</assignedPerson>
												<representedOrganization>
													<name/>
													<telecom/>
													<addr/>
												</representedOrganization>
											  </assignedAuthor>
											</author>
										  </act>
									</entryRelationship>
									<!-- HITSP C32 V2.5: 15.07-RESULT REFERENCE RANGE, Optional, Lo:Hi -->
									<!-- If 15.07-RESULT REFERENCE RANGE is blank, omit XML tags -->
									<referenceRange>
										<observationRange>
											<text>4.8:6.0</text>
										</observationRange>
									</referenceRange>
								</observation>
					</entry>
				</section>
			</component>
				<!-- 
				********************************************************
				VLER SEGMENT 1B:  IMMUNIZATION SECTION
				********************************************************
				-->
				<component> <!-- Component 6 -->
					<section>
						<!-- Immunizations section template -->
						<templateId root="2.16.840.1.113883.10.20.1.6"/> 
						<code code="11369-6" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName=" History of immunizations "/>
						<title>Immunizations</title>
						<!--  IMMUNIZATIONS NARRATIVE BLOCK , REQUIRED -->
						<text>
						<!-- VLER SEG 1B: Immunization Business Rules for Medical Content  -->
							<table border="1" width="100%">
								<thead>
									<tr>
										<th>CONNECT Testgateway3</th>
										<th>Business Rules for Construction of Medical Information</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td>Immunizations</td>
										<td>This VA Document contains all immunizations for the patient, from all VA treatment facilities. </td>
									</tr>
									<tr>
										<td colspan="2"> </td>
									</tr>
									<tr>
										<td colspan="2">Immunization data is provided only in structured XML format, not in the narrative block.</td>
									</tr>
								</tbody>
							</table>
							<!-- 13.07-FREE TEXTPRODUCT NAME, REQUIRED -->
							<!-- 13.04-Immunization REACTION,  Optional, Repeatable -->
							<!-- IMMUNIZATION COMMENT, Optional, Repeatable, When Contraindicated Value =0;   -->		
							<!-- IMMUNIZATION COMMENT, Optional, Repeatable, When Contraindicated Value =1;   -->		
							<content ID="immunization.name1">FLU,3 YRS</content><content ID="immunization.comments1">testing NO CONTRAINDICATION; OK TO USE IN FUTURE.</content><content ID="immunization.reaction1">NONE</content><content ID="immunization.name2">FLU,3 YRS</content><content ID="immunization.comments2">TEST OF COMMENTS NO CONTRAINDICATION; OK TO USE IN FUTURE.</content><content ID="immunization.reaction2">NONE</content><content ID="immunization.name3">TETANUS DI</content><content ID="immunization.comments3">TESTING NO CONTRAINDICATION; OK TO USE IN FUTURE.</content><content ID="immunization.reaction3">NONE</content><content ID="immunization.name4">Rubella</content><content ID="immunization.comments4">testing shots NO CONTRAINDICATION; OK TO USE IN FUTURE.</content><content ID="immunization.reaction4">LOCAL REACTION OR SWELLING</content>
						</text>
						<entry typeCode="DRIV"> <!-- Repeat entry/substanceAdminstration block for each Immunization -->
							<!-- 13.01-REFUSAL, REQUIRED, static value of "false" -->
							<!-- HITSP C32 V2.5:  HL7 CDA R2-If Immunization was administered, @negationInd=false -->
							<substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
								<!-- HITSP C32 V2.5:  Immunization Templates  -->
								<templateId root="2.16.840.1.113883.10.20.1.24"/>
								<templateId root="2.16.840.1.113883.3.88.11.83.13"/>
								<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
								<!-- HITSP C32 V2.5: Immunization Id as nullFlavor  -->
								<id nullFlavor="UNK"/>
								<code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
								<!-- COMMENT REFERENCE points to Narrative Block -->
								<text><reference value="immunization.comments1"/></text>
								<statusCode code="completed"/>
								<!-- 13.02-ADMINISTERED DATE, REQUIRED,  -->
								<effectiveTime value="20100324"/>
								<consumable>
									<!-- HITSP C32 V2.5:  Immunization Medication  -->
									<manufacturedProduct>
										<!-- Product template -->
										<templateId root="2.16.840.1.113883.10.20.1.53"/> 
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
										<id nullFlavor="UNK"/>
											<!--manufacturedLabeledDrug></manufacturedLabeledDrug -->
											<manufacturedMaterial>
											<!-- 13.06-CODED PRODUCT NAME, Optional, nullFlavor b/c data not yet available thru VistA RPCs -->
											<!-- HITSP C32 V2.5:  CODED PRODUCT NAME, Optional, Requires CVX-Vaccines Adminstered , VA provides CPT-4-->
												<code code="UNK" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" nullFlavor="UNK">
													<!-- 13.07-FREE TEXTPRODUCT NAME, REQUIRED, Pointer to Narrative Block  -->
													<originalText>
														<reference value="immunization.name1"/>
													</originalText>
													<translation code="90658" codeSystem="2.16.840.1.113883.6.12" codeSystemName="Current Procedural Terminology (CPT®) Fourth Edition (CPT-4)" displayName="FLU VACCINE, 3 YRS &amp; &gt;, IM"/>
												</code>
												<!-- 13.09-LOT NUMBER, Optional, XML omitted b/c not yet  data available thru VistA RPCs -->
											</manufacturedMaterial>
											<manufacturerOrganization>
												<!-- 13.08 DRUG MANUFACTURER, Optional, XML omitted b/c not yet data available thru VistA RPCs -->
											</manufacturerOrganization>
									</manufacturedProduct>
								</consumable>
								<!-- 13.05-PERFORMER, Optional  -->
								<performer typeCode="PRF">
									<!-- Provider Template Id  -->
									<templateId root="2.16.840.1.113883.3.88.11.32.4"/>
									<time>
										 <high nullFlavor="UNK"/>
									</time>
									<assignedEntity>
									<!-- Provider ID, extension = Provider ID, root=VA OID  -->
									<id extension="645" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
										<telecom/>
										<assignedPerson>
											<name>ABNEY,NORA</name>
										</assignedPerson>
									</assignedEntity>
								</performer>
								<!-- INFORMATION SOURCE FOR IMMUNIZATION, Optional -->	
								<author>
									<time nullFlavor="UNK"/>
									<assignedAuthor>
										<id nullFlavor="NI"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
										<assignedPerson>
											<name/>
										</assignedPerson>
										<representedOrganization>
											<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
											<id extension="552" root="2.16.840.1.113883.3.333"/>
											<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
											<name/>
											<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
											<addr/>
										</representedOrganization>
									</assignedAuthor>
								</author>
								<!-- HITSP C32 V2.5:  Immunization Medication Series Nbr -->
								<entryRelationship typeCode="SUBJ"> 
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.46"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code code="30973-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Dose Number"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										  <statusCode code="completed"/>
										<!-- 13.03-MEDICATION SERIES NUMBER,  Optional, Sent as STring not INTeger  to accommodate VA VistA data such as P-Partial, B-Booster, C-Complete -->
										<value representation="TXT" xsi:type="ST">SERIES 1</value>
									</observation>	
								</entryRelationship>
								<!-- HITSP C32 V2.5:  Immunization Reaction  -->
								<entryRelationship inversionInd="false" typeCode="CAUS">  <!-- Repeat entryRelationship/observation block for each immuniz reaction -->
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.28"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
										<templateId root="2.16.840.1.113883.10.20.1.54"/>
										<!-- 13.04-REACTION,  Optional, Repeatable -->
										<!-- 13.04-REACTION,  Pointer to IMMUNIZATION NARRATIVE BLOCK not Allergy Entry per IHE Template -->
										<id extension="immunization.reaction1" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code nullFlavor="UNK"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										<statusCode code="completed"/>
										<!-- HITSP C32 V2.5:  IHE Template requires low value entry -->
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- HITSP C32 V2.5:  IHE Template requires value entry -->
										<value nullFlavor="UNK" xsi:type="CD"/>
									</observation>
								</entryRelationship>
							</substanceAdministration>
						</entry><entry typeCode="DRIV"> <!-- Repeat entry/substanceAdminstration block for each Immunization -->
							<!-- 13.01-REFUSAL, REQUIRED, static value of "false" -->
							<!-- HITSP C32 V2.5:  HL7 CDA R2-If Immunization was administered, @negationInd=false -->
							<substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
								<!-- HITSP C32 V2.5:  Immunization Templates  -->
								<templateId root="2.16.840.1.113883.10.20.1.24"/>
								<templateId root="2.16.840.1.113883.3.88.11.83.13"/>
								<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
								<!-- HITSP C32 V2.5: Immunization Id as nullFlavor  -->
								<id nullFlavor="UNK"/>
								<code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
								<!-- COMMENT REFERENCE points to Narrative Block -->
								<text><reference value="immunization.comments2"/></text>
								<statusCode code="completed"/>
								<!-- 13.02-ADMINISTERED DATE, REQUIRED,  -->
								<effectiveTime value="20100216"/>
								<consumable>
									<!-- HITSP C32 V2.5:  Immunization Medication  -->
									<manufacturedProduct>
										<!-- Product template -->
										<templateId root="2.16.840.1.113883.10.20.1.53"/> 
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
										<id nullFlavor="UNK"/>
											<!--manufacturedLabeledDrug></manufacturedLabeledDrug -->
											<manufacturedMaterial>
											<!-- 13.06-CODED PRODUCT NAME, Optional, nullFlavor b/c data not yet available thru VistA RPCs -->
											<!-- HITSP C32 V2.5:  CODED PRODUCT NAME, Optional, Requires CVX-Vaccines Adminstered , VA provides CPT-4-->
												<code code="UNK" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" nullFlavor="UNK">
													<!-- 13.07-FREE TEXTPRODUCT NAME, REQUIRED, Pointer to Narrative Block  -->
													<originalText>
														<reference value="immunization.name2"/>
													</originalText>
													<translation code="90658" codeSystem="2.16.840.1.113883.6.12" codeSystemName="Current Procedural Terminology (CPT®) Fourth Edition (CPT-4)" displayName="FLU VACCINE, 3 YRS &amp; &gt;, IM"/>
												</code>
												<!-- 13.09-LOT NUMBER, Optional, XML omitted b/c not yet  data available thru VistA RPCs -->
											</manufacturedMaterial>
											<manufacturerOrganization>
												<!-- 13.08 DRUG MANUFACTURER, Optional, XML omitted b/c not yet data available thru VistA RPCs -->
											</manufacturerOrganization>
									</manufacturedProduct>
								</consumable>
								<!-- 13.05-PERFORMER, Optional  -->
								<performer typeCode="PRF">
									<!-- Provider Template Id  -->
									<templateId root="2.16.840.1.113883.3.88.11.32.4"/>
									<time>
										 <high nullFlavor="UNK"/>
									</time>
									<assignedEntity>
									<!-- Provider ID, extension = Provider ID, root=VA OID  -->
									<id extension="645" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
										<telecom/>
										<assignedPerson>
											<name>ABNEY,NORA</name>
										</assignedPerson>
									</assignedEntity>
								</performer>
								<!-- INFORMATION SOURCE FOR IMMUNIZATION, Optional -->	
								<author>
									<time nullFlavor="UNK"/>
									<assignedAuthor>
										<id nullFlavor="NI"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
										<assignedPerson>
											<name/>
										</assignedPerson>
										<representedOrganization>
											<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
											<id extension="552" root="2.16.840.1.113883.3.333"/>
											<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
											<name/>
											<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
											<addr/>
										</representedOrganization>
									</assignedAuthor>
								</author>
								<!-- HITSP C32 V2.5:  Immunization Medication Series Nbr -->
								<entryRelationship typeCode="SUBJ"> 
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.46"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code code="30973-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Dose Number"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										  <statusCode code="completed"/>
										<!-- 13.03-MEDICATION SERIES NUMBER,  Optional, Sent as STring not INTeger  to accommodate VA VistA data such as P-Partial, B-Booster, C-Complete -->
										<value representation="TXT" xsi:type="ST">SERIES 1</value>
									</observation>	
								</entryRelationship>
								<!-- HITSP C32 V2.5:  Immunization Reaction  -->
								<entryRelationship inversionInd="false" typeCode="CAUS">  <!-- Repeat entryRelationship/observation block for each immuniz reaction -->
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.28"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
										<templateId root="2.16.840.1.113883.10.20.1.54"/>
										<!-- 13.04-REACTION,  Optional, Repeatable -->
										<!-- 13.04-REACTION,  Pointer to IMMUNIZATION NARRATIVE BLOCK not Allergy Entry per IHE Template -->
										<id extension="immunization.reaction2" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code nullFlavor="UNK"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										<statusCode code="completed"/>
										<!-- HITSP C32 V2.5:  IHE Template requires low value entry -->
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- HITSP C32 V2.5:  IHE Template requires value entry -->
										<value nullFlavor="UNK" xsi:type="CD"/>
									</observation>
								</entryRelationship>
							</substanceAdministration>
						</entry><entry typeCode="DRIV"> <!-- Repeat entry/substanceAdminstration block for each Immunization -->
							<!-- 13.01-REFUSAL, REQUIRED, static value of "false" -->
							<!-- HITSP C32 V2.5:  HL7 CDA R2-If Immunization was administered, @negationInd=false -->
							<substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
								<!-- HITSP C32 V2.5:  Immunization Templates  -->
								<templateId root="2.16.840.1.113883.10.20.1.24"/>
								<templateId root="2.16.840.1.113883.3.88.11.83.13"/>
								<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
								<!-- HITSP C32 V2.5: Immunization Id as nullFlavor  -->
								<id nullFlavor="UNK"/>
								<code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
								<!-- COMMENT REFERENCE points to Narrative Block -->
								<text><reference value="immunization.comments3"/></text>
								<statusCode code="completed"/>
								<!-- 13.02-ADMINISTERED DATE, REQUIRED,  -->
								<effectiveTime value="20100324"/>
								<consumable>
									<!-- HITSP C32 V2.5:  Immunization Medication  -->
									<manufacturedProduct>
										<!-- Product template -->
										<templateId root="2.16.840.1.113883.10.20.1.53"/> 
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
										<id nullFlavor="UNK"/>
											<!--manufacturedLabeledDrug></manufacturedLabeledDrug -->
											<manufacturedMaterial>
											<!-- 13.06-CODED PRODUCT NAME, Optional, nullFlavor b/c data not yet available thru VistA RPCs -->
											<!-- HITSP C32 V2.5:  CODED PRODUCT NAME, Optional, Requires CVX-Vaccines Adminstered , VA provides CPT-4-->
												<code code="UNK" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" nullFlavor="UNK">
													<!-- 13.07-FREE TEXTPRODUCT NAME, REQUIRED, Pointer to Narrative Block  -->
													<originalText>
														<reference value="immunization.name3"/>
													</originalText>
													<translation code="90718" codeSystem="2.16.840.1.113883.6.12" codeSystemName="Current Procedural Terminology (CPT®) Fourth Edition (CPT-4)" displayName="TD VACCINE &gt; 7, IM"/>
												</code>
												<!-- 13.09-LOT NUMBER, Optional, XML omitted b/c not yet  data available thru VistA RPCs -->
											</manufacturedMaterial>
											<manufacturerOrganization>
												<!-- 13.08 DRUG MANUFACTURER, Optional, XML omitted b/c not yet data available thru VistA RPCs -->
											</manufacturerOrganization>
									</manufacturedProduct>
								</consumable>
								<!-- 13.05-PERFORMER, Optional  -->
								<performer typeCode="PRF">
									<!-- Provider Template Id  -->
									<templateId root="2.16.840.1.113883.3.88.11.32.4"/>
									<time>
										 <high nullFlavor="UNK"/>
									</time>
									<assignedEntity>
									<!-- Provider ID, extension = Provider ID, root=VA OID  -->
									<id extension="645" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
										<telecom/>
										<assignedPerson>
											<name>ABNEY,NORA</name>
										</assignedPerson>
									</assignedEntity>
								</performer>
								<!-- INFORMATION SOURCE FOR IMMUNIZATION, Optional -->	
								<author>
									<time nullFlavor="UNK"/>
									<assignedAuthor>
										<id nullFlavor="NI"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
										<assignedPerson>
											<name/>
										</assignedPerson>
										<representedOrganization>
											<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
											<id extension="552" root="2.16.840.1.113883.3.333"/>
											<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
											<name/>
											<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
											<addr/>
										</representedOrganization>
									</assignedAuthor>
								</author>
								<!-- HITSP C32 V2.5:  Immunization Medication Series Nbr -->
								<entryRelationship typeCode="SUBJ"> 
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.46"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code code="30973-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Dose Number"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										  <statusCode code="completed"/>
										<!-- 13.03-MEDICATION SERIES NUMBER,  Optional, Sent as STring not INTeger  to accommodate VA VistA data such as P-Partial, B-Booster, C-Complete -->
										<value representation="TXT" xsi:type="ST">SERIES 2</value>
									</observation>	
								</entryRelationship>
								<!-- HITSP C32 V2.5:  Immunization Reaction  -->
								<entryRelationship inversionInd="false" typeCode="CAUS">  <!-- Repeat entryRelationship/observation block for each immuniz reaction -->
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.28"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
										<templateId root="2.16.840.1.113883.10.20.1.54"/>
										<!-- 13.04-REACTION,  Optional, Repeatable -->
										<!-- 13.04-REACTION,  Pointer to IMMUNIZATION NARRATIVE BLOCK not Allergy Entry per IHE Template -->
										<id extension="immunization.reaction3" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code nullFlavor="UNK"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										<statusCode code="completed"/>
										<!-- HITSP C32 V2.5:  IHE Template requires low value entry -->
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- HITSP C32 V2.5:  IHE Template requires value entry -->
										<value nullFlavor="UNK" xsi:type="CD"/>
									</observation>
								</entryRelationship>
							</substanceAdministration>
						</entry><entry typeCode="DRIV"> <!-- Repeat entry/substanceAdminstration block for each Immunization -->
							<!-- 13.01-REFUSAL, REQUIRED, static value of "false" -->
							<!-- HITSP C32 V2.5:  HL7 CDA R2-If Immunization was administered, @negationInd=false -->
							<substanceAdministration classCode="SBADM" moodCode="EVN" negationInd="false">
								<!-- HITSP C32 V2.5:  Immunization Templates  -->
								<templateId root="2.16.840.1.113883.10.20.1.24"/>
								<templateId root="2.16.840.1.113883.3.88.11.83.13"/>
								<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.12"/>
								<!-- HITSP C32 V2.5: Immunization Id as nullFlavor  -->
								<id nullFlavor="UNK"/>
								<code code="IMMUNIZ" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
								<!-- COMMENT REFERENCE points to Narrative Block -->
								<text><reference value="immunization.comments4"/></text>
								<statusCode code="completed"/>
								<!-- 13.02-ADMINISTERED DATE, REQUIRED,  -->
								<effectiveTime value="20100506"/>
								<consumable>
									<!-- HITSP C32 V2.5:  Immunization Medication  -->
									<manufacturedProduct>
										<!-- Product template -->
										<templateId root="2.16.840.1.113883.10.20.1.53"/> 
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.7.2"/>
										<id nullFlavor="UNK"/>
											<!--manufacturedLabeledDrug></manufacturedLabeledDrug -->
											<manufacturedMaterial>
											<!-- 13.06-CODED PRODUCT NAME, Optional, nullFlavor b/c data not yet available thru VistA RPCs -->
											<!-- HITSP C32 V2.5:  CODED PRODUCT NAME, Optional, Requires CVX-Vaccines Adminstered , VA provides CPT-4-->
												<code code="UNK" codeSystem="2.16.840.1.113883.6.59" codeSystemName="CVX" nullFlavor="UNK">
													<!-- 13.07-FREE TEXTPRODUCT NAME, REQUIRED, Pointer to Narrative Block  -->
													<originalText>
														<reference value="immunization.name4"/>
													</originalText>
													
												</code>
												<!-- 13.09-LOT NUMBER, Optional, XML omitted b/c not yet  data available thru VistA RPCs -->
											</manufacturedMaterial>
											<manufacturerOrganization>
												<!-- 13.08 DRUG MANUFACTURER, Optional, XML omitted b/c not yet data available thru VistA RPCs -->
											</manufacturerOrganization>
									</manufacturedProduct>
								</consumable>
								<!-- 13.05-PERFORMER, Optional  -->
								<performer typeCode="PRF">
									<!-- Provider Template Id  -->
									<templateId root="2.16.840.1.113883.3.88.11.32.4"/>
									<time>
										 <high nullFlavor="UNK"/>
									</time>
									<assignedEntity>
									<!-- Provider ID, extension = Provider ID, root=VA OID  -->
									<id extension="31131" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedEntity, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for iassignedEntity, but VA VistA data not yet available -->
										<telecom/>
										<assignedPerson>
											<name>ABIB,MOHAMED</name>
										</assignedPerson>
									</assignedEntity>
								</performer>
								<!-- INFORMATION SOURCE FOR IMMUNIZATION, Optional -->	
								<author>
									<time nullFlavor="UNK"/>
									<assignedAuthor>
										<id nullFlavor="NI"/>
										<!-- HITSP C32 V2.5:   Address Required for assignedAuthor, but VA VistA data not yet available -->
										<addr/>
										<!-- HITSP C32 V2.5:    Telecom Required for assignedAuthor, but VA VistA data not yet available -->
										<telecom/>
										<!-- HITSP C32 V2.5:   C83 author/assignedPerson/Name  Required but VA VistA data not yet available -->
										<assignedPerson>
											<name/>
										</assignedPerson>
										<representedOrganization>
											<!-- INFORMATION SOURCE FACILITY OID (ID = VA OID, EXT = TREATING FACILITY NBR) -->
											<id extension="552" root="2.16.840.1.113883.3.333"/>
											<!-- INFORMATION SOURCE FACILITY NAME (facilityName) -->
											<name/>
											<!-- HITSP C32 V2.5:    Telecom Required for representedOrganization, but VA VistA data not yet available -->
											<telecom/>
											<!-- HITSP C32 V2.5:   Address Required for representedOrganization, but VA VistA data not yet available -->
											<addr/>
										</representedOrganization>
									</assignedAuthor>
								</author>
								<!-- HITSP C32 V2.5:  Immunization Medication Series Nbr -->
								<entryRelationship typeCode="SUBJ"> 
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.46"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code code="30973-2" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Dose Number"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										  <statusCode code="completed"/>
										<!-- 13.03-MEDICATION SERIES NUMBER,  Optional, Sent as STring not INTeger  to accommodate VA VistA data such as P-Partial, B-Booster, C-Complete -->
										<value representation="TXT" xsi:type="ST">SERIES 3</value>
									</observation>	
								</entryRelationship>
								<!-- HITSP C32 V2.5:  Immunization Reaction  -->
								<entryRelationship inversionInd="false" typeCode="CAUS">  <!-- Repeat entryRelationship/observation block for each immuniz reaction -->
									<observation classCode="OBS" moodCode="EVN">
										<templateId root="2.16.840.1.113883.10.20.1.28"/>
										<templateId root="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
										<templateId root="2.16.840.1.113883.10.20.1.54"/>
										<!-- 13.04-REACTION,  Optional, Repeatable -->
										<!-- 13.04-REACTION,  Pointer to IMMUNIZATION NARRATIVE BLOCK not Allergy Entry per IHE Template -->
										<id extension="immunization.reaction4" root="2.16.840.1.113883.3.333"/>
										<!-- HITSP C32 V2.5:  Required Code under Observation -->
										<code nullFlavor="UNK"/>
										<!-- HITSP C32 V2.5:  Required statusCode under Observation -->
										<statusCode code="completed"/>
										<!-- HITSP C32 V2.5:  IHE Template requires low value entry -->
										<effectiveTime>
											<low nullFlavor="UNK"/>
										</effectiveTime>
										<!-- HITSP C32 V2.5:  IHE Template requires value entry -->
										<value nullFlavor="UNK" xsi:type="CD"/>
									</observation>
								</entryRelationship>
							</substanceAdministration>
						</entry>
					</section>
				</component>
        </structuredBody>
    </component>
</ClinicalDocument>