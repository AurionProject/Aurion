<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Flags-DocQuery" resourceRoot="" soapui-version="4.0.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NhincProxyDocQueryBindingSoap11" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:nhincproxydocquery}NhincProxyDocQueryBindingSoap11" soapVersion="1_1" anonymous="optional" definition="file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/NhincProxyDocQuery.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/NhincProxyDocQuery</con:endpoint><con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:endpoint>http://mhsnhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:RespondingGateway_CrossGatewayQuery" name="RespondingGateway_CrossGatewayQuery" bindingOperationName="RespondingGateway_CrossGatewayQuery" type="Request-Response" outputName="RespondingGateway_CrossGatewayQueryResponse" inputName="RespondingGateway_CrossGatewayQueryRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AdapterDocQueryBindingSoap11" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:adapterdocquery}AdapterDocQueryBindingSoap11" soapVersion="1_1" anonymous="optional" definition="file:/C:/projects/nhinc/Current/Product/Production/Common/Interfaces/src/wsdl/AdapterDocQuery.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/AdapterDocQuery</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:RespondingGateway_CrossGatewayQuery" name="RespondingGateway_CrossGatewayQuery" bindingOperationName="RespondingGateway_CrossGatewayQuery" type="Request-Response" outputName="RespondingGateway_CrossGatewayQueryResponse" inputName="RespondingGateway_CrossGatewayQueryRequest" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite name="Document Query"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="sDQ = true, dQP = true" searchProperties="true" id="4e7c1daa-b624-48d6-9a5a-974e63fc41a6" timeout="0"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/projects/nhinc/Current/Product/IntegrationTest/Flags-DocQuery.properties</con:source><con:properties><con:property><con:name>LocalHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINGatewayConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINAdapterConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQuery</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQueryPassthrough</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQDocID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>startDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FullPatientID</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="get Dates"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

sdf2 = new java.text.SimpleDateFormat("MM/dd/yyyy' 'HH:mm:ss");
sdf2.setTimeZone(TimeZone.getTimeZone("UTC"));

Calendar cal = new GregorianCalendar();
nowDate = new Date();

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, -5);
startDate = cal.getTime();
startDateStr = sdf.format(startDate);
sigDateStr = sdf2.format(startDate);

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, 5);
endDate = cal.getTime();
endDateStr = sdf.format(endDate);

cal.setTime(nowDate);
cal.add(Calendar.DATE, 30);
expireDate = cal.getTime();
expireDateStr = sdf2.format(expireDate);

groovyUtils.setPropertyValue( "Test Case Properties", "startDate", startDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "endDate", endDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "sigDate", sigDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "expireDate", expireDateStr);
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate patient ID for Doc Query"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def LocalAA = propertyList.getPropertyValue( "LocalAA" );
def DQPatientID = propertyList.getPropertyValue( "DQPatientID" );

fullPatientID = "'" + DQPatientID + "^^^&amp;" + LocalAA + "&amp;ISO'";
groovyUtils.setPropertyValue( "Test Case Properties", "FullPatientID", fullPatientID);
</script></con:config></con:testStep><con:testStep type="transfer" name="set doc query properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>endpointTransfer</con:name><con:sourceType>Endpoint-DocQuery</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>Document Query</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>fullPatientID</con:name><con:sourceType>FullPatientID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn2='urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0';
declare namespace urn1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn1:AdhocQueryRequest[1]/urn2:AdhocQuery[1]/urn2:Slot[@name="$XDSDocumentEntryPatientId"]/urn2:ValueList[1]/urn2:Value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>targetHCID</con:name><con:sourceType>LocalHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetDescription</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>targetName</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signatureDate</con:name><con:sourceType>sigDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:dateOfSignature[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>endDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:expirationDate[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>assertionHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orgHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:description[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Copy gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File myFile = new File(GatewayConfigFile);
assert (myFile.exists())
if(myFile.exists())
{
    new File(GatewayConfigFileBak).withWriter 
    { 
        file -> new File(GatewayConfigFile).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
}
File backupFile = new File(GatewayConfigFile);
assert (backupFile.exists())
</script></con:config></con:testStep><con:testStep type="groovy" name="Set sDQ = true &amp; dQP = true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def gatewayProperties = NHINGatewayConfigDir + "/gateway.properties";
def propertyFile = new File( gatewayProperties );
def fileFound = (propertyFile.exists());

if (fileFound) {
	def fis = new FileInputStream ( propertyFile );
	def properties = new java.util.Properties ();
	properties.load (fis);
	properties.setProperty( "serviceDocumentQuery", "true" );
	properties.setProperty( "documentQueryPassthrough", "true" );
	def fos = new java.io.FileOutputStream ( propertyFile );
	properties.store( fos, "");
}

assert fileFound;</script></con:config></con:testStep><con:testStep type="groovy" name="Update Passthrough URL"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def directory = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def communityId = propertyList.getPropertyValue( "LocalHCID" );
def serviceName = "adapterdocquerypassthrough";
def serviceUrl = propertyList.getPropertyValue( "Endpoint-DocQueryPassthrough" );

FileUtils.CreateOrUpdateConnection(directory, communityId, serviceName, serviceUrl, context, log);</script></con:config></con:testStep><con:testStep type="request" name="Document Query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NhincProxyDocQueryBindingSoap11</con:interface><con:operation>RespondingGateway_CrossGatewayQuery</con:operation><con:request name="Document Query"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="RegistryObject" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'500000000^^^&amp;2.16.840.1.113883.3.200&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>BUFFALO</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>12345 EAST COAST WAY</urn3:streetAddress>
               <urn3:zipCode>01010</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>19800516</urn3:dateOfBirth>
            <urn3:dateOfSignature>06/18/2009 18:02:10</urn3:dateOfSignature>
            <urn3:expirationDate>2009-06-18T18:12:10Z</urn3:expirationDate>
            <urn3:explanationNonClaimantSignature>NEEDED</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>true</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>true</urn3:haveSignature>
            <urn3:haveWitnessSignature>true</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>Federal - VA</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
               <urn3:name>Federal - VA</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>FRED</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>ANDREW</urn3:secondNameOrInitials>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>703</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>1212</urn3:extension>
               <urn3:localNumber>555</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:purposeOfDisclosure>NEEDED FOR SSA</urn3:purposeOfDisclosure>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>ALBANY</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>4 TROY STREET</urn3:streetAddress>
               <urn3:zipCode>01033</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>JAMES</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>KENNETH</urn3:secondNameOrInitials>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>301</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>0001</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>123456789</urn3:SSN>
            <urn3:uniquePatientId>500000000</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>H</urn3:code>
               </urn3:addressType>
               <urn3:city>HARTFORD</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>CT</urn3:state>
               <urn3:streetAddress>10410 MAIN ST.</urn3:streetAddress>
               <urn3:zipCode>05032</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>COREY</urn3:familyName>
               <urn3:givenName>AMANDA</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>H</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>EVE</urn3:secondNameOrInitials>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>202</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>1010</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>H</urn3:code>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>FRANKLIN</urn3:familyName>
                  <urn3:givenName>MARK</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>P</urn3:code>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>ALAN</urn3:secondNameOrInitials>
               </urn3:personName>
               <urn3:userName>mfranklin</urn3:userName>
               <urn3:role>Administrator</urn3:role>
               <urn3:org>
                  <urn3:description>Federal - VA</urn3:description>
                  <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
                  <urn3:name>Federal - VA</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>80584001</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Psychiatrist</urn3:displayName>
                  <urn3:originalText>Psychiatrist</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PSYCHOTHERAPY</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:claimFormRef>Ref-Clm-123</urn3:claimFormRef>
            <urn3:claimFormRaw>YWVvbGlhbQ==</urn3:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetSystem>
            <urn3:homeCommunity>
               <urn3:description>Federal - DoD</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.200</urn3:homeCommunityId>
               <urn3:name>Federal - DoD</urn3:name>
            </urn3:homeCommunity>
         </urn:nhinTargetSystem>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion"/><con:assertion type="SOAP Response"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace ns3='urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0';
declare namespace ns1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:Slot[3]/ns3:ValueList[1]/ns3:Value[1]</path><content>Mock Response</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincproxydocquery/NhincProxyDocQueryPortType/RespondingGateway_CrossGatewayQueryRequest" mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="mockresponse" name="Document Query Mock Response"><con:settings/><con:config xsi:type="con:MockResponseStep" startStep="Document Query" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AdapterDocQueryBindingSoap11</con:interface><con:operation>RespondingGateway_CrossGatewayQuery</con:operation><con:path>/mockAdapterDocQuery</con:path><con:port>19080</con:port><con:timeout>10000</con:timeout><con:response><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
   <soapenv:Header/>
   <soapenv:Body>
      <ns1:AdhocQueryResponse status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success" xmlns:S="http://schemas.xmlsoap.org/soap/envelope/" xmlns:msgns="urn:gov:hhs:fha:nhinc:nhincproxydocquery" xmlns:ns2="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:ns3="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:ns4="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:ns5="urn:gov:hhs:fha:nhinc:gateway:samltokendata" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsse11="http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
         <ns3:RegistryObjectList>
            <ns3:ExtrinsicObject home="urn:oid:2.16.840.1.113883.3.198.1" id="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" isOpaque="false" mimeType="text/xml" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1" status="Active">
               <ns3:Slot name="creationTime">
                  <ns3:ValueList>
                     <ns3:Value>20080617084906-0400</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="hash">
                  <ns3:ValueList>
                     <ns3:Value>1740b8716b06b046326e8915e5f99d0c4f07b4f7</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="intendedRecipient">
                  <ns3:ValueList>
                     <ns3:Value>Mock Response</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="languageCode">
                  <ns3:ValueList>
                     <ns3:Value>en-US</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="legalAuthenticator">
                  <ns3:ValueList>
                     <ns3:Value>legal</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="serviceStartTime">
                  <ns3:ValueList>
                     <ns3:Value>20000320</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="serviceStopTime">
                  <ns3:ValueList>
                     <ns3:Value>20080101</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="size">
                  <ns3:ValueList>
                     <ns3:Value>30845</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="sourcePatientId">
                  <ns3:ValueList>
                     <ns3:Value>D123401</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="sourcePatientInfo">
                  <ns3:ValueList>
                     <ns3:Value>PID-3|pid1^^^domain</ns3:Value>
                     <ns3:Value>PID-5|Younger^Gallow^^^</ns3:Value>
                     <ns3:Value>PID-7|19990627</ns3:Value>
                     <ns3:Value>PID-8|M</ns3:Value>
                     <ns3:Value>PID-11|1111 Main Street^^Kingsport^TN^37662^US</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="URI">
                  <ns3:ValueList>
                     <ns3:Value>333333333</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Slot name="repositoryUniqueId">
                  <ns3:ValueList>
                     <ns3:Value>1</ns3:Value>
                  </ns3:ValueList>
               </ns3:Slot>
               <ns3:Name>
                  <ns3:LocalizedString value="Younger DoD Document 1"/>
               </ns3:Name>
               <ns3:Description>
                  <ns3:LocalizedString value="Document 1 Younder VA comments"/>
               </ns3:Description>
               <ns3:Classification classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="">
                  <ns3:Slot name="authorPerson">
                     <ns3:ValueList>
                        <ns3:Value>Dr. Joseph Hoodwink</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Slot name="authorInstitution">
                     <ns3:ValueList>
                        <ns3:Value>Main Children's Hospital</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Slot name="authorRole">
                     <ns3:ValueList>
                        <ns3:Value>Primary Care Provider</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Slot name="authorSpecialty">
                     <ns3:ValueList>
                        <ns3:Value>Pediatrician</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
               </ns3:Classification>
               <ns3:Classification classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="34133-9">
                  <ns3:Slot name="codingScheme">
                     <ns3:ValueList>
                        <ns3:Value>2.16.840.1.113883.6.1</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Name>
                     <ns3:LocalizedString value="Summarization of patient data"/>
                  </ns3:Name>
               </ns3:Classification>
               <ns3:Classification classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="Confidential">
                  <ns3:Slot name="codingScheme">
                     <ns3:ValueList>
                        <ns3:Value>Confidential</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Name>
                     <ns3:LocalizedString value="Confidential"/>
                  </ns3:Name>
               </ns3:Classification>
               <ns3:Classification classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="CDAR2/IHE 1.0">
                  <ns3:Slot name="codingScheme">
                     <ns3:ValueList>
                        <ns3:Value>formatCodeScheme_value</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Name>
                     <ns3:LocalizedString value="formatCodeDisplayName_value"/>
                  </ns3:Name>
               </ns3:Classification>
               <ns3:Classification classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="UTF-8">
                  <ns3:Slot name="codingScheme">
                     <ns3:ValueList>
                        <ns3:Value>UTF-8</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Name>
                     <ns3:LocalizedString value="UTF-8"/>
                  </ns3:Name>
               </ns3:Classification>
               <ns3:Classification classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="test">
                  <ns3:Slot name="codingScheme">
                     <ns3:ValueList>
                        <ns3:Value>test</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Name>
                     <ns3:LocalizedString value="test"/>
                  </ns3:Name>
               </ns3:Classification>
               <ns3:Classification classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" id="" nodeRepresentation="test">
                  <ns3:Slot name="codingScheme">
                     <ns3:ValueList>
                        <ns3:Value>test</ns3:Value>
                     </ns3:ValueList>
                  </ns3:Slot>
                  <ns3:Name>
                     <ns3:LocalizedString value="test"/>
                  </ns3:Name>
               </ns3:Classification>
               <ns3:ExternalIdentifier id="" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" registryObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" value="333333333">
                  <ns3:Name>
                     <ns3:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                  </ns3:Name>
               </ns3:ExternalIdentifier>
               <ns3:ExternalIdentifier id="" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" registryObject="urn:uuid:d869ace3-3eeb-47a4-b850-b38c5056e6c9" value="'D123401^^^&amp;2.16.840.1.113883.3.198.1&amp;ISO'">
                  <ns3:Name>
                     <ns3:LocalizedString value="XDSDocumentEntry.patientId"/>
                  </ns3:Name>
               </ns3:ExternalIdentifier>
            </ns3:ExtrinsicObject>
         </ns3:RegistryObjectList>
      </ns1:AdhocQueryResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:response></con:config></con:testStep><con:testStep type="groovy" name="Restore gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File backupFile = new File(GatewayConfigFileBak);
assert (backupFile.exists())
if(backupFile.exists())
{
    new File(GatewayConfigFile).withWriter 
    { 
        file -> new File(GatewayConfigFileBak).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }

    File copiedFile = new File(GatewayConfigFile);
    assert (copiedFile.exists())
    if(copiedFile.exists())
    {
        backupFile.delete();
    }
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="sDQ = true, dQP = false" searchProperties="true" id="5e8b034f-7b39-403c-a9bc-e1423d9e4913" timeout="0"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/projects/nhinc/Current/Product/IntegrationTest/Flags-DocQuery.properties</con:source><con:properties><con:property><con:name>LocalHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINGatewayConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINAdapterConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQuery</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQDocID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>startDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FullPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQueryPassthrough</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="get Dates"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

sdf2 = new java.text.SimpleDateFormat("MM/dd/yyyy' 'HH:mm:ss");
sdf2.setTimeZone(TimeZone.getTimeZone("UTC"));

Calendar cal = new GregorianCalendar();
nowDate = new Date();

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, -5);
startDate = cal.getTime();
startDateStr = sdf.format(startDate);
sigDateStr = sdf2.format(startDate);

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, 5);
endDate = cal.getTime();
endDateStr = sdf.format(endDate);

cal.setTime(nowDate);
cal.add(Calendar.DATE, 30);
expireDate = cal.getTime();
expireDateStr = sdf2.format(expireDate);

groovyUtils.setPropertyValue( "Test Case Properties", "startDate", startDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "endDate", endDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "sigDate", sigDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "expireDate", expireDateStr);
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate patient ID for Doc Query"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def LocalAA = propertyList.getPropertyValue( "LocalAA" );
def DQPatientID = propertyList.getPropertyValue( "DQPatientID" );

fullPatientID = "'" + DQPatientID + "^^^&amp;" + LocalAA + "&amp;ISO'";
groovyUtils.setPropertyValue( "Test Case Properties", "FullPatientID", fullPatientID);
</script></con:config></con:testStep><con:testStep type="transfer" name="set doc query properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>endpointTransfer</con:name><con:sourceType>Endpoint-DocQuery</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>Document Query</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>fullPatientID</con:name><con:sourceType>FullPatientID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn2='urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0';
declare namespace urn1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn1:AdhocQueryRequest[1]/urn2:AdhocQuery[1]/urn2:Slot[@name="$XDSDocumentEntryPatientId"]/urn2:ValueList[1]/urn2:Value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>targetHCID</con:name><con:sourceType>LocalHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetDescription</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>targetName</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signatureDate</con:name><con:sourceType>sigDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:dateOfSignature[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>endDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:expirationDate[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>assertionHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orgHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:description[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Copy gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File myFile = new File(GatewayConfigFile);
assert (myFile.exists())
if(myFile.exists())
{
    new File(GatewayConfigFileBak).withWriter 
    { 
        file -> new File(GatewayConfigFile).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
}
File backupFile = new File(GatewayConfigFile);
assert (backupFile.exists())
</script></con:config></con:testStep><con:testStep type="groovy" name="Set sDQ = true &amp; dQP = false"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def gatewayProperties = NHINGatewayConfigDir + "/gateway.properties";
def propertyFile = new File( gatewayProperties );
def fileFound = (propertyFile.exists());

if (fileFound) {
	def fis = new FileInputStream ( propertyFile );
	def properties = new java.util.Properties ();
	properties.load (fis);
	properties.setProperty( "serviceDocumentQuery", "true" );
	properties.setProperty( "documentQueryPassthrough", "false" );
	def fos = new java.io.FileOutputStream ( propertyFile );
	properties.store( fos, "");
}

assert fileFound;</script></con:config></con:testStep><con:testStep type="request" name="Document Query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NhincProxyDocQueryBindingSoap11</con:interface><con:operation>RespondingGateway_CrossGatewayQuery</con:operation><con:request name="Document Query"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <ns1:AdhocQueryRequest xmlns:S="http://schemas.xmlsoap.org/soap/envelope/" xmlns:msgns="urn:ihe:iti:xds-b:2007" xmlns:ns10="http://docs.oasis-open.org/wsn/t-1" xmlns:ns11="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:ns12="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:ns13="http://nhinc.services.com/schema/auditmessage" xmlns:ns14="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:ns15="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:ns16="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:ns17="http://www.hhs.gov/healthit/nhin/cdc" xmlns:ns18="urn:gov:hhs:fha:nhinc:common:subscriptionb2overrideforcdc" xmlns:ns19="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter" xmlns:ns2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:ns3="urn:oasis:names:tc:xacml:2.0:context:schema:os" xmlns:ns4="urn:oasis:names:tc:xacml:2.0:policy:schema:os" xmlns:ns5="http://www.w3.org/2005/08/addressing" xmlns:ns6="urn:gov:hhs:fha:nhinc:common:subscriptionb2overridefordocuments" xmlns:ns7="urn:ihe:iti:xds-b:2007" xmlns:ns8="http://docs.oasis-open.org/wsn/b-2" xmlns:ns9="http://docs.oasis-open.org/wsrf/bf-2" xmlns:ns1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
            <ns15:ResponseOption returnComposedObjects="true" returnType="LeafClass"/>
            <ns2:AdhocQuery id="60f03c9f-90ba-4415-81b6-38f54d19c5ab">
               <ns2:Slot name="$XDSDocumentEntryStatus">
                  <ns2:ValueList>
                     <ns2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</ns2:Value>
                  </ns2:ValueList>
               </ns2:Slot>
               <ns2:Slot name="$XDSDocumentEntryPatientId">
                  <ns2:ValueList>
                     <ns2:Value>'500000000^^^&amp;2.16.840.1.113883.3.200&amp;ISO'</ns2:Value>
                  </ns2:ValueList>
               </ns2:Slot>
            </ns2:AdhocQuery>
         </ns1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>BUFFALO</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>12345 EAST COAST WAY</urn3:streetAddress>
               <urn3:zipCode>01010</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>19800516</urn3:dateOfBirth>
            <urn3:dateOfSignature>06/18/2009 18:02:13</urn3:dateOfSignature>
            <urn3:expirationDate>2009-06-18T18:12:13Z</urn3:expirationDate>
            <urn3:explanationNonClaimantSignature>NEEDED</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>true</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>true</urn3:haveSignature>
            <urn3:haveWitnessSignature>true</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>Federal - VA</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
               <urn3:name>Federal - VA</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>FRED</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>ANDREW</urn3:secondNameOrInitials>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>703</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>1212</urn3:extension>
               <urn3:localNumber>555</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:purposeOfDisclosure>NEEDED FOR SSA</urn3:purposeOfDisclosure>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>ALBANY</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>4 TROY STREET</urn3:streetAddress>
               <urn3:zipCode>01033</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>JAMES</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>KENNETH</urn3:secondNameOrInitials>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>301</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>0001</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>123456789</urn3:SSN>
            <urn3:uniquePatientId>500000000</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>H</urn3:code>
               </urn3:addressType>
               <urn3:city>HARTFORD</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>CT</urn3:state>
               <urn3:streetAddress>10410 MAIN ST.</urn3:streetAddress>
               <urn3:zipCode>05032</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>COREY</urn3:familyName>
               <urn3:givenName>AMANDA</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>H</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>EVE</urn3:secondNameOrInitials>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>202</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>1010</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>H</urn3:code>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>FRANKLIN</urn3:familyName>
                  <urn3:givenName>MARK</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>P</urn3:code>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>ALAN</urn3:secondNameOrInitials>
               </urn3:personName>
               <urn3:userName>mfranklin</urn3:userName>
               <urn3:role>Administrator</urn3:role>
               <urn3:org>
                  <urn3:description>Federal - VA</urn3:description>
                  <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
                  <urn3:name>Federal - VA</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>80584001</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Psychiatrist</urn3:displayName>
                  <urn3:originalText>Psychiatrist</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PSYCHOTHERAPY</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:claimFormRef>Ref-Clm-123</urn3:claimFormRef>
            <urn3:claimFormRaw>YWVvbGlhbQ==</urn3:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetSystem>
            <urn3:homeCommunity>
               <urn3:description>Federal - DoD</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.200</urn3:homeCommunityId>
               <urn3:name>Federal - DoD</urn3:name>
            </urn3:homeCommunity>
         </urn:nhinTargetSystem>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion"/><con:assertion type="SOAP Response"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace ns1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
//ns1:AdhocQueryResponse[1]/@status</path><content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincproxydocquery/NhincProxyDocQueryPortType/RespondingGateway_CrossGatewayQueryRequest" mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Restore gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File backupFile = new File(GatewayConfigFileBak);
assert (backupFile.exists())
if(backupFile.exists())
{
    new File(GatewayConfigFile).withWriter 
    { 
        file -> new File(GatewayConfigFileBak).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }

    File copiedFile = new File(GatewayConfigFile);
    assert (copiedFile.exists())
    if(copiedFile.exists())
    {
        backupFile.delete();
    }
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="sDQ = false, dQP = true" searchProperties="true" id="e4b6d845-4e44-4eca-b919-e72dd2bef097" timeout="0"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/projects/nhinc/Current/Product/IntegrationTest/Flags-DocQuery.properties</con:source><con:properties><con:property><con:name>LocalHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINGatewayConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINAdapterConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQuery</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQDocID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>startDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FullPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQueryPassthrough</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="get Dates"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

sdf2 = new java.text.SimpleDateFormat("MM/dd/yyyy' 'HH:mm:ss");
sdf2.setTimeZone(TimeZone.getTimeZone("UTC"));

Calendar cal = new GregorianCalendar();
nowDate = new Date();

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, -5);
startDate = cal.getTime();
startDateStr = sdf.format(startDate);
sigDateStr = sdf2.format(startDate);

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, 5);
endDate = cal.getTime();
endDateStr = sdf.format(endDate);

cal.setTime(nowDate);
cal.add(Calendar.DATE, 30);
expireDate = cal.getTime();
expireDateStr = sdf2.format(expireDate);

groovyUtils.setPropertyValue( "Test Case Properties", "startDate", startDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "endDate", endDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "sigDate", sigDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "expireDate", expireDateStr);
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate patient ID for Doc Query"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def LocalAA = propertyList.getPropertyValue( "LocalAA" );
def DQPatientID = propertyList.getPropertyValue( "DQPatientID" );

fullPatientID = "'" + DQPatientID + "^^^&amp;" + LocalAA + "&amp;ISO'";
groovyUtils.setPropertyValue( "Test Case Properties", "FullPatientID", fullPatientID);
</script></con:config></con:testStep><con:testStep type="transfer" name="set doc query properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>endpointTransfer</con:name><con:sourceType>Endpoint-DocQuery</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>Document Query</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>fullPatientID</con:name><con:sourceType>FullPatientID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn2='urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0';
declare namespace urn1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn1:AdhocQueryRequest[1]/urn2:AdhocQuery[1]/urn2:Slot[@name="$XDSDocumentEntryPatientId"]/urn2:ValueList[1]/urn2:Value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>targetHCID</con:name><con:sourceType>LocalHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetDescription</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>targetName</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signatureDate</con:name><con:sourceType>sigDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:dateOfSignature[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>endDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:expirationDate[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>assertionHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orgHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:description[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Copy gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File myFile = new File(GatewayConfigFile);
assert (myFile.exists())
if(myFile.exists())
{
    new File(GatewayConfigFileBak).withWriter 
    { 
        file -> new File(GatewayConfigFile).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
}
File backupFile = new File(GatewayConfigFile);
assert (backupFile.exists())
</script></con:config></con:testStep><con:testStep type="groovy" name="Set sDQ = false &amp; dQP = true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def gatewayProperties = NHINGatewayConfigDir + "/gateway.properties";
def propertyFile = new File( gatewayProperties );
def fileFound = (propertyFile.exists());

if (fileFound) {
	def fis = new FileInputStream ( propertyFile );
	def properties = new java.util.Properties ();
	properties.load (fis);
	properties.setProperty( "serviceDocumentQuery", "false" );
	properties.setProperty( "documentQueryPassthrough", "true" );
	def fos = new java.io.FileOutputStream ( propertyFile );
	properties.store( fos, "");
}

assert fileFound;</script></con:config></con:testStep><con:testStep type="groovy" name="Update Passthrough URL"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def directory = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def communityId = propertyList.getPropertyValue( "LocalHCID" );
def serviceName = "adapterdocquerypassthrough";
def serviceUrl = propertyList.getPropertyValue( "Endpoint-DocQueryPassthrough" );

FileUtils.CreateOrUpdateConnection(directory, communityId, serviceName, serviceUrl, context, log);</script></con:config></con:testStep><con:testStep type="request" name="Document Query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NhincProxyDocQueryBindingSoap11</con:interface><con:operation>RespondingGateway_CrossGatewayQuery</con:operation><con:request name="Document Query"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="RegistryObject" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'500000000^^^&amp;2.16.840.1.113883.3.200&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>BUFFALO</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>12345 EAST COAST WAY</urn3:streetAddress>
               <urn3:zipCode>01010</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>19800516</urn3:dateOfBirth>
            <urn3:dateOfSignature>06/18/2009 18:02:19</urn3:dateOfSignature>
            <urn3:expirationDate>2009-06-18T18:12:19Z</urn3:expirationDate>
            <urn3:explanationNonClaimantSignature>NEEDED</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>true</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>true</urn3:haveSignature>
            <urn3:haveWitnessSignature>true</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>Federal - VA</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
               <urn3:name>Federal - VA</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>FRED</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>ANDREW</urn3:secondNameOrInitials>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>703</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>1212</urn3:extension>
               <urn3:localNumber>555</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:purposeOfDisclosure>NEEDED FOR SSA</urn3:purposeOfDisclosure>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>ALBANY</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>4 TROY STREET</urn3:streetAddress>
               <urn3:zipCode>01033</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>JAMES</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>KENNETH</urn3:secondNameOrInitials>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>301</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>0001</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>123456789</urn3:SSN>
            <urn3:uniquePatientId>500000000</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>H</urn3:code>
               </urn3:addressType>
               <urn3:city>HARTFORD</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>CT</urn3:state>
               <urn3:streetAddress>10410 MAIN ST.</urn3:streetAddress>
               <urn3:zipCode>05032</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>COREY</urn3:familyName>
               <urn3:givenName>AMANDA</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>H</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>EVE</urn3:secondNameOrInitials>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>202</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>1010</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>H</urn3:code>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>FRANKLIN</urn3:familyName>
                  <urn3:givenName>MARK</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>P</urn3:code>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>ALAN</urn3:secondNameOrInitials>
               </urn3:personName>
               <urn3:userName>mfranklin</urn3:userName>
               <urn3:role>Administrator</urn3:role>
               <urn3:org>
                  <urn3:description>Federal - VA</urn3:description>
                  <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
                  <urn3:name>Federal - VA</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>80584001</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Psychiatrist</urn3:displayName>
                  <urn3:originalText>Psychiatrist</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PSYCHOTHERAPY</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:claimFormRef>Ref-Clm-123</urn3:claimFormRef>
            <urn3:claimFormRaw>YWVvbGlhbQ==</urn3:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetSystem>
            <urn3:homeCommunity>
               <urn3:description>Federal - DoD</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.200</urn3:homeCommunityId>
               <urn3:name>Federal - DoD</urn3:name>
            </urn3:homeCommunity>
         </urn:nhinTargetSystem>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion"/><con:assertion type="SOAP Response"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace ns1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
//ns1:AdhocQueryResponse[1]/@totalResultCount</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincproxydocquery/NhincProxyDocQueryPortType/RespondingGateway_CrossGatewayQueryRequest" mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Restore gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File backupFile = new File(GatewayConfigFileBak);
assert (backupFile.exists())
if(backupFile.exists())
{
    new File(GatewayConfigFile).withWriter 
    { 
        file -> new File(GatewayConfigFileBak).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }

    File copiedFile = new File(GatewayConfigFile);
    assert (copiedFile.exists())
    if(copiedFile.exists())
    {
        backupFile.delete();
    }
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="sDQ = false, dQP = false" searchProperties="true" id="f05166cd-db39-436b-b807-3e4f0a785ec8" timeout="0"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/projects/nhinc/Current/Product/IntegrationTest/Flags-DocQuery.properties</con:source><con:properties><con:property><con:name>LocalHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteAA</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>RemoteHCDescription</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINGatewayConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NHINAdapterConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>LocalConfigDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQuery</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQDocID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>DQPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>startDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>FullPatientID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Endpoint-DocQueryPassthrough</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="get Dates"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

sdf2 = new java.text.SimpleDateFormat("MM/dd/yyyy' 'HH:mm:ss");
sdf2.setTimeZone(TimeZone.getTimeZone("UTC"));

Calendar cal = new GregorianCalendar();
nowDate = new Date();

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, -5);
startDate = cal.getTime();
startDateStr = sdf.format(startDate);
sigDateStr = sdf2.format(startDate);

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, 5);
endDate = cal.getTime();
endDateStr = sdf.format(endDate);

cal.setTime(nowDate);
cal.add(Calendar.DATE, 30);
expireDate = cal.getTime();
expireDateStr = sdf2.format(expireDate);

groovyUtils.setPropertyValue( "Test Case Properties", "startDate", startDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "endDate", endDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "sigDate", sigDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "expireDate", expireDateStr);
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate patient ID for Doc Query"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def LocalAA = propertyList.getPropertyValue( "LocalAA" );
def DQPatientID = propertyList.getPropertyValue( "DQPatientID" );

fullPatientID = "'" + DQPatientID + "^^^&amp;" + LocalAA + "&amp;ISO'";
groovyUtils.setPropertyValue( "Test Case Properties", "FullPatientID", fullPatientID);
</script></con:config></con:testStep><con:testStep type="transfer" name="set doc query properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>endpointTransfer</con:name><con:sourceType>Endpoint-DocQuery</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>Document Query</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>fullPatientID</con:name><con:sourceType>FullPatientID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn2='urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0';
declare namespace urn1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn1:AdhocQueryRequest[1]/urn2:AdhocQuery[1]/urn2:Slot[@name="$XDSDocumentEntryPatientId"]/urn2:ValueList[1]/urn2:Value[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>targetHCID</con:name><con:sourceType>LocalHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>targetDescription</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>targetName</con:name><con:sourceType>LocalHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:nhinTargetSystem[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>signatureDate</con:name><con:sourceType>sigDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:dateOfSignature[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>endDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:expirationDate[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>assertionHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:homeCommunity[1]/urn3:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCID</con:name><con:sourceType>RemoteHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCName</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orgHCDescription</con:name><con:sourceType>RemoteHCDescription</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Document Query</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonproxy';
declare namespace urn3='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:RespondingGateway_CrossGatewayQueryRequest[1]/urn:assertion[1]/urn3:userInfo[1]/urn3:org[1]/urn3:description[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Copy gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File myFile = new File(GatewayConfigFile);
assert (myFile.exists())
if(myFile.exists())
{
    new File(GatewayConfigFileBak).withWriter 
    { 
        file -> new File(GatewayConfigFile).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
}
File backupFile = new File(GatewayConfigFile);
assert (backupFile.exists())
</script></con:config></con:testStep><con:testStep type="groovy" name="Set sDQ = false &amp; dQP = false"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def gatewayProperties = NHINGatewayConfigDir + "/gateway.properties";
def propertyFile = new File( gatewayProperties );
def fileFound = (propertyFile.exists());

if (fileFound) {
	def fis = new FileInputStream ( propertyFile );
	def properties = new java.util.Properties ();
	properties.load (fis);
	properties.setProperty( "serviceDocumentQuery", "false" );
	properties.setProperty( "documentQueryPassthrough", "false" );
	def fos = new java.io.FileOutputStream ( propertyFile );
	properties.store( fos, "");
}

assert fileFound;</script></con:config></con:testStep><con:testStep type="request" name="Document Query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NhincProxyDocQueryBindingSoap11</con:interface><con:operation>RespondingGateway_CrossGatewayQuery</con:operation><con:request name="Document Query"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="RegistryObject" returnComposedObjects="false"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'500000000^^^&amp;2.16.840.1.113883.3.200&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:address>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>BUFFALO</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>12345 EAST COAST WAY</urn3:streetAddress>
               <urn3:zipCode>01010</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth>19800516</urn3:dateOfBirth>
            <urn3:dateOfSignature>06/18/2009 18:02:20</urn3:dateOfSignature>
            <urn3:expirationDate>2009-06-18T18:12:20Z</urn3:expirationDate>
            <urn3:explanationNonClaimantSignature>NEEDED</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature>true</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature>true</urn3:haveSignature>
            <urn3:haveWitnessSignature>true</urn3:haveWitnessSignature>
            <urn3:homeCommunity>
               <urn3:description>Federal - VA</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
               <urn3:name>Federal - VA</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>FRED</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>ANDREW</urn3:secondNameOrInitials>
            </urn3:personName>
            <urn3:phoneNumber>
               <urn3:areaCode>703</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>1212</urn3:extension>
               <urn3:localNumber>555</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:purposeOfDisclosure>NEEDED FOR SSA</urn3:purposeOfDisclosure>
            <urn3:secondWitnessAddress>
               <urn3:addressType>
                  <urn3:code>W</urn3:code>
               </urn3:addressType>
               <urn3:city>ALBANY</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>NY</urn3:state>
               <urn3:streetAddress>4 TROY STREET</urn3:streetAddress>
               <urn3:zipCode>01033</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName>
               <urn3:familyName>JONES</urn3:familyName>
               <urn3:givenName>JAMES</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>G</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>KENNETH</urn3:secondNameOrInitials>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone>
               <urn3:areaCode>301</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>0001</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>W</urn3:code>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN>123456789</urn3:SSN>
            <urn3:uniquePatientId>500000000</urn3:uniquePatientId>
            <urn3:witnessAddress>
               <urn3:addressType>
                  <urn3:code>H</urn3:code>
               </urn3:addressType>
               <urn3:city>HARTFORD</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>CT</urn3:state>
               <urn3:streetAddress>10410 MAIN ST.</urn3:streetAddress>
               <urn3:zipCode>05032</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName>
               <urn3:familyName>COREY</urn3:familyName>
               <urn3:givenName>AMANDA</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>H</urn3:code>
               </urn3:nameType>
               <urn3:secondNameOrInitials>EVE</urn3:secondNameOrInitials>
            </urn3:witnessName>
            <urn3:witnessPhone>
               <urn3:areaCode>202</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>555</urn3:extension>
               <urn3:localNumber>1010</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>H</urn3:code>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo>
               <urn3:personName>
                  <urn3:familyName>FRANKLIN</urn3:familyName>
                  <urn3:givenName>MARK</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>P</urn3:code>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>ALAN</urn3:secondNameOrInitials>
               </urn3:personName>
               <urn3:userName>mfranklin</urn3:userName>
               <urn3:role>Administrator</urn3:role>
               <urn3:org>
                  <urn3:description>Federal - VA</urn3:description>
                  <urn3:homeCommunityId>2.16.840.1.113883.3.198</urn3:homeCommunityId>
                  <urn3:name>Federal - VA</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>80584001</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Psychiatrist</urn3:displayName>
                  <urn3:originalText>Psychiatrist</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized>true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded>
               <urn3:code>PSYCHOTHERAPY</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:claimFormRef>Ref-Clm-123</urn3:claimFormRef>
            <urn3:claimFormRaw>YWVvbGlhbQ==</urn3:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetSystem>
            <urn3:homeCommunity>
               <urn3:description>Federal - DoD</urn3:description>
               <urn3:homeCommunityId>2.16.840.1.113883.3.200</urn3:homeCommunityId>
               <urn3:name>Federal - DoD</urn3:name>
            </urn3:homeCommunity>
         </urn:nhinTargetSystem>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion"/><con:assertion type="SOAP Response"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace ns1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
//ns1:AdhocQueryResponse[1]/@totalResultCount</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincproxydocquery/NhincProxyDocQueryPortType/RespondingGateway_CrossGatewayQueryRequest" mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Restore gateway.properties"><con:settings/><con:config><script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayConfigFile = NHINGatewayConfigDir + "/gateway.properties"
def GatewayConfigFileBak = GatewayConfigFile + ".bak";

File backupFile = new File(GatewayConfigFileBak);
assert (backupFile.exists())
if(backupFile.exists())
{
    new File(GatewayConfigFile).withWriter 
    { 
        file -> new File(GatewayConfigFileBak).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }

    File copiedFile = new File(GatewayConfigFile);
    assert (copiedFile.exists())
    if(copiedFile.exists())
    {
        backupFile.delete();
    }
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/></con:soapui-project>