<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project abortOnError="false" name="AuditQueryTestHelper" resourceRoot="" runType="SEQUENTIAL" soapui-version="4.0.0" xmlns:con="http://eviware.com/soapui/config">
	<con:settings/>
	<con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:entityauditlogquery}EntityAuditLogQueryBindingSoap" definition="WSDL path not set.  #EntityAuditLogQuery.wsdl" name="EntityAuditLogQueryBindingSoap" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:settings/>
		
		<con:endpoints>
			<con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityAuditLogQuery</con:endpoint>
			<con:endpoint>http://ATHC-GFAS:8080/NhinConnect/EntityAuditLogQuery</con:endpoint>
			<con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/EntityAuditLogQuery</con:endpoint>
			<con:endpoint>http://mhsnhie3.fedsconnect.org:9080/NhinConnect/EntityAuditLogQuery</con:endpoint>
			<con:endpoint>http://DVANHIE3.fedsconnect.org:9080/NhinConnect/EntityAuditLogQuery</con:endpoint>
			<con:endpoint>http://localhost:${NhincHttpPort}/NhinConnect/EntityAuditLogQuery</con:endpoint>
		</con:endpoints>
		<con:operation action="urn:findAuditEvents" anonymous="optional" bindingOperationName="findAuditEvents" inputName="findAuditEventsRequest" isOneWay="false" name="findAuditEvents" outputName="findAuditEventsResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
		</con:operation>
	</con:interface>
	<con:interface anonymous="optional" bindingName="{urn:gov:hhs:fha:nhinc:nhincauditlogquery}NhincAuditLogQueryPortTypeBinding" definition="WSDL path not set.  #NhincAuditLogQuery.wsdl" name="NhincAuditLogQueryPortTypeBinding" soapVersion="1_2" type="wsdl" wsaVersion="NONE" xsi:type="con:WsdlInterface" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
		<con:settings/>
		
		<con:endpoints>
			<con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/NhincAuditLogQuery</con:endpoint>
		</con:endpoints>
		<con:operation action="urn:NhincAuditLogQuery" anonymous="optional" bindingOperationName="NhincAuditLogQuery" inputName="NhincAuditLogQueryRequest" isOneWay="false" name="NhincAuditLogQuery" outputName="NhincAuditLogQueryResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response">
			<con:settings/>
		</con:operation>
	</con:interface>
	<con:testSuite name="AuditQueryTestHelper TestSuite">
		<con:settings/>
		<con:runType>SEQUENTIAL</con:runType>
		<con:testCase failOnError="false" failTestCaseOnErrors="true" id="a22e9c8b-c4c0-4cad-88f3-a9680042d24e" keepSession="false" maxResults="0" name="FindAuditEvents TestCase" searchProperties="true" timeout="0">
			<con:settings/>
			<con:testStep name="Copy of Restore Configurations" type="groovy">
				<con:settings/>
				<con:config>
					<script>FileUtils.InitializeNHINCProperties(context, log);
					</script>
				</con:config>
			</con:testStep>
			<con:testStep name="Generate patient ID for Audit Log Query" type="groovy">
				<con:settings/>
				<con:config>
					<script>def localAA = context.findProperty('LocalAA')
def aqPatientID = context.findProperty('AuditPatientID')

context.testCase.setPropertyValue('FullPatientID', "${aqPatientID}^^^&amp;amp;${localAA}&amp;amp;ISO");

					</script>
				</con:config>
			</con:testStep>
			<con:testStep disabled="true" name="Backup internalConnectionInfo file" type="groovy">
				<con:settings/>
				<con:config>
					<script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayPropFile = NHINGatewayConfigDir + "/internalConnectionInfo.xml"
def GatewayPropFileBak = GatewayPropFile + ".bak";

File myFile = new File(GatewayPropFile);
if(myFile.exists())
{
    new File(GatewayPropFileBak).withWriter 
    { 
        file -> new File(GatewayPropFile).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
}
					</script>
				</con:config>
			</con:testStep>
			<con:testStep name="Modify internalConnectionInfo file" type="groovy">
				<con:settings/>
				<con:config>
					<script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

//def destConfigFileLocation = dataSource.getPropertyValue("NHINGatewayConfigDir");
def destConfigFileLocation = System.env['NHINC_PROPERTIES_DIR'];
def NHINGatewayHost = context.findProperty("NHINGatewayHost");
def mockHost = context.findProperty("mockHost");
def auditQueryURL = "https://" + NHINGatewayHost + ":8181/CONNECTGatewayTest/AuditQueryTestHelper";
def mockAuditQueryURL = "http://" + mockHost + ":18089/mockNhincAuditLogQuery";
def LocalHCID = context.findProperty( "LocalHCID" );

FileUtils.CreateOrUpdateConnection(destConfigFileLocation, "2.2", "auditquery", auditQueryURL, context, log)
FileUtils.CreateOrUpdateConnection(destConfigFileLocation, LocalHCID, "mockauditquery", mockAuditQueryURL, context, log)
					</script>
				</con:config>
			</con:testStep>
			<con:testStep name="findAuditEvents" type="request">
				<con:settings/>
				<con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>EntityAuditLogQueryBindingSoap</con:interface>
					<con:operation>findAuditEvents</con:operation>
					<con:request name="findAuditEvents">
						<con:settings/>
						<con:encoding>UTF-8</con:encoding>
						<con:endpoint>${#Project#AuditQueryEndpoint}</con:endpoint>
						<con:request><![CDATA[
							<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:aud="http://nhinc.services.com/schema/auditmessage" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
   <soapenv:Header/>
   <soapenv:Body projectName="AuditQueryTestHelper" testCase="FindAuditEvents TestCase">
      <urn:FindAuditEventsRequest>
         <aud:FindAuditEvents>
            <aud:patientId>${#TestCase#FullPatientID}</aud:patientId>
            <aud:userId>mfranklin</aud:userId>
            <aud:beginDateTime>2009-07-06T16:59:19Z</aud:beginDateTime>
            <aud:endDateTime>2009-07-06T18:04:19Z</aud:endDateTime>
         </aud:FindAuditEvents>
         <urn:assertion>
            <urn1:address>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>BUFFALO</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>NY</urn1:state>
               <urn1:streetAddress>12345 EAST COAST WAY</urn1:streetAddress>
               <urn1:zipCode>01010</urn1:zipCode>
            </urn1:address>
            <urn1:dateOfBirth>19800516</urn1:dateOfBirth>
            <urn1:dateOfSignature>07/06/2009 16:59:19</urn1:dateOfSignature>
            <urn1:expirationDate>08/05/2009 17:59:19</urn1:expirationDate>
            <urn1:explanationNonClaimantSignature>NEEDED</urn1:explanationNonClaimantSignature>
            <urn1:haveSecondWitnessSignature>true</urn1:haveSecondWitnessSignature>
            <urn1:haveSignature>true</urn1:haveSignature>
            <urn1:haveWitnessSignature>true</urn1:haveWitnessSignature>
            <urn1:homeCommunity>
               <urn1:description>InternalSelfTest1</urn1:description>
               <urn1:homeCommunityId>1.1</urn1:homeCommunityId>
               <urn1:name>InternalSelfTest1</urn1:name>
            </urn1:homeCommunity>
            <urn1:personName>
               <urn1:familyName>JONES</urn1:familyName>
               <urn1:givenName>FRED</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>ANDREW</urn1:secondNameOrInitials>
            </urn1:personName>
            <urn1:phoneNumber>
               <urn1:areaCode>703</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>1212</urn1:extension>
               <urn1:localNumber>555</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:phoneNumber>
            <urn1:purposeOfDisclosure>NEEDED FOR SSA</urn1:purposeOfDisclosure>
            <urn1:secondWitnessAddress>
               <urn1:addressType>
                  <urn1:code>W</urn1:code>
               </urn1:addressType>
               <urn1:city>ALBANY</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>NY</urn1:state>
               <urn1:streetAddress>4 TROY STREET</urn1:streetAddress>
               <urn1:zipCode>01033</urn1:zipCode>
            </urn1:secondWitnessAddress>
            <urn1:secondWitnessName>
               <urn1:familyName>JONES</urn1:familyName>
               <urn1:givenName>JAMES</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>G</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>KENNETH</urn1:secondNameOrInitials>
            </urn1:secondWitnessName>
            <urn1:secondWitnessPhone>
               <urn1:areaCode>301</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>555</urn1:extension>
               <urn1:localNumber>0001</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>W</urn1:code>
               </urn1:phoneNumberType>
            </urn1:secondWitnessPhone>
            <urn1:SSN>000000008</urn1:SSN>
            <urn1:uniquePatientId>1000000008</urn1:uniquePatientId>
            <urn1:witnessAddress>
               <urn1:addressType>
                  <urn1:code>H</urn1:code>
               </urn1:addressType>
               <urn1:city>HARTFORD</urn1:city>
               <urn1:country>USA</urn1:country>
               <urn1:state>CT</urn1:state>
               <urn1:streetAddress>10410 MAIN ST.</urn1:streetAddress>
               <urn1:zipCode>05032</urn1:zipCode>
            </urn1:witnessAddress>
            <urn1:witnessName>
               <urn1:familyName>COREY</urn1:familyName>
               <urn1:givenName>AMANDA</urn1:givenName>
               <urn1:nameType>
                  <urn1:code>H</urn1:code>
               </urn1:nameType>
               <urn1:secondNameOrInitials>EVE</urn1:secondNameOrInitials>
            </urn1:witnessName>
            <urn1:witnessPhone>
               <urn1:areaCode>202</urn1:areaCode>
               <urn1:countryCode>1</urn1:countryCode>
               <urn1:extension>555</urn1:extension>
               <urn1:localNumber>1010</urn1:localNumber>
               <urn1:phoneNumberType>
                  <urn1:code>H</urn1:code>
               </urn1:phoneNumberType>
            </urn1:witnessPhone>
            <urn1:userInfo>
               <urn1:personName>
                  <urn1:familyName>FRANKLIN</urn1:familyName>
                  <urn1:givenName>MARK</urn1:givenName>
                  <urn1:nameType>
                     <urn1:code>P</urn1:code>
                  </urn1:nameType>
                  <urn1:secondNameOrInitials>ALAN</urn1:secondNameOrInitials>
               </urn1:personName>
               <urn1:userName>mfranklin</urn1:userName>
               <urn1:role>Administrator</urn1:role>
               <urn1:org>
                  <urn1:description>InternalSelfTest1</urn1:description>
                  <urn1:homeCommunityId>1.1</urn1:homeCommunityId>
                  <urn1:name>InternalSelfTest1</urn1:name>
               </urn1:org>
               <urn1:roleCoded>
                  <urn1:code>80584001</urn1:code>
                  <urn1:codeSystem>2.16.840.1.113883.6.96</urn1:codeSystem>
                  <urn1:codeSystemName>SNOMED_CT</urn1:codeSystemName>
                  <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
                  <urn1:displayName>Psychiatrist</urn1:displayName>
                  <urn1:originalText>Psychiatrist</urn1:originalText>
               </urn1:roleCoded>
            </urn1:userInfo>
            <urn1:authorized>true</urn1:authorized>
            <urn1:purposeOfDisclosureCoded>
               <urn1:code>PSYCHOTHERAPY</urn1:code>
               <urn1:codeSystem>2.16.840.1.113883.3.18.7.1</urn1:codeSystem>
               <urn1:codeSystemName>nhin-purpose</urn1:codeSystemName>
               <urn1:codeSystemVersion>1.0</urn1:codeSystemVersion>
               <urn1:displayName>Use or disclosure of Psychotherapy Notes</urn1:displayName>
               <urn1:originalText>Psychotherapy Notes</urn1:originalText>
            </urn1:purposeOfDisclosureCoded>
            <urn1:claimFormRef>Ref-Clm-123</urn1:claimFormRef>
            <urn1:claimFormRaw>YWVvbGlhbQ==</urn1:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>InternalSelfTest2</urn1:description>
                  <urn1:homeCommunityId>2.2</urn1:homeCommunityId>
                  <urn1:name>InternalSelfTest2</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
      </urn:FindAuditEventsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
						<con:assertion type="SOAP Response"/>
						<con:assertion type="SOAP Fault Assertion"/>
						<con:assertion type="Schema Compliance">
							<con:configuration>
								<definition/>
							</con:configuration>
						</con:assertion>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
						<con:wsrmConfig version="1.2"/>
					</con:request>
				</con:config>
			</con:testStep>
			<con:testStep name="Mock Response" type="mockresponse">
				<con:settings/>
				<con:config startStep="findAuditEvents" xsi:type="con:MockResponseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:interface>NhincAuditLogQueryPortTypeBinding</con:interface>
					<con:operation>NhincAuditLogQuery</con:operation>
					<con:path>/mockNhincAuditLogQuery</con:path>
					<con:port>18089</con:port>
					<con:timeout>10000</con:timeout>
					<con:response>
						<con:settings/>
						<con:responseContent><![CDATA[
							<S:Envelope xmlns:S="http://www.w3.org/2003/05/soap-envelope">
   <S:Body>
      <ns17:FindAuditEventsResponse xmlns:ns2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:ns3="http://docs.oasis-open.org/wsrf/bf-2" xmlns:ns4="http://www.w3.org/2005/08/addressing" xmlns:ns5="http://docs.oasis-open.org/wsn/b-2" xmlns:ns6="urn:ihe:iti:xds-b:2007" xmlns:ns7="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:ns8="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:ns9="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:ns10="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:ns11="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:ns12="http://www.hhs.gov/healthit/nhin/cdc" xmlns:ns13="urn:gov:hhs:fha:nhinc:common:subscriptionb2overrideforcdc" xmlns:ns14="http://docs.oasis-open.org/wsn/t-1" xmlns:ns15="urn:gov:hhs:fha:nhinc:common:subscriptionb2overridefordocuments" xmlns:ns16="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:ns17="http://nhinc.services.com/schema/auditmessage" xmlns:ns18="urn:gov:hhs:fha:nhinc:common:subscription">
         <ns17:findAuditEventsReturn>
            <ns17:EventIdentification EventOutcomeIndicator="0" EventDateTime="2009-07-06T17:25:45.257Z" EventActionCode="E">
               <ns17:EventID codeSystemName="DCM" codeSystem="Query" displayName="Query" code="DCM"/>
            </ns17:EventIdentification>
            <ns17:ActiveParticipant NetworkAccessPointTypeCode="2" NetworkAccessPointID="192.168.25.157" UserIsRequestor="true" UserName="MARK FRANKLIN" UserID="mfranklin"/>
            <ns17:AuditSourceIdentification AuditSourceID="1.1" AuditEnterpriseSiteID="InternalSelfTest1"/>
            <ns17:ParticipantObjectIdentification ParticipantObjectTypeCodeRole="1" ParticipantObjectTypeCode="1" ParticipantObjectID="D123401^^^&amp;1.1&amp;ISO">
               <ns17:ParticipantObjectIDTypeCode code="2"/>
               <ns17:ParticipantObjectQuery>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxBZGhvY1F1ZXJ5UmVxdWVzdCB4bWxucz0idXJuOm9hc2lzOm5hbWVzOnRjOmVieG1sLXJlZ3JlcDp4c2Q6cXVlcnk6My4wIiB4bWxuczpuczI9InVybjpvYXNpczpuYW1lczp0YzplYnhtbC1yZWdyZXA6eHNkOnJpbTozLjAiIHhtbG5zOm5zMz0idXJuOm9hc2lzOm5hbWVzOnRjOmVieG1sLXJlZ3JlcDp4c2Q6cnM6My4wIiB4bWxuczpuczQ9InVybjpvYXNpczpuYW1lczp0YzplYnhtbC1yZWdyZXA6eHNkOmxjbTozLjAiIG1heFJlc3VsdHM9Ii0xIiBzdGFydEluZGV4PSIwIiBmZWRlcmF0ZWQ9ImZhbHNlIj48UmVzcG9uc2VPcHRpb24gcmV0dXJuQ29tcG9zZWRPYmplY3RzPSJmYWxzZSIgcmV0dXJuVHlwZT0iUmVnaXN0cnlPYmplY3QiLz48bnMyOkFkaG9jUXVlcnkgaG9tZT0idXJuOm9pZDoyLjE2Ljg0MC4xLjExMzg4My4zLjIwMCIgaWQ9InVybjp1dWlkOjE0ZDRkZWJmLThmOTctNDI1MS05YTc0LWE5MDAxNmIwYWYwZCI+PG5zMjpTbG90IG5hbWU9IiRYRFNEb2N1bWVudEVudHJ5UGF0aWVudElkIj48bnMyOlZhbHVlTGlzdD48bnMyOlZhbHVlPkQxMjM0MDFeXl4mYW1wOzEuMSZhbXA7SVNPPC9uczI6VmFsdWU+PC9uczI6VmFsdWVMaXN0PjwvbnMyOlNsb3Q+PC9uczI6QWRob2NRdWVyeT48L0FkaG9jUXVlcnlSZXF1ZXN0Pg==</ns17:ParticipantObjectQuery>
            </ns17:ParticipantObjectIdentification>
         </ns17:findAuditEventsReturn>
         <ns17:findAuditEventsReturn>
            <ns17:EventIdentification EventOutcomeIndicator="0" EventDateTime="2009-07-06T17:55:00.389Z" EventActionCode="D">
               <ns17:EventID codeSystemName="SDD" codeSystem="Subject Discovery Revoke" displayName="Subject Discovery Revoke" code="SDD"/>
            </ns17:EventIdentification>
            <ns17:ActiveParticipant NetworkAccessPointTypeCode="2" NetworkAccessPointID="192.168.25.157" UserIsRequestor="true" UserName="MARK FRANKLIN" UserID="mfranklin"/>
            <ns17:AuditSourceIdentification AuditSourceID="1.1" AuditEnterpriseSiteID="InternalSelfTest1"/>
            <ns17:ParticipantObjectIdentification ParticipantObjectTypeCodeRole="1" ParticipantObjectTypeCode="1" ParticipantObjectID="D123401^^^&amp;1.1&amp;ISO">
               <ns17:ParticipantObjectIDTypeCode code="2"/>
               <ns17:ParticipantObjectQuery>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxQUlBBX0lOMjAxMzAzVVYgeG1sbnM9InVybjpobDctb3JnOnYzIiB4bWxuczpuczI9InVybjpnb3Y6aGhzOmZoYTpuaGluYzpjb21tb246bmhpbmNjb21tb24iIElUU1ZlcnNpb249IlhNTF8xLjAiIG51bGxGbGF2b3I9Ij8iPjxpZCBleHRlbnNpb249Ii01YTNlOTViMToxMWQxZmEzM2Q0NTotN2Y5YiIgcm9vdD0iMS4xIi8+PGNyZWF0aW9uVGltZSB2YWx1ZT0iMjAwODA2MjcwNDM4MDAiLz48aW50ZXJhY3Rpb25JZCBleHRlbnNpb249IlBSUEFfSU4yMDEzMDFVViIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMS42Ii8+PHByb2Nlc3NpbmdDb2RlIGNvZGU9IlQiLz48cHJvY2Vzc2luZ01vZGVDb2RlIGNvZGU9IlQiLz48YWNjZXB0QWNrQ29kZSBjb2RlPSJBTCIvPjxyZWNlaXZlciB0eXBlQ29kZT0iUkNWIj48ZGV2aWNlIGRldGVybWluZXJDb2RlPSJJTlNUQU5DRSI+PGlkIHJvb3Q9IjIuMiIvPjwvZGV2aWNlPjwvcmVjZWl2ZXI+PHNlbmRlciB0eXBlQ29kZT0iU05EIj48ZGV2aWNlIGRldGVybWluZXJDb2RlPSJJTlNUQU5DRSI+PGlkIHJvb3Q9IjEuMSIvPjwvZGV2aWNlPjwvc2VuZGVyPjxjb250cm9sQWN0UHJvY2VzcyBjbGFzc0NvZGU9IkNBQ1QiPjxzdWJqZWN0IGNvbnRleHRDb25kdWN0aW9uSW5kPSJmYWxzZSIgdHlwZUNvZGU9IlNVQkoiPjxyZWdpc3RyYXRpb25FdmVudCBtb29kQ29kZT0iRVZOIiBjbGFzc0NvZGU9IlJFRyI+PGlkIG51bGxGbGF2b3I9Ik5BIi8+PHN0YXR1c0NvZGUgY29kZT0iYWN0aXZlIi8+PHN1YmplY3QxPjxwYXRpZW50IGNsYXNzQ29kZT0iUEFUIj48aWQgZXh0ZW5zaW9uPSJEMTIzNDAxIiByb290PSIxLjEiLz48c3RhdHVzQ29kZSBjb2RlPSJhY3RpdmUiLz48cGF0aWVudFBlcnNvbj48bmFtZSB1c2U9IkwiPjxmYW1pbHkgcGFydFR5cGU9IkZBTSI+WW91bmdlcjwvZmFtaWx5PjxnaXZlbiBwYXJ0VHlwZT0iR0lWIj5HYWxsb3c8L2dpdmVuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L25hbWU+PGFkbWluaXN0cmF0aXZlR2VuZGVyQ29kZSBjb2RlPSJNIi8+PGJpcnRoVGltZSB2YWx1ZT0iMTk5OTA2MjciLz48L3BhdGllbnRQZXJzb24+PHByb3ZpZGVyT3JnYW5pemF0aW9uIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTpuaWw9InRydWUiLz48L3BhdGllbnQ+PC9zdWJqZWN0MT48Y3VzdG9kaWFuIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTpuaWw9InRydWUiLz48L3JlZ2lzdHJhdGlvbkV2ZW50Pjwvc3ViamVjdD48L2NvbnRyb2xBY3RQcm9jZXNzPjwvUFJQQV9JTjIwMTMwM1VWPg==</ns17:ParticipantObjectQuery>
            </ns17:ParticipantObjectIdentification>
         </ns17:findAuditEventsReturn>
         <ns17:findAuditEventsReturn>
            <ns17:EventIdentification EventOutcomeIndicator="0" EventDateTime="2009-07-06T17:59:19.410Z" EventActionCode="E">
               <ns17:EventID codeSystemName="ADQ" codeSystem="AuditQuery" displayName="AuditQuery" code="ADQ"/>
            </ns17:EventIdentification>
            <ns17:ActiveParticipant NetworkAccessPointTypeCode="2" NetworkAccessPointID="192.168.25.157" UserIsRequestor="true" UserName="MARK FRANKLIN" AlternativeUserID="" UserID="mfranklin"/>
            <ns17:AuditSourceIdentification AuditSourceID="1.1" AuditEnterpriseSiteID="InternalSelfTest1"/>
            <ns17:ParticipantObjectIdentification ParticipantObjectTypeCodeRole="1" ParticipantObjectTypeCode="1" ParticipantObjectID="D123401^^^&amp;1.1&amp;ISO">
               <ns17:ParticipantObjectIDTypeCode code="2"/>
               <ns17:ParticipantObjectQuery>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/PjxGaW5kQXVkaXRFdmVudHMgeG1sbnM9Imh0dHA6Ly9uaGluYy5zZXJ2aWNlcy5jb20vc2NoZW1hL2F1ZGl0bWVzc2FnZSI+PHBhdGllbnRJZD5EMTIzNDAxXl5eJmFtcDsxLjEmYW1wO0lTTzwvcGF0aWVudElkPjx1c2VySWQ+bWZyYW5rbGluPC91c2VySWQ+PGJlZ2luRGF0ZVRpbWU+MjAwOS0wNy0wNlQxNjo1OToxOVo8L2JlZ2luRGF0ZVRpbWU+PGVuZERhdGVUaW1lPjIwMDktMDctMDZUMTg6MDQ6MTlaPC9lbmREYXRlVGltZT48L0ZpbmRBdWRpdEV2ZW50cz4=</ns17:ParticipantObjectQuery>
            </ns17:ParticipantObjectIdentification>
         </ns17:findAuditEventsReturn>
      </ns17:FindAuditEventsResponse>
   </S:Body>
</S:Envelope>]]></con:responseContent>
						<con:wsaConfig mustUnderstand="NONE" version="200508"/>
					</con:response>
				</con:config>
			</con:testStep>
			<con:testStep disabled="true" name="Undo mods to internalConnectionInfo file" type="groovy">
				<con:settings/>
				<con:config>
					<script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
//def destConfigFileLocation = dataSource.getPropertyValue("NHINGatewayConfigDir");
def destConfigFileLocation = System.env['NHINC_PROPERTIES_DIR'];
def NHINGatewayHost = dataSource.getPropertyValue("NHINGatewayHost");
def auditQueryURL = "https://" + NHINGatewayHost + ":8181/CONNECTNhinServicesWeb/NhinService/findAuditEvents/AuditQuery";
def LocalHCID = dataSource.getPropertyValue( "LocalHCID" );

FileUtils.CreateOrUpdateConnection(destConfigFileLocation, "2.2", "auditquery", auditQueryURL, context, log)
					</script>
				</con:config>
			</con:testStep>
			<con:testStep disabled="true" name="Restore internalConnectionInfo file" type="groovy">
				<con:settings/>
				<con:config>
					<script>import java.io.File;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def NHINGatewayConfigDir = propertyList.getPropertyValue( "NHINGatewayConfigDir" );
def GatewayPropFile = NHINGatewayConfigDir + "/internalConnectionInfo.xml"
def GatewayPropFileBak = GatewayPropFile + ".bak";

File myFile = new File(GatewayPropFileBak);
if(myFile.exists())
{
    new File(GatewayPropFile).withWriter 
    { 
        file -> new File(GatewayPropFileBak).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
    myFile.delete();
}
					</script>
				</con:config>
			</con:testStep>
			<con:testStep name="Restore Configurations" type="groovy">
				<con:settings/>
				<con:config>
					<script>FileUtils.InitializeNHINCProperties(context, log);
					</script>
				</con:config>
			</con:testStep>
			<con:setupScript><![CDATA[
				/*def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def testCase = testRunner.getTestCase()
def testSuite = testCase.getTestSuite()
def project = testSuite.getProject()
def projectPropFullFile = project.getPath()
def projectPropPath = groovyUtils.projectPath
def projectPropFile = projectPropFullFile[projectPropPath.length() + 1..projectPropFullFile.length() - 1] + ".properties"

sourceNHINFileLocation = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceNHINFileLocation", context, log);
destNHINFileLocation = FileUtils.ReadProperty(projectPropPath, projectPropFile, "destNHINFileLocation", context, log);
sourceConfigFileLocation = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceConfigFileLocation", context, log);
destConfigFileLocation = FileUtils.ReadProperty(projectPropPath, projectPropFile, "destConfigFileLocation", context, log);
backupFileLocation = FileUtils.ReadProperty(projectPropPath, projectPropFile, "backupFileLocation", context, log);

sourceInternalConnection = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceInternalConnection", context, log);
if (sourceInternalConnection && sourceInternalConnection.length() != 0) {
  FileUtils.MoveFile(destNHINFileLocation, "internalConnectionInfo.xml", backupFileLocation, "internalConnectionInfo.xml", context, log)
  FileUtils.MoveFile(sourceNHINFileLocation, sourceInternalConnection, destNHINFileLocation, "internalConnectionInfo.xml", context, log)
}

sourceGateway = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceGateway", context, log);
if (sourceGateway && sourceGateway.length() != 0) {
  FileUtils.MoveFile(destNHINFileLocation, "gateway.properties", backupFileLocation, "gateway.properties", context, log)
  FileUtils.MoveFile(sourceNHINFileLocation, sourceGateway, destNHINFileLocation, "gateway.properties", context, log)
}

sourceConnectionEPR = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceConnectionEPR", context, log);
if (sourceConnectionEPR && sourceConnectionEPR.length() != 0) {
  FileUtils.MoveFile(destNHINFileLocation, "connectionEPR.properties", backupFileLocation, "connectionEPR.properties", context, log)
  FileUtils.MoveFile(sourceNHINFileLocation, sourceConnectionEPR, destNHINFileLocation, "connectionEPR.properties", context, log)
}

sourceAdapter = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceAdapter", context, log);
if (sourceAdapter && sourceAdapter.length() != 0) {
  FileUtils.MoveFile(destNHINFileLocation, "adapter.properties", backupFileLocation, "adapter.properties", context, log)
  FileUtils.MoveFile(sourceNHINFileLocation, sourceAdapter, destNHINFileLocation, "adapter.properties", context, log)
}

sourceMPI = FileUtils.ReadProperty(projectPropPath, projectPropFile, "sourceMPI", context, log);
if (sourceMPI && sourceMPI.length() != 0) {
  log.info "mpi"
  FileUtils.MoveFile(destConfigFileLocation, "mpi.xml", backupFileLocation, "mpi.xml", context, log)
  FileUtils.MoveFile(sourceConfigFileLocation, sourceMPI, destConfigFileLocation, "mpi.xml", context, log)
}*/
			]]></con:setupScript>
			<con:properties>
				<con:property>
					<con:name>startDate</con:name>
					<con:value>2010-04-26T00:00:00Z</con:value>
				</con:property>
				<con:property>
					<con:name>endDate</con:name>
					<con:value>2010-04-26T20:48:49Z</con:value>
				</con:property>
				<con:property>
					<con:name>sigDate</con:name>
					<con:value>04/26/2010 00:00:00</con:value>
				</con:property>
				<con:property>
					<con:name>expireDate</con:name>
					<con:value>2010-05-26T00:00:00Z</con:value>
				</con:property>
				<con:property>
					<con:name>FullPatientID</con:name>
					<con:value>D123401^^^&amp;amp;1.1&amp;amp;ISO</con:value>
				</con:property>
			</con:properties>
			<con:reportParameters/>
			<con:tearDownScript>FileUtils.restoreToMasterConfiguration(context, log);</con:tearDownScript>
		</con:testCase>
		<con:properties/>
		<con:reportParameters/>
	</con:testSuite>
	<con:requirements/>
	<con:properties>
		<con:property>
			<con:name>sourceConfigFileLocation</con:name>
			<con:value>C:/projects/NHINC/Current/Product/Production/Common/Properties</con:value>
		</con:property>
		<con:property>
			<con:name>AuditQueryEndpoint</con:name>
			<con:value>http://localhost:8080/CONNECTAdapter/EntityAuditQuery</con:value>
		</con:property>
		<con:property>
			<con:name>sourceNHINFileLocation</con:name>
			<con:value>C:/Projects/nhinc/Current/Product/IntegrationTest/GatewayConfigFiles</con:value>
		</con:property>
		<con:property>
			<con:name>NHINGatewayConfigDir</con:name>
			<con:value>c:/Sun/AppServer/domains/domain1/config/nhin</con:value>
		</con:property>
		<con:property>
			<con:name>NHINGatewayHost</con:name>
			<con:value>localhost</con:value>
		</con:property>
		<con:property>
			<con:name>sourceAdapter</con:name>
			<con:value/>
		</con:property>
		<con:property>
			<con:name>LocalHCID</con:name>
			<con:value>1.1</con:value>
		</con:property>
		<con:property>
			<con:name>LocalAA</con:name>
			<con:value>1.1</con:value>
		</con:property>
		<con:property>
			<con:name>AuditPatientID</con:name>
			<con:value>D123401</con:value>
		</con:property>
		<con:property>
			<con:name>backupFileLocation</con:name>
			<con:value>C:/Backup/AuditQueryTestHelper</con:value>
		</con:property>
		<con:property>
			<con:name>LocalHCDescription</con:name>
			<con:value>InternalTest1</con:value>
		</con:property>
		<con:property>
			<con:name>sourceMPI</con:name>
			<con:value/>
		</con:property>
		<con:property>
			<con:name>sourceInternalConnection</con:name>
			<con:value>AuditQueryTestHelper_internalConnectionInfo.xml</con:value>
		</con:property>
		<con:property>
			<con:name>destNHINFileLocation</con:name>
			<con:value>C:/Sun/AppServer/domains/domain1/config/nhin</con:value>
		</con:property>
		<con:property>
			<con:name>sourceConnectionEPR</con:name>
			<con:value/>
		</con:property>
		<con:property>
			<con:name>sourceGateway</con:name>
			<con:value/>
		</con:property>
		<con:property>
			<con:name>MockHost</con:name>
			<con:value>localhost</con:value>
		</con:property>
		<con:property>
			<con:name>destConfigFileLocation</con:name>
			<con:value>C:/Sun/AppServer/domains/domain1/config</con:value>
		</con:property>
	</con:properties>
	<con:afterLoadScript>def propertiesFilename = project.path[0..(project.path.size()-4)] + 'properties'
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
	def props = new Properties()
	props.load(new FileReader(propertiesFile))
	props.each { key, value ->
	    project.setPropertyValue(key, value)
	}
}


TimeZone.setDefault(TimeZone.getTimeZone("UTC"))
def testRunListener = [
  afterRun: { testRunner, runContext -> },
  afterStep: { testRunner, runContext, result -> },
  beforeStep: { testRunner, runContext -> },
  beforeStep: { testRunner, runContext, testStep -> },
  beforeRun: { testRunner, runContext -> 
    use (org.codehaus.groovy.runtime.TimeCategory) {
      def startDate = 5.minutes.ago
      def endDate = 5.minutes.from.now
      def expireDate = 30.days.from.now

      def df = "yyyy-MM-dd'T'HH:mm:ss'Z'"
      def dfSig = "MM/dd/yyyy' 'HH:mm:ss"

      runContext.testCase.setPropertyValue("startDate", startDate.format(df))
      runContext.testCase.setPropertyValue("endDate", endDate.format(df))
      runContext.testCase.setPropertyValue("sigDate", startDate.format(dfSig))
      runContext.testCase.setPropertyValue("expireDate", expireDate.format(df))
    }
  }   
] as com.eviware.soapui.model.testsuite.TestRunListener

project.testSuiteList*.testCaseList.flatten()*.addTestRunListener(testRunListener)



com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.findProperty = { propertyName ->
    return delegate.getProperty(propertyName) ?:
                delegate.testCase.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.project.getPropertyValue(propertyName)
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.withSql = { dbOrPropertyName, block ->
  def dbName = delegate.findProperty(dbOrPropertyName) ?: dbOrPropertyName
  def host = delegate.findProperty('DBHost')
  def port = delegate.findProperty('DBPort')
  def user = delegate.findProperty('DBUser')
  def pass = delegate.findProperty('DBPass')

  def connectString = "jdbc:mysql://${host}:${port}/${dbName}"
  def sql = groovy.sql.Sql.newInstance(connectString, user, pass, "com.mysql.jdbc.Driver");
  try {
     block(sql)
  } finally {
    sql.close()
  }
}
	</con:afterLoadScript>
	<con:wssContainer/>
	<con:databaseConnectionContainer/>
	<con:reporting>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:xmlTemplates/>
		<con:parameters/>
	</con:reporting>
	<con:eventHandlers name="TestSuiteRunListener.beforeTestCase" type="TestSuiteRunListener.beforeTestCase">
		<con:script>FileUtils.backupConfiguration(context, log);</con:script>
	</con:eventHandlers>
	<con:eventHandlers name="TestSuiteRunListener.afterTestCase" type="TestSuiteRunListener.afterTestCase">
		<con:script>FileUtils.restoreConfiguration(context, log)</con:script>
	</con:eventHandlers>
</con:soapui-project>