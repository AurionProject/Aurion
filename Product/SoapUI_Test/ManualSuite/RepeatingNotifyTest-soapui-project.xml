<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="RepeatingNotifyTest" resourceRoot="" soapui-version="4.0.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EntitySubscriptionManagerBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entitysubscriptionmanagement}EntitySubscriptionManagerBindingSoap" soapVersion="1_2" anonymous="optional" definition="C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubscriptionManagement.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntitySubscriptionManager</con:endpoint><con:endpoint>http://localhost:8080/CONNECTAdapter/EntitySubscriptionManager</con:endpoint><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityNotificationProducer</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:Unsubscribe" name="Unsubscribe" bindingOperationName="Unsubscribe" type="Request-Response" outputName="UnsubscribeResponse" inputName="UnsubscribeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EntityNotificationProducerBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entitysubscriptionmanagement}EntityNotificationProducerBindingSoap" soapVersion="1_2" anonymous="optional" definition="C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntitySubscriptionManagement.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://192.168.25.157:8080/NhinConnect/EntityNotificationProducer</con:endpoint><con:endpoint>http://mhsnhie3.fedsconnect.org:8080/NhinConnect/EntityNotificationProducer</con:endpoint><con:endpoint>http://dvanhie3.fedsconnect.org:8080/NhinConnect/EntityNotificationProducer</con:endpoint><con:endpoint>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:endpoint><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityNotificationProducer</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:Subscribe" name="Subscribe" bindingOperationName="Subscribe" type="Request-Response" outputName="SubscribeResponse" inputName="SubscribeRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:SubscribeCdcBioPackage" name="SubscribeCdcBioPackage" bindingOperationName="SubscribeCdcBioPackage" type="Request-Response" outputName="SubscribeCdcBioPackageResponse" inputName="SubscribeCdcBioPackageRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:SubscribeDocument" name="SubscribeDocument" bindingOperationName="SubscribeDocument" type="Request-Response" outputName="SubscribeDocumentResponse" inputName="SubscribeDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EntityNotificationConsumerBindingSoap" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:entitynotificationconsumer}EntityNotificationConsumerBindingSoap" soapVersion="1_2" anonymous="optional" definition="C:/Projects/NHINC/Current/Product/Production/Common/Interfaces/src/wsdl/EntityNotificationConsumer.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/EntityNotificationConsumer</con:endpoint><con:endpoint>http://localhost:8088/mockEntityNotificationConsumerBindingSoap11</con:endpoint><con:endpoint>http://localhost:8080/CONNECTAdapter/EntityNotificationConsumer</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:Notify" name="Notify" bindingOperationName="Notify" type="Request-Response" outputName="NotifyResponse" inputName="NotifyRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:NotifySubscribersOfCdcBioPackage" name="NotifySubscribersOfCdcBioPackage" bindingOperationName="NotifySubscribersOfCdcBioPackage" type="Request-Response" outputName="NotifySubscribersOfCdcBioPackageResponse" inputName="NotifySubscribersOfCdcBioPackageRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:NotifySubscribersOfDocument" name="NotifySubscribersOfDocument" bindingOperationName="NotifySubscribersOfDocument" type="Request-Response" outputName="NotifySubscribersOfDocumentResponse" inputName="NotifySubscribersOfDocumentRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation></con:interface><con:testSuite name="RepeatingNotify"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create file in File Transfer dir and loop" searchProperties="true" id="37a77123-7b13-4a11-bd5f-3c2089d73b85"><con:settings/><con:testStep type="groovy" name="Create file in File Transfer dir"><con:settings/><con:config><script>def dumpDir = context.findProperty( "dumpDir" );
def nowDate = new Date().format("yyyy-MM-dd'T'HH-mm-ss")
def fileInDumpDir = dumpDir + "/NotifyTest-" + nowDate + ".txt";

log.info "Creating " + fileInDumpDir;
new File(fileInDumpDir).write(nowDate + ": This file was sent to you because you have a subscription to the NotifyTest topic.")  
</script></con:config></con:testStep><con:testStep type="delay" name="Delay while file is transferred"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="groovy" name="Verify File Transfer dir is empty"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

def dumpDir = context.findProperty( "dumpDir" );
assert dumpDir != null : "dumpDir"

dir = new File(dumpDir)
assert dir.list().size() == 0 : "Not Empty"
</script></con:config></con:testStep><con:testStep type="delay" name="Delay between copy actions"><con:settings/><con:config><delay>840000</delay></con:config></con:testStep><con:testStep type="groovy" name="Loop"><con:settings/><con:config><script>testRunner.gotoStepByName( "Create file in File Transfer dir" );</script></con:config></con:testStep><con:properties><con:property><con:name>startDate</con:name><con:value>2010-04-12T15:10:45Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2010-04-12T15:20:45Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>04/12/2010 15:10:45</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2010-05-12T00:00:00Z</con:value></con:property><con:property><con:name>nowDate</con:name><con:value>2010-04-12T15-15-45</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Subscriber"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Step 1 - Create Subscription" searchProperties="true" id="9ab6ac05-1b00-43cb-a4da-44f33bf6e73f"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/Projects/NHINC/Current/Product/SoapUI_Test/ManualSuite/RepeatingNotifyTest-soapui-project.properties</con:source><con:properties><con:property><con:name>subscriberName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberEntityEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberNotifyEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberUnsubscribeEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>exportDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriptionID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NotifySubscriptionManagerEndpointAddress</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>startDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>copyFile</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dumpDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>topic</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Clear Export Directory"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def sexportDir = propertyList.getPropertyValue( "exportDir" );
assert sexportDir != null : "exportDir"

dir = new File(sexportDir)

dir.eachFile { f -> 
  f.delete()
}
assert dir.list().size() == 0 : "Not Empty"
</script></con:config></con:testStep><con:testStep type="groovy" name="Clear Subscription Table - Subscriber"><con:settings/><con:config><script>import groovy.sql.Sql;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def host = dataSource.getPropertyValue( "subscriberDBHost" );
def port = dataSource.getPropertyValue( "subscriberDBPort" );
def user = dataSource.getPropertyValue( "subscriberDBUser" );
def pass = dataSource.getPropertyValue( "subscriberDBPass" );
def db = dataSource.getPropertyValue( "subscriberSubscriptionDB" );
def table = dataSource.getPropertyValue( "subscriberSubscriptionTable" );

void clearTable(host, port, dbName, user, password, table) {
   
   def sqlConnect = 'jdbc:mysql://' + host + ':' + port + '/' + dbName;
   def sqlExecute = 'delete from ' + table;
   def sql = Sql.newInstance(sqlConnect, user, password, "com.mysql.jdbc.Driver");
   def result = sql.execute(sqlExecute);
   }

clearTable(host, port, db, user, pass, table);

</script></con:config></con:testStep><con:testStep type="groovy" name="Count Subscriptions = 0"><con:settings/><con:config><script>import groovy.sql.Sql;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def host = dataSource.getPropertyValue( "subscriberDBHost" );
def port = dataSource.getPropertyValue( "subscriberDBPort" );
def user = dataSource.getPropertyValue( "subscriberDBUser" );
def pass = dataSource.getPropertyValue( "subscriberDBPass" );
def db = dataSource.getPropertyValue( "subscriberSubscriptionDB" );
def table = dataSource.getPropertyValue( "subscriberSubscriptionTable" );
def unsubSubscriptionID = dataSource.getPropertyValue( "UnsubSubscriptionID" );
def startDate = dataSource.getPropertyValue( "startDate" );

int countRows(host, port, dbName, user, password, table, unsubSubscriptionID, startDate) {
   
   def sqlConnect = 'jdbc:mysql://' + host + ':' + port + '/' + dbName;
   def sql = Sql.newInstance(sqlConnect, user, password, "com.mysql.jdbc.Driver");
   def count = 0;
   sql.eachRow("select count(*) from " + table) { row ->
	count = row[0];
   }
   return count;
}

def count = countRows(host, port, db, user, pass, table, unsubSubscriptionID, startDate);
assert count == 0;</script></con:config></con:testStep><con:testStep type="groovy" name="get Dates"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd' 'HH:mm:ss");

sdf2 = new java.text.SimpleDateFormat("MM/dd/yyyy' 'HH:mm:ss");
sdf2.setTimeZone(TimeZone.getTimeZone("UTC"));

Calendar cal = new GregorianCalendar();
nowDate = new Date();

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, -5);
startDate = cal.getTime();
startDateStr = sdf.format(startDate);
sigDateStr = sdf2.format(startDate);

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, 5);
endDate = cal.getTime();
endDateStr = sdf.format(endDate);

cal.setTime(nowDate);
cal.add(Calendar.DATE, 30);
expireDate = cal.getTime();
expireDateStr = sdf2.format(expireDate);

groovyUtils.setPropertyValue( "Test Case Properties", "startDate", startDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "endDate", endDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "sigDate", sigDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "expireDate", expireDateStr);
</script></con:config></con:testStep><con:testStep type="transfer" name="set subscribe properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>subscriberEntityEndpoint</con:name><con:sourceType>subscriberEntityEndpoint</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>subscriberNotifyEndpoint</con:name><con:sourceType>subscriberNotifyEndpoint</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace wsnt='http://docs.oasis-open.org/wsn/b-2';
declare namespace wsa='http://www.w3.org/2005/08/addressing';
//urn:SubscribeRequest[1]/wsnt:Subscribe[1]/wsnt:ConsumerReference[1]/wsa:Address[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>topic</con:name><con:sourceType>topic</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace wsnt='http://docs.oasis-open.org/wsn/b-2';
//urn:SubscribeRequest[1]/wsnt:Subscribe[1]/wsnt:Filter[1]/wsnt:TopicExpression[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>subscriberHCID</con:name><con:sourceType>subscriberHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace nccommon='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:assertion[1]/nccommon:homeCommunity[1]/nccommon:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>subscriberName</con:name><con:sourceType>subscriberName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace nccommon='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:assertion[1]/nccommon:homeCommunity[1]/nccommon:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>subscriberDesc</con:name><con:sourceType>subscriberName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace nccommon='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:assertion[1]/nccommon:homeCommunity[1]/nccommon:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>notifierHCID</con:name><con:sourceType>notifierHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn1='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:nhinTargetCommunities[1]/urn1:nhinTargetCommunity[1]/urn1:homeCommunity[1]/urn1:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>notifierName</con:name><con:sourceType>notifierName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn1='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:nhinTargetCommunities[1]/urn1:nhinTargetCommunity[1]/urn1:homeCommunity[1]/urn1:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>notifierDesc</con:name><con:sourceType>notifierName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn1='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:nhinTargetCommunities[1]/urn1:nhinTargetCommunity[1]/urn1:homeCommunity[1]/urn1:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>signatureDate</con:name><con:sourceType>sigDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:assertion[1]/urn2:dateOfSignature[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>expireDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Subscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:SubscribeRequest[1]/urn:assertion[1]/urn2:expirationDate[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="Subscribe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EntityNotificationProducerBindingSoap</con:interface><con:operation>Subscribe</con:operation><con:request name="Subscribe"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://connectred5.fedsconnect.org:8080/CONNECTAdapter/EntityNotificationProducer</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add1="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:SubscribeRequest>
         <wsnt:Subscribe>
            <wsnt:ConsumerReference>
               <wsa:Address>https://connectred5.fedsconnect.org:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</wsa:Address>
            </wsnt:ConsumerReference>
            <wsnt:Filter>
               <wsnt:TopicExpression Dialect="http://docs.oasis-open.org/wsn/t-1/TopicExpression/Simple" xmlns:nhin="urn:nhin">nhinc:NotifyTest</wsnt:TopicExpression>
            </wsnt:Filter>
         </wsnt:Subscribe>
         <urn:assertion xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon">
            <nccommon:address>
               <nccommon:addressType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>address</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>White</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:addressType>
               <nccommon:city>BUFFALO</nccommon:city>
               <nccommon:country>USA</nccommon:country>
               <nccommon:state>NY</nccommon:state>
               <nccommon:streetAddress>12345 EAST COAST WAY</nccommon:streetAddress>
               <nccommon:zipCode>01010</nccommon:zipCode>
            </nccommon:address>
            <nccommon:dateOfBirth>19800516</nccommon:dateOfBirth>
            <nccommon:dateOfSignature>04/12/2010 21:30:51</nccommon:dateOfSignature>
            <nccommon:expirationDate>05/12/2010 21:35:51</nccommon:expirationDate>
            <nccommon:explanationNonClaimantSignature>NEEDED</nccommon:explanationNonClaimantSignature>
            <nccommon:haveSecondWitnessSignature>true</nccommon:haveSecondWitnessSignature>
            <nccommon:haveSignature>true</nccommon:haveSignature>
            <nccommon:haveWitnessSignature>true</nccommon:haveWitnessSignature>
            <nccommon:homeCommunity>
               <nccommon:description>RED5</nccommon:description>
               <nccommon:homeCommunityId>RED5</nccommon:homeCommunityId>
               <nccommon:name>RED5</nccommon:name>
            </nccommon:homeCommunity>
            <nccommon:personName>
               <nccommon:familyName>JONES</nccommon:familyName>
               <nccommon:givenName>FRED</nccommon:givenName>
               <nccommon:nameType>
                  <nccommon:code>G</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>G</nccommon:displayName>
                  <nccommon:originalText>G</nccommon:originalText>
               </nccommon:nameType>
               <nccommon:secondNameOrInitials>ANDREW</nccommon:secondNameOrInitials>
            </nccommon:personName>
            <nccommon:phoneNumber>
               <nccommon:areaCode>703</nccommon:areaCode>
               <nccommon:countryCode>1</nccommon:countryCode>
               <nccommon:extension>1212</nccommon:extension>
               <nccommon:localNumber>555</nccommon:localNumber>
               <nccommon:phoneNumberType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>50</nccommon:codeSystem>
                  <nccommon:codeSystemName>phoneNumberType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Work</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:phoneNumberType>
            </nccommon:phoneNumber>
            <nccommon:purposeOfDisclosure>NEEDED FOR SSA</nccommon:purposeOfDisclosure>
            <nccommon:secondWitnessAddress>
               <nccommon:addressType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>address</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>White</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:addressType>
               <nccommon:city>ALBANY</nccommon:city>
               <nccommon:country>USA</nccommon:country>
               <nccommon:state>NY</nccommon:state>
               <nccommon:streetAddress>4 TROY STREET</nccommon:streetAddress>
               <nccommon:zipCode>01033</nccommon:zipCode>
            </nccommon:secondWitnessAddress>
            <nccommon:secondWitnessName>
               <nccommon:familyName>JONES</nccommon:familyName>
               <nccommon:givenName>JAMES</nccommon:givenName>
               <nccommon:nameType>
                  <nccommon:code>G</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>G</nccommon:displayName>
                  <nccommon:originalText>G</nccommon:originalText>
               </nccommon:nameType>
               <nccommon:secondNameOrInitials>KENNETH</nccommon:secondNameOrInitials>
            </nccommon:secondWitnessName>
            <nccommon:secondWitnessPhone>
               <nccommon:areaCode>301</nccommon:areaCode>
               <nccommon:countryCode>1</nccommon:countryCode>
               <nccommon:extension>555</nccommon:extension>
               <nccommon:localNumber>0001</nccommon:localNumber>
               <nccommon:phoneNumberType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>phoneNumberType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Work</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:phoneNumberType>
            </nccommon:secondWitnessPhone>
            <nccommon:SSN>123456789</nccommon:SSN>
            <nccommon:uniquePatientId>D1234011</nccommon:uniquePatientId>
            <nccommon:witnessAddress>
               <nccommon:addressType>
                  <nccommon:code>H</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>address</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Home</nccommon:displayName>
                  <nccommon:originalText>H</nccommon:originalText>
               </nccommon:addressType>
               <nccommon:city>HARTFORD</nccommon:city>
               <nccommon:country>USA</nccommon:country>
               <nccommon:state>CT</nccommon:state>
               <nccommon:streetAddress>10410 MAIN ST.</nccommon:streetAddress>
               <nccommon:zipCode>05032</nccommon:zipCode>
            </nccommon:witnessAddress>
            <nccommon:witnessName>
               <nccommon:familyName>COREY</nccommon:familyName>
               <nccommon:givenName>AMANDA</nccommon:givenName>
               <nccommon:nameType>
                  <nccommon:code>H</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>H</nccommon:displayName>
                  <nccommon:originalText>H</nccommon:originalText>
               </nccommon:nameType>
               <nccommon:secondNameOrInitials>EVE</nccommon:secondNameOrInitials>
            </nccommon:witnessName>
            <nccommon:witnessPhone>
               <nccommon:areaCode>202</nccommon:areaCode>
               <nccommon:countryCode>1</nccommon:countryCode>
               <nccommon:extension>555</nccommon:extension>
               <nccommon:localNumber>1010</nccommon:localNumber>
               <nccommon:phoneNumberType>
                  <nccommon:code>H</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>H</nccommon:displayName>
                  <nccommon:originalText>H</nccommon:originalText>
               </nccommon:phoneNumberType>
            </nccommon:witnessPhone>
            <nccommon:userInfo>
               <nccommon:personName>
                  <nccommon:familyName>FRANKLIN</nccommon:familyName>
                  <nccommon:givenName>MARK</nccommon:givenName>
                  <nccommon:nameType>
                     <nccommon:code>P</nccommon:code>
                     <nccommon:codeSystem>30</nccommon:codeSystem>
                     <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                     <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                     <nccommon:displayName>P</nccommon:displayName>
                     <nccommon:originalText>P</nccommon:originalText>
                  </nccommon:nameType>
                  <nccommon:secondNameOrInitials>ALAN</nccommon:secondNameOrInitials>
               </nccommon:personName>
               <nccommon:userName>mfranklin</nccommon:userName>
               <nccommon:role>Administrator</nccommon:role>
               <nccommon:org>
                  <nccommon:description>Federal - VA</nccommon:description>
                  <nccommon:homeCommunityId>2.16.840.1.113883.3.200</nccommon:homeCommunityId>
                  <nccommon:name>InternalSelfTest2</nccommon:name>
               </nccommon:org>
               <nccommon:roleCoded>
                  <nccommon:code>307969004</nccommon:code>
                  <nccommon:codeSystem>2.16.840.1.113883.6.96</nccommon:codeSystem>
                  <nccommon:codeSystemName>SNOMED_CT</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Public Health</nccommon:displayName>
                  <nccommon:originalText>Public Health</nccommon:originalText>
               </nccommon:roleCoded>
            </nccommon:userInfo>
            <nccommon:authorized>true</nccommon:authorized>
            <nccommon:purposeOfDisclosureCoded>
               <nccommon:code>PUBLICHEALTH</nccommon:code>
               <nccommon:codeSystem>2.16.840.1.113883.3.18.7.1</nccommon:codeSystem>
               <nccommon:codeSystemName>nhin-purpose</nccommon:codeSystemName>
               <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
               <nccommon:displayName>Use or disclosure of Psychotherapy Notes</nccommon:displayName>
               <nccommon:originalText>Psychotherapy Notes</nccommon:originalText>
            </nccommon:purposeOfDisclosureCoded>
            <nccommon:claimFormRef>Ref-Clm-123</nccommon:claimFormRef>
            <nccommon:claimFormRaw>YWVvbGlhbQ==</nccommon:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetCommunities>
            <urn1:nhinTargetCommunity>
               <urn1:homeCommunity>
                  <urn1:description>External Test Gateway R2.4.1</urn1:description>
                  <urn1:homeCommunityId>2.16.840.1.113883.3.333</urn1:homeCommunityId>
                  <urn1:name>External Test Gateway R2.4.1</urn1:name>
               </urn1:homeCommunity>
            </urn1:nhinTargetCommunity>
         </urn:nhinTargetCommunities>
      </urn:SubscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def holder = groovyUtils.getXmlHolder( messageExchange.responseContent )
holder.namespaces["ns1"] = "http://docs.oasis-open.org/wsn/b-2"
holder.namespaces["ns2"] = "http://www.w3.org/2005/08/addressing"
holder.namespaces["ns3"] = "http://www.hhs.gov/healthit/nhin"

def subscriptionID = holder["//ns1:SubscribeResponse[1]/ns1:SubscriptionReference[1]/ns2:ReferenceParameters[1]/ns3:SubscriptionId[1]"]
groovyUtils.setPropertyValue( "Test Case Properties", "subscriptionID", subscriptionID);
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Count Subscriptions > 0"><con:settings/><con:config><script>import groovy.sql.Sql;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def host = dataSource.getPropertyValue( "subscriberDBHost" );
def port = dataSource.getPropertyValue( "subscriberDBPort" );
def user = dataSource.getPropertyValue( "subscriberDBUser" );
def pass = dataSource.getPropertyValue( "subscriberDBPass" );
def db = dataSource.getPropertyValue( "subscriberSubscriptionDB" );
def table = dataSource.getPropertyValue( "subscriberSubscriptionTable" );
def unsubSubscriptionID = dataSource.getPropertyValue( "UnsubSubscriptionID" );
def startDate = dataSource.getPropertyValue( "startDate" );

int countRows(host, port, dbName, user, password, table, unsubSubscriptionID, startDate) {
   
   def sqlConnect = 'jdbc:mysql://' + host + ':' + port + '/' + dbName;
   def sql = Sql.newInstance(sqlConnect, user, password, "com.mysql.jdbc.Driver");
   def count = 0;
   sql.eachRow("select count(*) from " + table) { row ->
	count = row[0];
   }
   return count;
}

def count = countRows(host, port, db, user, pass, table, unsubSubscriptionID, startDate);
assert count > 0;</script></con:config></con:testStep><con:properties><con:property><con:name>startDate</con:name><con:value>2010-04-12T21:30:41Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2010-04-12T21:40:41Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>04/12/2010 21:30:41</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2010-05-12T00:00:00Z</con:value></con:property><con:property><con:name>nowDate</con:name><con:value>2010-04-12T21-35-41</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Step 2 - Verify file is present" searchProperties="true" id="f8d4153f-6647-4b2f-9288-d672d287476b"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/Projects/NHINC/Current/Product/SoapUI_Test/ManualSuite/RepeatingNotifyTest-soapui-project.properties</con:source><con:target/><con:properties><con:property><con:name>subscriberName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberEntityEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberNotifyEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberUnsubscribeEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>exportDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriptionID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NotifySubscriptionManagerEndpointAddress</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>copyFile</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dumpDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>topic</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Verify testTopic"><con:settings/><con:config><script>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );

def sexportDir = propertyList.getPropertyValue( "exportDir" );
assert sexportDir != null : "exportDir";

dir = new File(sexportDir);
assert dir.list().size() > 0 : "Dir: " + dir + " Empty";
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Step 3 - Unsubscribe" searchProperties="true" id="2bf9ac40-5fe7-4fef-8153-3caf1f9e3232"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/Projects/NHINC/Current/Product/SoapUI_Test/ManualSuite/RepeatingNotifyTest-soapui-project.properties</con:source><con:properties><con:property><con:name>subscriberName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberEntityEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberNotifyEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberUnsubscribeEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>exportDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriptionID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NotifySubscriptionManagerEndpointAddress</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>copyFile</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dumpDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>topic</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>startDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="get Dates"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

sdf = new java.text.SimpleDateFormat("yyyy-MM-dd' 'HH:mm:ss");

sdf2 = new java.text.SimpleDateFormat("MM/dd/yyyy' 'HH:mm:ss");
sdf2.setTimeZone(TimeZone.getTimeZone("UTC"));

Calendar cal = new GregorianCalendar();
nowDate = new Date();

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, -5);
startDate = cal.getTime();
startDateStr = sdf.format(startDate);
sigDateStr = sdf2.format(startDate);

cal.setTime(nowDate);
cal.add(Calendar.MINUTE, 5);
endDate = cal.getTime();
endDateStr = sdf.format(endDate);

cal.setTime(nowDate);
cal.add(Calendar.DATE, 30);
expireDate = cal.getTime();
expireDateStr = sdf2.format(expireDate);

groovyUtils.setPropertyValue( "Test Case Properties", "startDate", startDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "endDate", endDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "sigDate", sigDateStr);
groovyUtils.setPropertyValue( "Test Case Properties", "expireDate", expireDateStr);
</script></con:config></con:testStep><con:testStep type="transfer" name="set unsubscribe properties"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>endpointTransfer</con:name><con:sourceType>subscriberUnsubscribeEndpoint</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>Endpoint</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>subscriptionID</con:name><con:sourceType>subscriptionID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace ns5='http://www.hhs.gov/healthit/nhin';
//ns5:SubscriptionId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>subscriptionMgrEndpoint</con:name><con:sourceType>NotifySubscriptionManagerEndpointAddress</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:nhinTargetSystem[1]/urn2:url[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>signatureDate</con:name><con:sourceType>sigDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:dateOfSignature[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>expireDate</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:expirationDate[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCID</con:name><con:sourceType>subscriberHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:homeCommunity[1]/urn2:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCName</con:name><con:sourceType>subscriberName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:homeCommunity[1]/urn2:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>assertionHCDescription</con:name><con:sourceType>subscriberName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:homeCommunity[1]/urn2:description[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCID</con:name><con:sourceType>notifierHCID</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:userInfo[1]/urn2:org[1]/urn2:homeCommunityId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orgHCName</con:name><con:sourceType>notifierName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:userInfo[1]/urn2:org[1]/urn2:name[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orgHCDescription</con:name><con:sourceType>notifierName</con:sourceType><con:sourceStep>Test Case Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Unsubscribe</con:targetStep><con:targetPath>declare namespace urn='urn:gov:hhs:fha:nhinc:common:nhinccommonentity';
declare namespace urn2='urn:gov:hhs:fha:nhinc:common:nhinccommon';
//urn:UnsubscribeRequest[1]/urn:assertion[1]/urn2:userInfo[1]/urn2:org[1]/urn2:description[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="Unsubscribe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EntitySubscriptionManagerBindingSoap</con:interface><con:operation>Unsubscribe</con:operation><con:request name="Unsubscribe" outgoingWss="" incomingWss="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://connectred5.fedsconnect.org:8080/CONNECTAdapter/EntitySubscriptionManager</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:nhin="http://www.hhs.gov/healthit/nhin" xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonentity" xmlns:urn1="urn:gov:hhs:fha:nhinc:common:subscription" xmlns:urn2="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header>
      <ns5:SubscriptionId xmlns="http://www.w3.org/2005/08/addressing" xmlns:ns2="http://docs.oasis-open.org/wsn/b-2" xmlns:ns3="http://docs.oasis-open.org/wsrf/bf-2" xmlns:ns4="http://docs.oasis-open.org/wsn/t-1" xmlns:ns5="http://www.hhs.gov/healthit/nhin">3faa694d-1b20-4887-a986-62b151f861c3</ns5:SubscriptionId>
      <nhinconnect:Info xmlns:nhinconnect="urn:nhinconnect">hello world</nhinconnect:Info>
   </soapenv:Header>
   <soapenv:Body>
      <urn:UnsubscribeRequest>
         <wsnt:Unsubscribe xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2">
            <nhinconnect:Info xmlns:nhinconnect="urn:nhinconnect">just some data</nhinconnect:Info>
         </wsnt:Unsubscribe>
         <urn:assertion xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon">
            <nccommon:address>
               <nccommon:addressType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>address</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>White</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:addressType>
               <nccommon:city>BUFFALO</nccommon:city>
               <nccommon:country>USA</nccommon:country>
               <nccommon:state>NY</nccommon:state>
               <nccommon:streetAddress>12345 EAST COAST WAY</nccommon:streetAddress>
               <nccommon:zipCode>01010</nccommon:zipCode>
            </nccommon:address>
            <nccommon:dateOfBirth>19800516</nccommon:dateOfBirth>
            <nccommon:dateOfSignature>04/12/2010 21:33:33</nccommon:dateOfSignature>
            <nccommon:expirationDate>05/12/2010 21:38:33</nccommon:expirationDate>
            <nccommon:explanationNonClaimantSignature>NEEDED</nccommon:explanationNonClaimantSignature>
            <nccommon:haveSecondWitnessSignature>true</nccommon:haveSecondWitnessSignature>
            <nccommon:haveSignature>true</nccommon:haveSignature>
            <nccommon:haveWitnessSignature>true</nccommon:haveWitnessSignature>
            <nccommon:homeCommunity>
               <nccommon:description>RED5</nccommon:description>
               <nccommon:homeCommunityId>RED5</nccommon:homeCommunityId>
               <nccommon:name>RED5</nccommon:name>
            </nccommon:homeCommunity>
            <nccommon:personName>
               <nccommon:familyName>JONES</nccommon:familyName>
               <nccommon:givenName>FRED</nccommon:givenName>
               <nccommon:nameType>
                  <nccommon:code>G</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>G</nccommon:displayName>
                  <nccommon:originalText>G</nccommon:originalText>
               </nccommon:nameType>
               <nccommon:secondNameOrInitials>ANDREW</nccommon:secondNameOrInitials>
            </nccommon:personName>
            <nccommon:phoneNumber>
               <nccommon:areaCode>703</nccommon:areaCode>
               <nccommon:countryCode>1</nccommon:countryCode>
               <nccommon:extension>1212</nccommon:extension>
               <nccommon:localNumber>555</nccommon:localNumber>
               <nccommon:phoneNumberType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>50</nccommon:codeSystem>
                  <nccommon:codeSystemName>phoneNumberType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Work</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:phoneNumberType>
            </nccommon:phoneNumber>
            <nccommon:purposeOfDisclosure>NEEDED FOR SSA</nccommon:purposeOfDisclosure>
            <nccommon:secondWitnessAddress>
               <nccommon:addressType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>address</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>White</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:addressType>
               <nccommon:city>ALBANY</nccommon:city>
               <nccommon:country>USA</nccommon:country>
               <nccommon:state>NY</nccommon:state>
               <nccommon:streetAddress>4 TROY STREET</nccommon:streetAddress>
               <nccommon:zipCode>01033</nccommon:zipCode>
            </nccommon:secondWitnessAddress>
            <nccommon:secondWitnessName>
               <nccommon:familyName>JONES</nccommon:familyName>
               <nccommon:givenName>JAMES</nccommon:givenName>
               <nccommon:nameType>
                  <nccommon:code>G</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>G</nccommon:displayName>
                  <nccommon:originalText>G</nccommon:originalText>
               </nccommon:nameType>
               <nccommon:secondNameOrInitials>KENNETH</nccommon:secondNameOrInitials>
            </nccommon:secondWitnessName>
            <nccommon:secondWitnessPhone>
               <nccommon:areaCode>301</nccommon:areaCode>
               <nccommon:countryCode>1</nccommon:countryCode>
               <nccommon:extension>555</nccommon:extension>
               <nccommon:localNumber>0001</nccommon:localNumber>
               <nccommon:phoneNumberType>
                  <nccommon:code>W</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>phoneNumberType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Work</nccommon:displayName>
                  <nccommon:originalText>W</nccommon:originalText>
               </nccommon:phoneNumberType>
            </nccommon:secondWitnessPhone>
            <nccommon:SSN>123456789</nccommon:SSN>
            <nccommon:uniquePatientId>D1234011</nccommon:uniquePatientId>
            <nccommon:witnessAddress>
               <nccommon:addressType>
                  <nccommon:code>H</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>address</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Home</nccommon:displayName>
                  <nccommon:originalText>H</nccommon:originalText>
               </nccommon:addressType>
               <nccommon:city>HARTFORD</nccommon:city>
               <nccommon:country>USA</nccommon:country>
               <nccommon:state>CT</nccommon:state>
               <nccommon:streetAddress>10410 MAIN ST.</nccommon:streetAddress>
               <nccommon:zipCode>05032</nccommon:zipCode>
            </nccommon:witnessAddress>
            <nccommon:witnessName>
               <nccommon:familyName>COREY</nccommon:familyName>
               <nccommon:givenName>AMANDA</nccommon:givenName>
               <nccommon:nameType>
                  <nccommon:code>H</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>H</nccommon:displayName>
                  <nccommon:originalText>H</nccommon:originalText>
               </nccommon:nameType>
               <nccommon:secondNameOrInitials>EVE</nccommon:secondNameOrInitials>
            </nccommon:witnessName>
            <nccommon:witnessPhone>
               <nccommon:areaCode>202</nccommon:areaCode>
               <nccommon:countryCode>1</nccommon:countryCode>
               <nccommon:extension>555</nccommon:extension>
               <nccommon:localNumber>1010</nccommon:localNumber>
               <nccommon:phoneNumberType>
                  <nccommon:code>H</nccommon:code>
                  <nccommon:codeSystem>30</nccommon:codeSystem>
                  <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>H</nccommon:displayName>
                  <nccommon:originalText>H</nccommon:originalText>
               </nccommon:phoneNumberType>
            </nccommon:witnessPhone>
            <nccommon:userInfo>
               <nccommon:personName>
                  <nccommon:familyName>FRANKLIN</nccommon:familyName>
                  <nccommon:givenName>MARK</nccommon:givenName>
                  <nccommon:nameType>
                     <nccommon:code>P</nccommon:code>
                     <nccommon:codeSystem>30</nccommon:codeSystem>
                     <nccommon:codeSystemName>nameType</nccommon:codeSystemName>
                     <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                     <nccommon:displayName>P</nccommon:displayName>
                     <nccommon:originalText>P</nccommon:originalText>
                  </nccommon:nameType>
                  <nccommon:secondNameOrInitials>ALAN</nccommon:secondNameOrInitials>
               </nccommon:personName>
               <nccommon:userName>mfranklin</nccommon:userName>
               <nccommon:role>Administrator</nccommon:role>
               <nccommon:org>
                  <nccommon:description>External Test Gateway R2.4.1</nccommon:description>
                  <nccommon:homeCommunityId>2.16.840.1.113883.3.333</nccommon:homeCommunityId>
                  <nccommon:name>External Test Gateway R2.4.1</nccommon:name>
               </nccommon:org>
               <nccommon:roleCoded>
                  <nccommon:code>307969004</nccommon:code>
                  <nccommon:codeSystem>2.16.840.1.113883.6.96</nccommon:codeSystem>
                  <nccommon:codeSystemName>SNOMED_CT</nccommon:codeSystemName>
                  <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
                  <nccommon:displayName>Public Health</nccommon:displayName>
                  <nccommon:originalText>Public Health</nccommon:originalText>
               </nccommon:roleCoded>
            </nccommon:userInfo>
            <nccommon:authorized>true</nccommon:authorized>
            <nccommon:purposeOfDisclosureCoded>
               <nccommon:code>PUBLICHEALTH</nccommon:code>
               <nccommon:codeSystem>2.16.840.1.113883.3.18.7.1</nccommon:codeSystem>
               <nccommon:codeSystemName>nhin-purpose</nccommon:codeSystemName>
               <nccommon:codeSystemVersion>1.0</nccommon:codeSystemVersion>
               <nccommon:displayName>Use or disclosure of Psychotherapy Notes</nccommon:displayName>
               <nccommon:originalText>Psychotherapy Notes</nccommon:originalText>
            </nccommon:purposeOfDisclosureCoded>
            <nccommon:claimFormRef>Ref-Clm-123</nccommon:claimFormRef>
            <nccommon:claimFormRaw>YWVvbGlhbQ==</nccommon:claimFormRaw>
         </urn:assertion>
         <urn:nhinTargetSystem>
            <urn2:url>https://connectred5.fedsconnect.org:8181/SubscriptionManagerService/HiemUnsubscribe</urn2:url>
         </urn:nhinTargetSystem>
      </urn:UnsubscribeRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:gov:hhs:fha:nhinc:entitysubscriptionmanagement/EntitySubscriptionManagerPortType/UnsubscribeRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Count Subscriptions = 0"><con:settings/><con:config><script>import groovy.sql.Sql;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def host = dataSource.getPropertyValue( "subscriberDBHost" );
def port = dataSource.getPropertyValue( "subscriberDBPort" );
def user = dataSource.getPropertyValue( "subscriberDBUser" );
def pass = dataSource.getPropertyValue( "subscriberDBPass" );
def db = dataSource.getPropertyValue( "subscriberSubscriptionDB" );
def table = dataSource.getPropertyValue( "subscriberSubscriptionTable" );
def unsubSubscriptionID = dataSource.getPropertyValue( "UnsubSubscriptionID" );
def startDate = dataSource.getPropertyValue( "startDate" );

int countRows(host, port, dbName, user, password, table, unsubSubscriptionID, startDate) {
   
   def sqlConnect = 'jdbc:mysql://' + host + ':' + port + '/' + dbName;
   def sql = Sql.newInstance(sqlConnect, user, password, "com.mysql.jdbc.Driver");
   def count = 0;
   sql.eachRow("select count(*) from " + table) { row ->
	count = row[0];
   }
   return count;
}

def count = countRows(host, port, db, user, pass, table, unsubSubscriptionID, startDate);
assert count == 0;</script></con:config></con:testStep><con:properties><con:property><con:name>startDate</con:name><con:value>2010-04-12T21:33:33Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2010-04-12T21:43:33Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>04/12/2010 21:33:33</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2010-05-12T00:00:00Z</con:value></con:property><con:property><con:name>nowDate</con:name><con:value>2010-04-12T21-38-33</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Notifier"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Step 1 - Clear Subscription Table &amp; Dirs" searchProperties="true" id="2c018280-1838-4548-8f10-67ff199f2cbb"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/Projects/NHINC/Current/Product/SoapUI_Test/ManualSuite/RepeatingNotifyTest-soapui-project.properties</con:source><con:properties><con:property><con:name>notifierName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>copyFile</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dumpDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>topic</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberEntityEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberNotifyEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberUnsubscribeEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>exportDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriptionID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NotifySubscriptionManagerEndpointAddress</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Clear fileTransfer dir"><con:settings/><con:config><script>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );

def dumpDir = propertyList.getPropertyValue( "dumpDir" );
assert dumpDir != null : "dumpDir"

dir = new File(dumpDir)


dir.eachFile { f -> 
  f.delete()
}
assert dir.list().size() == 0 : "Not Empty"
</script></con:config></con:testStep><con:testStep type="groovy" name="Clear Subscription Table - Notifier"><con:settings/><con:config><script>import groovy.sql.Sql;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def host = dataSource.getPropertyValue( "notifierDBHost" );
def port = dataSource.getPropertyValue( "notifierDBPort" );
def user = dataSource.getPropertyValue( "notifierDBUser" );
def pass = dataSource.getPropertyValue( "notifierDBPass" );
def db = dataSource.getPropertyValue( "notifierSubscriptionDB" );
def table = dataSource.getPropertyValue( "notifierSubscriptionTable" );

void clearTable(host, port, dbName, user, password, table) {
   
   def sqlConnect = 'jdbc:mysql://' + host + ':' + port + '/' + dbName;
   def sqlExecute = 'delete from ' + table;
   def sql = Sql.newInstance(sqlConnect, user, password, "com.mysql.jdbc.Driver");
   def result = sql.execute(sqlExecute);
   }

clearTable(host, port, db, user, pass, table);

</script></con:config></con:testStep><con:testStep type="groovy" name="Count Subscriptions = 0"><con:settings/><con:config><script>import groovy.sql.Sql;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def dataSource = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def host = dataSource.getPropertyValue( "notifierDBHost" );
def port = dataSource.getPropertyValue( "notifierDBPort" );
def user = dataSource.getPropertyValue( "notifierDBUser" );
def pass = dataSource.getPropertyValue( "notifierDBPass" );
def db = dataSource.getPropertyValue( "notifierSubscriptionDB" );
def table = dataSource.getPropertyValue( "notifierSubscriptionTable" );
def unsubSubscriptionID = dataSource.getPropertyValue( "UnsubSubscriptionID" );
def startDate = dataSource.getPropertyValue( "startDate" );

int countRows(host, port, dbName, user, password, table, unsubSubscriptionID, startDate) {
   
   def sqlConnect = 'jdbc:mysql://' + host + ':' + port + '/' + dbName;
   def sql = Sql.newInstance(sqlConnect, user, password, "com.mysql.jdbc.Driver");
   def count = 0;
   sql.eachRow("select count(*) from " + table) { row ->
	count = row[0];
   }
   return count;
}

def count = countRows(host, port, db, user, pass, table, unsubSubscriptionID, startDate);
assert count == 0;</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Step 2 - Copy file into File Transfer dir" searchProperties="true" id="0d23d9f1-aa35-4605-b931-c61949efe9db"><con:settings/><con:testStep type="properties" name="Test Case Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" createMissingOnLoad="true" discardValuesOnSave="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:source>C:/Projects/NHINC/Current/Product/SoapUI_Test/ManualSuite/RepeatingNotifyTest-soapui-project.properties</con:source><con:properties><con:property><con:name>subscriberName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberEntityEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberNotifyEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberUnsubscribeEndpoint</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>exportDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriptionID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>NotifySubscriptionManagerEndpointAddress</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>subscriberSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierHCID</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>copyFile</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>dumpDir</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>topic</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBHost</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPort</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBUser</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierDBPass</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierPatientCorrelationTable</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionDB</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>notifierSubscriptionTable</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Copy file into File Transfer dir"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );
def dumpDir = propertyList.getPropertyValue( "dumpDir" );
def copyFile = propertyList.getPropertyValue( "copyFile" );
def fileInDumpDir = dumpDir + "/file.txt";

log.info copyFile;
File myFile = new File(copyFile);
if(myFile.exists())
{
    log.info copyFile;
    new File(fileInDumpDir).withWriter 
    { 
        file -> new File(copyFile).eachLine 
        { 
            line -> file.writeLine(line)  
        }
    }
}
</script></con:config></con:testStep><con:testStep type="delay" name="35-Second Delay"><con:settings/><con:config><delay>35000</delay></con:config></con:testStep><con:testStep type="groovy" name="Verify File Transfer dir is empty"><con:settings/><con:config><script>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );

def propertyList = testRunner.testCase.getTestStepByName( "Test Case Properties" );

def dumpDir = propertyList.getPropertyValue( "dumpDir" );
assert dumpDir != null : "dumpDir"

dir = new File(dumpDir)
assert dir.list().size() == 0 : "Not Empty"
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>subscriberEntityEndpoint</con:name><con:value>http://localhost:8080/CONNECTAdapter/EntityNotificationProducer</con:value></con:property><con:property><con:name>notifierPatientCorrelationTable</con:name><con:value>correlatedidentifiers</con:value></con:property><con:property><con:name>notifierHCID</con:name><con:value>2.2</con:value></con:property><con:property><con:name>notifierName</con:name><con:value>2.2</con:value></con:property><con:property><con:name>subscriberDBUser</con:name><con:value>nhincuser</con:value></con:property><con:property><con:name>notifierDBPort</con:name><con:value>3306</con:value></con:property><con:property><con:name>dumpDir</con:name><con:value>C:/Users/borsts/Desktop/NotifyTest/Out</con:value></con:property><con:property><con:name>copyFile</con:name><con:value>C:/Users/borsts/Desktop/NotifyTest/NotifyTest.txt</con:value></con:property><con:property><con:name>subscriberPatientCorrelationTable</con:name><con:value>correlatedidentifiers</con:value></con:property><con:property><con:name>subscriberSubscriptionTable</con:name><con:value>subscription</con:value></con:property><con:property><con:name>subscriberDBPass</con:name><con:value>nhincpass</con:value></con:property><con:property><con:name>NotifySubscriptionManagerEndpointAddress</con:name><con:value>https://localhost:8181/SubscriptionManagerService/HiemUnsubscribe</con:value></con:property><con:property><con:name>subscriberSubscriptionDB</con:name><con:value>subscriptionrepository</con:value></con:property><con:property><con:name>exportDir</con:name><con:value>C:/Users/borsts/Desktop/NotifyTest/In</con:value></con:property><con:property><con:name>notifierDBHost</con:name><con:value>localhost</con:value></con:property><con:property><con:name>notifierSubscriptionTable</con:name><con:value>subscription</con:value></con:property><con:property><con:name>subscriberNotifyEndpoint</con:name><con:value>https://localhost:8181/CONNECTNhinServicesWeb/NhinService/NotificationConsumerService/HiemNotify</con:value></con:property><con:property><con:name>subscriberUnsubscribeEndpoint</con:name><con:value>http://localhost:8080/EntitySubscriptionManager/EntityUnsubscribeService</con:value></con:property><con:property><con:name>notifierSubscriptionDB</con:name><con:value>subscriptionrepository</con:value></con:property><con:property><con:name>notifierPatientCorrelationDB</con:name><con:value>patientcorrelationdb</con:value></con:property><con:property><con:name>topic</con:name><con:value>nhinc:NotifyTest</con:value></con:property><con:property><con:name>subscriberPatientCorrelationDB</con:name><con:value>patientcorrelationdb</con:value></con:property><con:property><con:name>subscriberHCID</con:name><con:value>1.1</con:value></con:property><con:property><con:name>subscriberDBPort</con:name><con:value>3306</con:value></con:property><con:property><con:name>subscriptionID</con:name><con:value>4ee549b9-112b-4aef-b2d4-0d2272d52e9c</con:value></con:property><con:property><con:name>subscriberName</con:name><con:value>1.1</con:value></con:property><con:property><con:name>subscriberDBHost</con:name><con:value>localhost</con:value></con:property><con:property><con:name>notifierDBUser</con:name><con:value>nhincuser</con:value></con:property><con:property><con:name>notifierDBPass</con:name><con:value>nhincpass</con:value></con:property></con:properties><con:afterLoadScript>def propertiesFilename = project.path[0..(project.path.size()-4)] + 'properties'
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
	def props = new Properties()
	props.load(new FileReader(propertiesFile))
	props.each { key, value ->
	    project.setPropertyValue(key, value)
	}
}


TimeZone.setDefault(TimeZone.getTimeZone("UTC"))
def testRunListener = [
  afterRun: { testRunner, runContext -> },
  afterStep: { testRunner, runContext, result -> },
  beforeStep: { testRunner, runContext -> },
  beforeStep: { testRunner, runContext, testStep -> },
  beforeRun: { testRunner, runContext -> 
    use (org.codehaus.groovy.runtime.TimeCategory) {
      def startDate = 5.minutes.ago
      def endDate = 5.minutes.from.now
      def expireDate = 30.days.from.now
      
      def df = "yyyy-MM-dd'T'HH:mm:ss'Z'"
      def dfSig = "MM/dd/yyyy' 'HH:mm:ss"

      runContext.testCase.setPropertyValue("startDate", startDate.format(df))
      runContext.testCase.setPropertyValue("endDate", endDate.format(df))
      runContext.testCase.setPropertyValue("sigDate", startDate.format(dfSig))
      runContext.testCase.setPropertyValue("expireDate", expireDate.format(df))
    }
  }   
] as com.eviware.soapui.model.testsuite.TestRunListener

project.testSuiteList*.testCaseList.flatten()*.addTestRunListener(testRunListener)



com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.findProperty = { propertyName ->
    return delegate.getProperty(propertyName) ?:
                delegate.testCase.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.project.getPropertyValue(propertyName)
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.withSql = { dbOrPropertyName, block ->
  def dbName = delegate.findProperty(dbOrPropertyName) ?: dbOrPropertyName
  def host = delegate.findProperty('DBHost')
  def port = delegate.findProperty('DBPort')
  def user = delegate.findProperty('DBUser')
  def pass = delegate.findProperty('DBPass')
  
  def connectString = "jdbc:mysql://${host}:${port}/${dbName}"
  def sql = groovy.sql.Sql.newInstance(connectString, user, pass, "com.mysql.jdbc.Driver");
  try {
     block(sql)
  } finally {
    sql.close()
  }
}
</con:afterLoadScript><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>