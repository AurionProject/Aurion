<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Adapter Policy Engine WSDL
  -->
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/"
   xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
   xmlns="http://schemas.xmlsoap.org/wsdl/" 
   xmlns:tns="urn:gov:hhs:fha:nhinc:adapterpolicyenginesecured"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
   xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" 
   xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
   xmlns:wsaws="http://www.w3.org/2005/08/addressing"
   xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
   xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
   xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"
   xmlns:sc="http://schemas.sun.com/2006/03/wss/server"
   xmlns:wspp="http://java.sun.com/xml/ns/wsit/policy"
   xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
   xmlns:sxnmp="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/NMProperty"
   xmlns:nccommonadapter="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter"
   name="AdapterPolicyEngine" 
   targetNamespace="urn:gov:hhs:fha:nhinc:adapterpolicyenginesecured" xmlns:wsp1="http://www.w3.org/ns/ws-policy" xmlns:sc1="http://schemas.sun.com/2006/03/wss/client">
  <documentation>Adapter Policy Engine</documentation>
  <types>
    <xsd:schema>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommonadapter"
                  schemaLocation="../schemas/nhinc/common/NhincCommonAdapter.xsd"/>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:gateway:samltokendata"
                  schemaLocation="../schemas/nhinc/gateway/SamlTokenData.xsd"/>
    </xsd:schema>
  </types>

  <message name="CheckPolicyRequestMessage">
    <part name="body"
          element="nccommonadapter:CheckPolicyRequestSecured"/>
  </message>
  <message name="CheckPolicyResponseMessage">
    <part name="body"
          element="nccommonadapter:CheckPolicyResponse"/>
  </message>

  <portType name="AdapterPolicyEngineSecuredPortType">
    <operation name="CheckPolicy">
      <input name="CheckPolicyRequest"
             message="tns:CheckPolicyRequestMessage" />
      <output name="CheckPolicyResponse"
              message="tns:CheckPolicyResponseMessage" />
    </operation>
  </portType>

  <binding name="AdapterPolicyEngineSecuredBindingSoap" type="tns:AdapterPolicyEngineSecuredPortType">
    <wsp1:PolicyReference URI="#AdapterPolicyEngineSecuredBindingSoapPolicy"/>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="CheckPolicy">
      <soap:operation soapAction="urn:CheckPolicy"/>
      <input name="CheckPolicyRequest">
        <soap:body use="literal"/>
      </input>
      <output name="CheckPolicyResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>

  <service name="AdapterPolicyEngineSecured">
    <port name="AdapterPolicyEngineSecuredPortSoap"
          binding="tns:AdapterPolicyEngineSecuredBindingSoap">
      <soap:address
         location="https://localhost:${HttpsDefaultPort}/NhinConnect/AdapterPolicyEngineSecured" />
    </port>
  </service>

  <!-- Define action property on each receiving message -->
  <vprop:property name="action" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:action"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>action</vprop:query>
  </vprop:propertyAlias>
  <!-- Define resource property on each receiving message -->
  <vprop:property name="resource" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:resource"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>resource</vprop:query>
  </vprop:propertyAlias>
  <!-- Define purposeOfUseRoleCode property on each receiving message -->
  <vprop:property name="purposeOfUseRoleCode" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:purposeOfUseRoleCode"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>purposeOfUseRoleCode</vprop:query>
  </vprop:propertyAlias>
  <!-- Define purposeOfUseCodeSystem property on each receiving message -->
  <vprop:property name="purposeOfUseCodeSystem" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:purposeOfUseCodeSystem"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>purposeOfUseCodeSystem</vprop:query>
  </vprop:propertyAlias>
  <!-- Define purposeOfUseCodeSystemName property on each receiving message -->
  <vprop:property name="purposeOfUseCodeSystemName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:purposeOfUseCodeSystemName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>purposeOfUseCodeSystemName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define purposeOfUseDisplayName property on each receiving message -->
  <vprop:property name="purposeOfUseDisplayName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:purposeOfUseDisplayName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>purposeOfUseDisplayName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userFirstName property on each receiving message -->
  <vprop:property name="userFirstName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userFirstName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userFirstName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userMiddleName property on each receiving message -->
  <vprop:property name="userMiddleName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userMiddleName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userMiddleName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userLastName property on each receiving message -->
  <vprop:property name="userLastName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userLastName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userLastName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userName property on each receiving message -->
  <vprop:property name="userName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userOrganization property on each receiving message -->
  <vprop:property name="userOrganization" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userOrganization"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userOrganization</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userRoleCode property on each receiving message -->
  <vprop:property name="userRoleCode" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userRoleCode"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userRoleCode</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userRoleCodeSystem property on each receiving message -->
  <vprop:property name="userRoleCodeSystem" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userRoleCodeSystem"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userRoleCodeSystem</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userRoleCodeSystemName property on each receiving message -->
  <vprop:property name="userRoleCodeSystemName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userRoleCodeSystemName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userRoleCodeSystemName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define userRoleCodeDisplayName property on each receiving message -->
  <vprop:property name="userRoleCodeDisplayName" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:userRoleCodeDisplayName"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>userRoleCodeDisplayName</vprop:query>
  </vprop:propertyAlias>
  <!-- Define expirationDate property on each receiving message -->
  <vprop:property name="expirationDate" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:expirationDate"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>expirationDate</vprop:query>
  </vprop:propertyAlias>
  <!-- Define signDate property on each receiving message -->
  <vprop:property name="signDate" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:signDate"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>signDate</vprop:query>
  </vprop:propertyAlias>
  <!-- Define contentReference property on each receiving message -->
  <vprop:property name="contentReference" type="xsd:string"/>
  <vprop:propertyAlias propertyName="tns:contentReference"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>contentReference</vprop:query>
  </vprop:propertyAlias>
  <!-- Define content property on each receiving message -->
  <vprop:property name="content" type="xsd:base64Binary"/>
  <vprop:propertyAlias propertyName="tns:content"
     messageType="tns:CheckPolicyRequestMessage" part="body"
     sxnmp:nmProperty="org.glassfish.openesb.outbound.custom.properties">
        <vprop:query>content</vprop:query>
  </vprop:propertyAlias>

  <plnk:partnerLinkType name="AdapterPolicyEngineSecured">
    <!-- A partner link type is automatically generated when a new port type is added.
         Partner link types are used by BPEL processes. In a BPEL process, a partner
         link represents the interaction between the BPEL process and a partner service.
         Each partner link is associated with a partner link type. A partner link type
         characterizes the conversational relationship between two services. The
         partner link type can have one or two roles.-->
    <plnk:role name="AdapterPolicyEngineSecuredPortTypeRole"
               portType="tns:AdapterPolicyEngineSecuredPortType"/>
  </plnk:partnerLinkType>
  <wsp1:Policy wsu:Id="AdapterPolicyEngineSecuredBindingSoapPolicy">
    <wsp1:ExactlyOne>
      <wsp1:All>
        <sc1:KeyStore wspp:visibility="private"
                    aliasSelector="gov.hhs.fha.nhinc.callback.KeyStoreClientAliasSelector"
                    callbackHandler="gov.hhs.fha.nhinc.callback.KeyStoreCallbackHandler"/>
        <sc1:TrustStore wspp:visibility="private"
                certSelector = "gov.hhs.fha.nhinc.callback.TrustStoreAliasSelector"
                callbackHandler="gov.hhs.fha.nhinc.callback.TrustStoreCallbackHandler"/>

        <sc1:CallbackHandlerConfiguration wspp:visibility="private">
          <sc1:CallbackHandler name="samlHandler" classname="gov.hhs.fha.nhinc.callback.SamlCallbackHandler"/>
        </sc1:CallbackHandlerConfiguration>
      </wsp1:All>
    </wsp1:ExactlyOne>
  </wsp1:Policy>
</definitions>

